{"ast":null,"code":"export default {\n  data() {\n    return {\n      // 原有数据\n      loading: false // 新增加载状态\n    };\n  },\n  methods: {\n    async passwordSubmit() {\n      if (!this.oldPassword || !this.newPassword) {\n        this.$message.warning('请填写完整密码信息');\n        return;\n      }\n      if (this.newPassword.length < 8) {\n        this.$message.warning('新密码长度不能少于8位');\n        return;\n      }\n      this.loading = true;\n      try {\n        const param = {\n          id: this.user.id,\n          password: this.oldPassword,\n          newPassword: this.newPassword\n        };\n        const res = await changePassword(param);\n        if (res.code == 1000) {\n          this.$notify.success({\n            title: '成功',\n            message: \"密码修改成功，请重新登录\",\n            duration: 2000\n          });\n          this.handlePasswordClose();\n          // 这里可以添加自动跳转到登录页的逻辑\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '密码修改失败',\n            duration: 2000\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        this.$notify.error({\n          title: '错误',\n          message: '请求异常，请稍后重试',\n          duration: 2000\n        });\n      } finally {\n        this.loading = false;\n      }\n    }\n    // 其他方法保持不变\n  }\n};","map":{"version":3,"names":["data","loading","methods","passwordSubmit","oldPassword","newPassword","$message","warning","length","param","id","user","password","res","changePassword","code","$notify","success","title","message","duration","handlePasswordClose","error","console"],"sources":["src/components/layout/main.vue"],"sourcesContent":["<template>\r\n  <el-main class=\"el-main\">\r\n    <!-- 修改密码对话框 -->\r\n    <el-dialog\r\n      title=\"修改密码\"\r\n      :visible.sync=\"passwordDialogVisible\"\r\n      width=\"450px\"\r\n      custom-class=\"password-dialog\"\r\n      :before-close=\"handlePasswordClose\"\r\n      :close-on-click-modal=\"false\">\r\n      \r\n      <div class=\"dialog-content\">\r\n        <div class=\"input-field\">\r\n          <label class=\"input-label\">当前密码</label>\r\n          <el-input \r\n            show-password \r\n            v-model=\"oldPassword\" \r\n            size=\"medium\"\r\n            placeholder=\"请输入当前密码\"\r\n            autocomplete=\"off\"\r\n            class=\"password-input\">\r\n          </el-input>\r\n        </div>\r\n        \r\n        <div class=\"input-field\" style=\"margin-top: 20px;\">\r\n          <label class=\"input-label\">新密码</label>\r\n          <el-input \r\n            show-password \r\n            v-model=\"newPassword\" \r\n            size=\"medium\"\r\n            placeholder=\"请输入新密码（至少8位）\"\r\n            autocomplete=\"off\"\r\n            class=\"password-input\">\r\n          </el-input>\r\n          <div class=\"password-tips\">建议使用字母、数字和符号的组合</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button \r\n          size=\"medium\" \r\n          @click=\"handlePasswordClose\"\r\n          class=\"cancel-btn\">\r\n          取消\r\n        </el-button>\r\n        <el-button \r\n          size=\"medium\" \r\n          type=\"primary\" \r\n          @click=\"passwordSubmit\"\r\n          class=\"confirm-btn\"\r\n          :loading=\"loading\">\r\n          确认修改\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n      <div class=\"setting\">\r\n            <img style=\"width:40px;height:40px\" src=\"../../assets/image/setting.gif\">\r\n          </div>\r\n          <keep-alive max=10>\r\n            <router-view :key=\"fullPath\"></router-view>\r\n          </keep-alive>\r\n    </el-main>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 原有数据\r\n      loading: false // 新增加载状态\r\n    }\r\n  },\r\n  methods: {\r\n    async passwordSubmit() {\r\n      if (!this.oldPassword || !this.newPassword) {\r\n        this.$message.warning('请填写完整密码信息');\r\n        return;\r\n      }\r\n      \r\n      if (this.newPassword.length < 8) {\r\n        this.$message.warning('新密码长度不能少于8位');\r\n        return;\r\n      }\r\n\r\n      this.loading = true;\r\n      \r\n      try {\r\n        const param = {\r\n          id: this.user.id,\r\n          password: this.oldPassword,\r\n          newPassword: this.newPassword\r\n        };\r\n        \r\n        const res = await changePassword(param);\r\n        \r\n        if(res.code == 1000) {\r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: \"密码修改成功，请重新登录\",\r\n            duration: 2000\r\n          });\r\n          this.handlePasswordClose();\r\n          // 这里可以添加自动跳转到登录页的逻辑\r\n        } else {\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: res.message || '密码修改失败',\r\n            duration: 2000\r\n          });\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: '请求异常，请稍后重试',\r\n          duration: 2000\r\n        });\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    },\r\n    // 其他方法保持不变\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 原有样式保持不变 */\r\n\r\n/* 新增对话框样式 */\r\n.password-dialog {\r\n  border-radius: 12px;\r\n  overflow: hidden;\r\n}\r\n\r\n.dialog-content {\r\n  padding: 20px 30px;\r\n}\r\n\r\n.input-field {\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.input-label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-size: 14px;\r\n  color: #606266;\r\n  font-weight: 500;\r\n}\r\n\r\n.password-input {\r\n  width: 100%;\r\n}\r\n\r\n.password-input >>> .el-input__inner {\r\n  height: 40px;\r\n  line-height: 40px;\r\n  border-radius: 6px;\r\n  border: 1px solid #DCDFE6;\r\n  transition: border-color 0.3s;\r\n}\r\n\r\n.password-input >>> .el-input__inner:focus {\r\n  border-color: #409EFF;\r\n  box-shadow: 0 0 0 2px rgba(64, 158, 255, 0.1);\r\n}\r\n\r\n.password-tips {\r\n  font-size: 12px;\r\n  color: #909399;\r\n  margin-top: 6px;\r\n  padding-left: 2px;\r\n}\r\n\r\n.dialog-footer {\r\n  padding: 15px 30px;\r\n  text-align: right;\r\n  border-top: 1px solid #EBEEF5;\r\n}\r\n\r\n.cancel-btn {\r\n  width: 100px;\r\n}\r\n\r\n.confirm-btn {\r\n  width: 120px;\r\n  background: linear-gradient(90deg, #409EFF, #66B1FF);\r\n  border: none;\r\n}\r\n\r\n.confirm-btn:hover {\r\n  background: linear-gradient(90deg, #66B1FF, #409EFF);\r\n}\r\n</style>"],"mappings":"AAiEA;EACAA,KAAA;IACA;MACA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,eAAA;MACA,UAAAC,WAAA,UAAAC,WAAA;QACA,KAAAC,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,SAAAF,WAAA,CAAAG,MAAA;QACA,KAAAF,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,KAAAN,OAAA;MAEA;QACA,MAAAQ,KAAA;UACAC,EAAA,OAAAC,IAAA,CAAAD,EAAA;UACAE,QAAA,OAAAR,WAAA;UACAC,WAAA,OAAAA;QACA;QAEA,MAAAQ,GAAA,SAAAC,cAAA,CAAAL,KAAA;QAEA,IAAAI,GAAA,CAAAE,IAAA;UACA,KAAAC,OAAA,CAAAC,OAAA;YACAC,KAAA;YACAC,OAAA;YACAC,QAAA;UACA;UACA,KAAAC,mBAAA;UACA;QACA;UACA,KAAAL,OAAA,CAAAM,KAAA;YACAJ,KAAA;YACAC,OAAA,EAAAN,GAAA,CAAAM,OAAA;YACAC,QAAA;UACA;QACA;MACA,SAAAE,KAAA;QACAC,OAAA,CAAAD,KAAA,CAAAA,KAAA;QACA,KAAAN,OAAA,CAAAM,KAAA;UACAJ,KAAA;UACAC,OAAA;UACAC,QAAA;QACA;MACA;QACA,KAAAnB,OAAA;MACA;IACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}