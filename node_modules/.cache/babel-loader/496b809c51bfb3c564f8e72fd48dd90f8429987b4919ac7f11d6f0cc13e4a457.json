{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { login, getUser, sendEmailCode, loginWithEmail } from '../../../api/api';\nimport { setLock } from '@/utils/lock';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      loginType: 'account',\n      // 登录方式切换\n      emailInfo: {\n        email: '',\n        code: ''\n      },\n      isSending: false,\n      countdown: 60,\n      timer: null\n    };\n  },\n  mounted() {\n    this.initParticles();\n  },\n  created() {\n    // 检查是否是密码修改后的跳转\n    if (this.$route.query.passwordChanged) {\n      this.$notify.success({\n        title: '提示',\n        message: '密码修改成功，请使用新密码登录',\n        duration: 5000\n      });\n\n      // 清除query参数避免刷新后重复显示\n      const query = {\n        ...this.$route.query\n      };\n      delete query.passwordChanged;\n      this.$router.replace({\n        ...this.$route,\n        query\n      });\n    }\n  },\n  methods: {\n    sendCode() {\n      if (!this.emailInfo.email) {\n        this.$message({\n          message: '请输入邮箱',\n          type: 'warning'\n        });\n        return;\n      }\n      this.$loading({\n        lock: true,\n        text: '正在发送验证码...',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      sendEmailCode(this.emailInfo.email).then(() => {\n        this.$message.success('验证码发送成功');\n        this.isSending = true;\n        this.countdown = 60;\n        this.timer = setInterval(() => {\n          this.countdown--;\n          if (this.countdown <= 0) {\n            clearInterval(this.timer);\n            this.isSending = false;\n          }\n        }, 1000);\n      }).catch(() => {\n        this.$message.error('验证码发送失败');\n      });\n    },\n    toEmailLogin() {\n      const {\n        email,\n        code\n      } = this.emailInfo;\n      if (!email || !code) {\n        this.$message.warning('请填写邮箱和验证码');\n        return;\n      }\n      loginWithEmail(email, code).then(res => {\n        if (res.code === 1000) {\n          this.$message.success('登录成功');\n          const token = res.data.token;\n\n          // 1. 设置 token\n          localStorage.setItem('user_token', token);\n\n          // 2. 获取用户信息\n          this.getUserInfo().then(() => {\n            // 3. 跳转\n            this.$router.push('/');\n          });\n        } else {\n          this.$message.error(res.message);\n        }\n      }).catch(() => {\n        this.$message.error('登录失败');\n      });\n    },\n    toRegister() {\n      this.$router.push(\"/register\");\n    },\n    toTeacherRegister() {\n      this.$router.push(\"/teacherRegister\");\n    },\n    toLogin() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          var params = {\n            username: this.userInfo.username,\n            password: this.userInfo.password\n          };\n          login(params).then(res => {\n            if (res.code == 1000) {\n              this.$message({\n                message: '登录成功',\n                type: 'success'\n              });\n              var that = this;\n              var token = res.data.token;\n              window.localStorage.setItem(\"user_token\", token);\n              this.getUserInfo();\n              setTimeout(function () {\n                that.$router.push(\"/\");\n              }, 500);\n            } else {\n              this.$message.error(res.message);\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    login() {\n      if (!this.username) {\n        this.$message({\n          message: '请输入用户名',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.password) {\n        this.$message({\n          message: '请输入密码',\n          type: 'warning'\n        });\n        return;\n      }\n      var params = {\n        username: this.username,\n        password: this.password\n      };\n      this.$loading({\n        lock: true,\n        text: '正在登录...',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      login(params).then(res => {\n        this.$loading().close();\n        if (res.code == 1000) {\n          this.$message({\n            message: '登录成功',\n            type: 'success'\n          });\n          var token = res.data.token;\n          this.$store.commit('user/setToken', token);\n          this.getUserInfo().then(() => {\n            setLock(false);\n\n            // 获取redirect参数，默认跳转到首页\n            const redirect = this.$route.query.redirect || '/index';\n            this.$router.push(redirect);\n          });\n        } else {\n          this.$message.error(res.message);\n        }\n      }).catch(error => {\n        this.$loading().close();\n        this.$message.error('登录失败，请稍后重试');\n      });\n    },\n    getUserInfo() {\n      return new Promise((resolve, reject) => {\n        getUser().then(res => {\n          if (res.code == 1000) {\n            this.$store.commit('user/setUser', JSON.stringify(res.data));\n            resolve();\n          } else {\n            reject(res.message);\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    initParticles() {\n      const canvas = document.getElementById('particle-canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n\n      // 深紫色系粒子配置 - 更专业的色调\n      const particles = [];\n      const particleCount = 80;\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399'];\n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 1,\n          // 稍小的粒子\n          speedX: Math.random() * 0.3 - 0.15,\n          // 更慢的速度\n          speedY: Math.random() * 0.3 - 0.15,\n          color: colors[Math.floor(Math.random() * colors.length)]\n        });\n      }\n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        particles.forEach(particle => {\n          ctx.beginPath();\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          particle.x += particle.speedX;\n          particle.y += particle.speedY;\n          if (particle.x < 0 || particle.x > canvas.width) {\n            particle.speedX *= -1;\n          }\n          if (particle.y < 0 || particle.y > canvas.height) {\n            particle.speedY *= -1;\n          }\n          particles.forEach(other => {\n            const distance = Math.sqrt(Math.pow(particle.x - other.x, 2) + Math.pow(particle.y - other.y, 2));\n            if (distance < 120) {\n              // 更短的连接线\n              ctx.beginPath();\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance / 120})`;\n              ctx.lineWidth = 0.3; // 更细的连接线\n              ctx.moveTo(particle.x, particle.y);\n              ctx.lineTo(other.x, other.y);\n              ctx.stroke();\n            }\n          });\n        });\n        requestAnimationFrame(animate);\n      };\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["login","getUser","sendEmailCode","loginWithEmail","setLock","data","username","password","loginType","emailInfo","email","code","isSending","countdown","timer","mounted","initParticles","created","$route","query","passwordChanged","$notify","success","title","message","duration","$router","replace","methods","sendCode","$message","type","$loading","lock","text","spinner","background","then","setInterval","clearInterval","catch","error","toEmailLogin","warning","res","token","localStorage","setItem","getUserInfo","push","toRegister","toTeacherRegister","toLogin","$refs","validate","valid","params","userInfo","that","window","setTimeout","close","$store","commit","redirect","Promise","resolve","reject","JSON","stringify","canvas","document","getElementById","ctx","getContext","width","innerWidth","height","innerHeight","particles","particleCount","colors","i","x","Math","random","y","size","speedX","speedY","color","floor","length","animate","clearRect","forEach","particle","beginPath","arc","PI","fillStyle","fill","other","distance","sqrt","pow","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame"],"sources":["src/views/system/login/login.vue"],"sourcesContent":["<template>\r\n<div class=\"login-container\">\r\n    <!-- 粒子背景画布 -->\r\n    <canvas id=\"particle-canvas\"></canvas>\r\n    \r\n    <!-- 左侧内容区域 - 增强版 -->\r\n    <div class=\"left-content\">\r\n      <div class=\"logo-area\" style=\"padding-top: 30px;\">\r\n        <img style=\"width:300px; padding-left:0px; margin-top:20px;\" src=\"@/assets/image/systemlogo.png\" />\r\n        <div class=\"platform-role\">教师 · 管理中枢</div>\r\n      </div>\r\n      \r\n      <div class=\"feature-list\">\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-data\"></i>\r\n          <span>学情数据分析</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-notebook-2\"></i>\r\n          <span>课程内容管理</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-check\"></i>\r\n          <span>作业批改系统</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-chat-line-round\"></i>\r\n          <span>师生互动平台</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"quote-area\">\r\n        <p class=\"quote-text\">\"教育不是灌输，而是点燃火焰\"</p>\r\n        <p class=\"quote-author\">—— 苏格拉底 ——</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 右侧登录卡片 -->\r\n    <div class=\"login-card\">\r\n      <h2 class=\"slogan-en\">TEACH WITH INTELLIGENCE</h2>\r\n      <p class=\"slogan-cn\">智能教育管理平台，赋能高效教学</p>\r\n      \r\n      <div class=\"divider\"></div>\r\n      \r\n      <p class=\"sub-slogan\">精准掌握每位学生的学习轨迹<br>用数据驱动个性化教学方案</p>\r\n      \r\n      <div class=\"login-form\">\r\n        <!-- 登录方式切换 -->\r\n        <div class=\"login-type-switch\">\r\n          <span\r\n            :class=\"['login-type-option', loginType === 'account' ? 'active' : '']\"\r\n            @click=\"loginType = 'account'\"\r\n          >\r\n            账号密码登录\r\n          </span>\r\n          <span\r\n            :class=\"['login-type-option', loginType === 'email' ? 'active' : '']\"\r\n            @click=\"loginType = 'email'\"\r\n          >\r\n            邮箱验证码登录\r\n          </span>\r\n        </div>\r\n\r\n        <!-- 账号密码登录表单 -->\r\n        <div v-if=\"loginType === 'account'\">\r\n          <el-input\r\n            v-model=\"username\"\r\n            placeholder=\"工号/用户名\"\r\n            prefix-icon=\"el-icon-user\"\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n          \r\n          <el-input\r\n            v-model=\"password\"\r\n            placeholder=\"密码\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n          \r\n          <el-button \r\n            type=\"primary\" \r\n            class=\"login-btn\"\r\n            @click=\"login\"\r\n          >\r\n            登 录\r\n          </el-button>\r\n        </div>\r\n\r\n        <!-- 邮箱验证码登录表单 -->\r\n        <div v-else>\r\n          <el-input\r\n            v-model=\"emailInfo.email\"\r\n            placeholder=\"请输入邮箱\"\r\n            prefix-icon=\"el-icon-message\"\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n          \r\n          <div style=\"display: flex;\">\r\n            <el-input\r\n              v-model=\"emailInfo.code\"\r\n              placeholder=\"请输入验证码\"\r\n              prefix-icon=\"el-icon-key\"\r\n              class=\"custom-input\"\r\n              style=\"flex: 1; margin-right: 10px;\"\r\n            ></el-input>\r\n            <el-button \r\n              :disabled=\"isSending\"\r\n              @click=\"sendCode\"\r\n              style=\"width: 120px;\"\r\n            >\r\n              {{ isSending ? countdown + 's 后重发' : '获取验证码' }}\r\n            </el-button>\r\n          </div>\r\n          \r\n          <el-button \r\n            type=\"primary\" \r\n            class=\"login-btn\"\r\n            @click=\"emailLogin\"\r\n          >\r\n            登 录\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"footer\">\r\n        <p>—— 让科技赋能每一份教育热忱 ——</p>\r\n        <p class=\"en-footer\">Where Innovation Meets Education</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {login,getUser,sendEmailCode, loginWithEmail} from '../../../api/api'\r\nimport { setLock } from '@/utils/lock'\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      loginType: 'account', // 登录方式切换\r\n      emailInfo: {\r\n        email: '',\r\n        code: ''\r\n      },\r\n      isSending: false,\r\n      countdown: 60,\r\n      timer: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initParticles()\r\n  },\r\n  created() {\r\n    // 检查是否是密码修改后的跳转\r\n    if (this.$route.query.passwordChanged) {\r\n      this.$notify.success({\r\n        title: '提示',\r\n        message: '密码修改成功，请使用新密码登录',\r\n        duration: 5000\r\n      });\r\n      \r\n      // 清除query参数避免刷新后重复显示\r\n      const query = {...this.$route.query};\r\n      delete query.passwordChanged;\r\n      this.$router.replace({...this.$route, query});\r\n    }\r\n  },\r\n  methods: {\r\n    sendCode() {\r\n      if (!this.emailInfo.email) {\r\n        this.$message({\r\n          message: '请输入邮箱',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n      \r\n      this.$loading({\r\n        lock: true,\r\n        text: '正在发送验证码...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      });\r\n      \r\n      sendEmailCode(this.emailInfo.email).then(() => {\r\n        this.$message.success('验证码发送成功')\r\n        this.isSending = true\r\n        this.countdown = 60\r\n        this.timer = setInterval(() => {\r\n          this.countdown--\r\n          if (this.countdown <= 0) {\r\n            clearInterval(this.timer)\r\n            this.isSending = false\r\n          }\r\n        }, 1000)\r\n      }).catch(() => {\r\n        this.$message.error('验证码发送失败')\r\n      })\r\n    },\r\n    \r\n    toEmailLogin() {\r\n      const { email, code } = this.emailInfo\r\n      if (!email || !code) {\r\n        this.$message.warning('请填写邮箱和验证码')\r\n        return\r\n      }\r\n\r\n      loginWithEmail(email, code).then(res => {\r\n        if (res.code === 1000) {\r\n          this.$message.success('登录成功')\r\n          const token = res.data.token\r\n\r\n          // 1. 设置 token\r\n          localStorage.setItem('user_token', token)\r\n\r\n          // 2. 获取用户信息\r\n          this.getUserInfo().then(() => {\r\n            // 3. 跳转\r\n            this.$router.push('/')\r\n          })\r\n\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      }).catch(() => {\r\n        this.$message.error('登录失败')\r\n      })\r\n    },\r\n\t\ttoRegister() {\r\n\t\t\tthis.$router.push(\"/register\")\r\n\t\t},\r\n\t\ttoTeacherRegister() {\r\n\t\t\tthis.$router.push(\"/teacherRegister\")\r\n\t\t},\r\n\t\ttoLogin() {\r\n\t\t\tthis.$refs[\"ruleForm\"].validate((valid) => {\r\n\t\t\t\tif (valid) {\r\n\t\t\t\t\tvar params = {\r\n\t\t\t\t\t\tusername: this.userInfo.username,\r\n\t\t\t\t\t\tpassword: this.userInfo.password\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlogin(params).then(res => {\r\n\t\t\t\t\t\tif(res.code == 1000) {\r\n\t\t\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\t\t\tmessage: '登录成功',\r\n\t\t\t\t\t\t\t\ttype: 'success'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tvar that = this\r\n\t\t\t\t\t\t\tvar token = res.data.token\r\n\r\n              window.localStorage.setItem(\"user_token\",token)\r\n\t\t\t\t\t\t\tthis.getUserInfo()\r\n\t\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\t\tthat.$router.push(\"/\")\r\n\t\t\t\t\t\t\t},500)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.$message.error(res.message);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n    \r\n    login() {\r\n      if(!this.username) {\r\n        this.$message({\r\n          message: '请输入用户名',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n      if(!this.password) {\r\n        this.$message({\r\n          message: '请输入密码',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n      \r\n      var params = {\r\n        username: this.username,\r\n        password: this.password\r\n      }\r\n      \r\n      this.$loading({\r\n        lock: true,\r\n        text: '正在登录...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      });\r\n      \r\n      login(params).then(res => {\r\n        this.$loading().close();\r\n        \r\n        if(res.code == 1000) {\r\n          this.$message({\r\n            message: '登录成功',\r\n            type: 'success'\r\n          });\r\n          \r\n          var token = res.data.token;\r\n          this.$store.commit('user/setToken', token);\r\n          \r\n          this.getUserInfo().then(() => {\r\n            setLock(false);\r\n            \r\n            // 获取redirect参数，默认跳转到首页\r\n            const redirect = this.$route.query.redirect || '/index';\r\n            this.$router.push(redirect);\r\n          });\r\n          \r\n        } else {\r\n          this.$message.error(res.message);\r\n        }\r\n      }).catch(error => {\r\n        this.$loading().close();\r\n        this.$message.error('登录失败，请稍后重试');\r\n      });\r\n    },\r\n\r\n    getUserInfo() {\r\n      return new Promise((resolve, reject) => {\r\n        getUser().then(res => {\r\n          if(res.code == 1000) {\r\n            this.$store.commit('user/setUser', JSON.stringify(res.data));\r\n            resolve();\r\n          } else {\r\n            reject(res.message);\r\n          }\r\n        }).catch(error => {\r\n          reject(error);\r\n        });\r\n      });\r\n    },\r\n\r\n    initParticles() {\r\n      const canvas = document.getElementById('particle-canvas')\r\n      const ctx = canvas.getContext('2d')\r\n      canvas.width = window.innerWidth\r\n      canvas.height = window.innerHeight\r\n      \r\n      // 深紫色系粒子配置 - 更专业的色调\r\n      const particles = []\r\n      const particleCount = 80\r\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399']\r\n      \r\n      for (let i = 0; i < particleCount; i++) {\r\n        particles.push({\r\n          x: Math.random() * canvas.width,\r\n          y: Math.random() * canvas.height,\r\n          size: Math.random() * 3 + 1, // 稍小的粒子\r\n          speedX: Math.random() * 0.3 - 0.15, // 更慢的速度\r\n          speedY: Math.random() * 0.3 - 0.15,\r\n          color: colors[Math.floor(Math.random() * colors.length)]\r\n        })\r\n      }\r\n      \r\n      const animate = () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n        \r\n        particles.forEach(particle => {\r\n          ctx.beginPath()\r\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2)\r\n          ctx.fillStyle = particle.color\r\n          ctx.fill()\r\n          \r\n          particle.x += particle.speedX\r\n          particle.y += particle.speedY\r\n          \r\n          if (particle.x < 0 || particle.x > canvas.width) {\r\n            particle.speedX *= -1\r\n          }\r\n          if (particle.y < 0 || particle.y > canvas.height) {\r\n            particle.speedY *= -1\r\n          }\r\n          \r\n          particles.forEach(other => {\r\n            const distance = Math.sqrt(\r\n              Math.pow(particle.x - other.x, 2) + \r\n              Math.pow(particle.y - other.y, 2)\r\n            )\r\n            if (distance < 120) { // 更短的连接线\r\n              ctx.beginPath()\r\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance/120})`\r\n              ctx.lineWidth = 0.3 // 更细的连接线\r\n              ctx.moveTo(particle.x, particle.y)\r\n              ctx.lineTo(other.x, other.y)\r\n              ctx.stroke()\r\n            }\r\n          })\r\n        })\r\n        \r\n        requestAnimationFrame(animate)\r\n      }\r\n      \r\n      animate()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #ffffff;\r\n  overflow: hidden;\r\n  display: flex;\r\n  font-family: 'Microsoft YaHei', sans-serif;\r\n}\r\n\r\n#particle-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n\r\n/* 新增左侧内容区域样式 */\r\n.left-content {\r\n  width: 50%;\r\n  padding: 80px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  z-index: 2;\r\n}\r\n\r\n.logo-area {\r\n  margin-bottom: 80px;\r\n}\r\n\r\n.platform-name {\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  color: #4B0082;\r\n  letter-spacing: 2px;\r\n  margin-bottom: 15px;\r\n  text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.platform-role {\r\n  font-size: 24px;\r\n  color: #6A5ACD;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.feature-list {\r\n  margin: 60px 0;\r\n}\r\n\r\n.feature-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 35px;\r\n  color: #4B0082;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n}\r\n\r\n.feature-item i {\r\n  margin-right: 20px;\r\n  font-size: 28px;\r\n  color: #6A5ACD;\r\n}\r\n\r\n.quote-area {\r\n  color: #555;\r\n  font-style: italic;\r\n  line-height: 1.8;\r\n  margin-top: 60px;\r\n}\r\n\r\n.quote-text {\r\n  font-size: 26px;\r\n  line-height: 1.5;\r\n  margin-bottom: 10px;\r\n  color: #4B0082;\r\n}\r\n\r\n.quote-author {\r\n  text-align: right;\r\n  font-size: 18px;\r\n  color: #9370DB;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 登录卡片样式调整 */\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  width: 450px;\r\n  min-height: 100vh;\r\n  overflow: visible; /* 确保 footer 不被裁剪 */\r\n  padding-bottom: 120px; /* 给 footer 留空间 */\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(5px);\r\n  padding: 100px 50px;\r\n  box-shadow: -5px 0 30px rgba(0, 0, 0, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.slogan-en {\r\n  color: #4B0082;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.slogan-cn {\r\n  color: #6A5ACD;\r\n  font-size: px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.divider {\r\n  width: 50px;\r\n  height: 3px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  margin: 25px 0;\r\n}\r\n\r\n.sub-slogan {\r\n  color: #666;\r\n  line-height: 1.8;\r\n  margin-bottom: 50px;\r\n  font-size: 15px;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 40px;\r\n}\r\n\r\n.custom-input {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.custom-input >>> .el-input__inner {\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  border: 1px solid #E6E6FA;\r\n  padding-left: 45px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.custom-input >>> .el-input__inner:focus {\r\n  border-color: #6A5ACD;\r\n  box-shadow: 0 0 0 2px rgba(106, 90, 205, 0.2);\r\n}\r\n\r\n.custom-input >>> .el-input__prefix {\r\n  color: #6A5ACD;\r\n  left: 15px;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  border: none;\r\n  font-size: 16px;\r\n  letter-spacing: 2px;\r\n  margin-top: 10px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.login-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 15px rgba(106, 90, 205, 0.4);\r\n}\r\n\r\n.footer {\r\n  position: absolute;\r\n  bottom: 40px;\r\n  width: calc(100% - 100px);\r\n  text-align: center;\r\n  color: #6A5ACD;\r\n  font-size: 14px;\r\n}\r\n\r\n.en-footer {\r\n  margin-top: 10px;\r\n  font-style: italic;\r\n  color: #B0C4DE;\r\n}\r\n\r\n/* 登录方式切换样式 */\r\n.login-type-switch {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-type-option {\r\n  padding: 8px 20px;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  color: #6A5ACD;\r\n  font-size: 14px;\r\n  transition: all 0.3s;\r\n  border: 1px solid #6A5ACD;\r\n  background-color: rgba(106, 90, 205, 0.1);\r\n}\r\n\r\n.login-type-option:hover {\r\n  background-color: rgba(106, 90, 205, 0.2);\r\n}\r\n\r\n.login-type-option.active {\r\n  background-color: #6A5ACD;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}