{"ast":null,"code":"import { mixin } from '../../../minix/index';\nimport { saveApeTest, getApeTaskList, getApeTaskByTeacherId } from '../../../api/api';\nexport default {\n  mixins: [mixin],\n  data() {\n    return {\n      formLabelWidth: '80px',\n      form: {\n        name: \"\",\n        taskId: \"\",\n        taskName: \"\",\n        totalScore: \"\",\n        totalTime: \"120\",\n        startTime: \"\",\n        endTime: \"\",\n        state: \"\",\n        remark: \"\"\n      },\n      task: [],\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入考试名称',\n          trigger: 'blur'\n        }],\n        taskId: [{\n          required: true,\n          message: '请选择课程',\n          trigger: 'blur'\n        }],\n        totalScore: [{\n          required: true,\n          message: '请输入总分',\n          trigger: 'blur'\n        }],\n        totalTime: [{\n          required: true,\n          message: '请输入考试时长',\n          trigger: 'blur'\n        }],\n        startTime: [{\n          required: true,\n          message: '请输入开始时间',\n          trigger: 'blur'\n        }],\n        endTime: [{\n          required: true,\n          message: '请输入截止时间',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['addVisible', 'flag'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          saveApeTest(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.form = {\n        name: \"\",\n        taskId: \"\",\n        taskName: \"\",\n        totalScore: \"\",\n        totalTime: \"\",\n        startTime: \"\",\n        endTime: \"\",\n        state: \"\",\n        remark: \"\"\n      }, this.$emit(\"addFalse\");\n    },\n    getApeTaskList() {\n      getApeTaskList().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    getApeTaskByTeacherId() {\n      getApeTaskByTeacherId().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    }\n  },\n  created() {},\n  mounted() {\n    if (this.flag == 2) {\n      this.getApeTaskByTeacherId();\n    } else {\n      this.getApeTaskList();\n    }\n  }\n};","map":{"version":3,"names":["mixin","saveApeTest","getApeTaskList","getApeTaskByTeacherId","mixins","data","formLabelWidth","form","name","taskId","taskName","totalScore","totalTime","startTime","endTime","state","remark","task","rules","required","message","trigger","props","methods","submit","$refs","validate","valid","then","res","code","$notify","success","title","handleClose","error","$emit","created","mounted","flag"],"sources":["src/components/system/testP/addTest.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <el-dialog title=\"新增考试\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"addVisible\" :before-close=\"handleClose\">\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                考试名称:\r\n                </span>\r\n                <div style=\"width:100%\">\r\n                  <el-form-item prop=\"name\" style=\"margin-bottom:0\">\r\n                      <el-input v-model=\"form.name\" size=\"mini\" placeholder=\"请输入考试名称\" autocomplete=\"off\"></el-input>\r\n                  </el-form-item>\r\n                </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                所属课程:\r\n                </span>\r\n                <div style=\"width:100%\">\r\n                  <el-form-item prop=\"taskId\" style=\"margin-bottom:0\">\r\n                        <el-select clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.taskId\" placeholder=\"请选择\">\r\n                            <el-option v-for=\"(item,index) in task\" :key=\"index\"\r\n                                :label=\"item.name\"\r\n                                :value=\"item.id\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                总分:\r\n                </span>\r\n                <div style=\"width:100%\">\r\n                  <el-form-item prop=\"totalScore\" style=\"margin-bottom:0\">\r\n                      <el-input type=\"number\" v-model=\"form.totalScore\" size=\"mini\" placeholder=\"请输入总分\" autocomplete=\"off\"></el-input>\r\n                  </el-form-item>\r\n                </div>\r\n        </el-col>\r\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n    <span class=\"search-title\">\r\n        考试时长:\r\n    </span>\r\n              <div style=\"width:100%\">\r\n                  <el-form-item prop=\"totalTime\" style=\"margin-bottom:0\">\r\n                      <el-input type=\"number\" v-model=\"form.totalTime\" size=\"mini\" disabled autocomplete=\"off\"></el-input>\r\n                  </el-form-item>\r\n              </div>\r\n          </el-col>\r\n\r\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">开始时间:</span>\r\n            <div style=\"width:100%\">\r\n            <el-form-item prop=\"startTime\" style=\"margin-bottom:0\">\r\n                <el-date-picker size=\"mini\"\r\n                  v-model=\"form.startTime\"\r\n                  type=\"date\"\r\n                  placeholder=\"开始时间\">\r\n                </el-date-picker>\r\n            </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">截止时间:</span>\r\n            <div style=\"width:100%\">\r\n            <el-form-item prop=\"endTime\" style=\"margin-bottom:0\">\r\n                <el-date-picker size=\"mini\"\r\n                  v-model=\"form.endTime\"\r\n                  type=\"date\"\r\n                  placeholder=\"截止时间\">\r\n                </el-date-picker>\r\n            </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col style=\"margin-top:20px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                备注:\r\n                </span>\r\n                <div style=\"width:100%\">\r\n                  <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\r\n                      <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\"></el-input>\r\n                  </el-form-item>\r\n                </div>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\r\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  import { mixin } from '../../../minix/index';\r\n  import {saveApeTest,getApeTaskList,getApeTaskByTeacherId} from '../../../api/api'\r\n  export default {\r\n    mixins: [mixin],\r\n    data() {\r\n      return{\r\n        formLabelWidth: '80px',\r\n        form: {\r\n          name: \"\",\r\n          taskId: \"\",\r\n          taskName: \"\",\r\n          totalScore: \"\",\r\n          totalTime: \"120\",\r\n          startTime: \"\",\r\n          endTime: \"\",\r\n          state: \"\",\r\n          remark: \"\",\r\n        },\r\n        task: [],\r\n        rules: {\r\n          name: [\r\n            { required: true, message: '请输入考试名称', trigger: 'blur' },\r\n          ],\r\n          taskId: [\r\n            { required: true, message: '请选择课程', trigger: 'blur' },\r\n          ],\r\n          totalScore: [\r\n            { required: true, message: '请输入总分', trigger: 'blur' },\r\n          ],\r\n          totalTime: [\r\n            { required: true, message: '请输入考试时长', trigger: 'blur' },\r\n          ],\r\n          startTime: [\r\n            { required: true, message: '请输入开始时间', trigger: 'blur' },\r\n          ],\r\n          endTime: [\r\n            { required: true, message: '请输入截止时间', trigger: 'blur' },\r\n          ],\r\n        },\r\n      }\r\n    },\r\n    props: ['addVisible','flag'],\r\n    methods: {\r\n      submit() {\r\n        this.$refs[\"ruleForm\"].validate((valid) => {\r\n          if (valid) {\r\n            saveApeTest(this.form).then(res => {\r\n              if(res.code == 1000) {\r\n                this.$notify.success({\r\n                  title: '成功',\r\n                  message: \"保存成功\"\r\n                });\r\n                this.handleClose();\r\n              } else {\r\n                this.$notify.error({\r\n                  title: '错误',\r\n                  message: res.message\r\n                });\r\n              }\r\n            })\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      handleClose() {\r\n        this.form = {\r\n          name: \"\",\r\n          taskId: \"\",\r\n          taskName: \"\",\r\n          totalScore: \"\",\r\n          totalTime: \"\",\r\n          startTime: \"\",\r\n          endTime: \"\",\r\n          state: \"\",\r\n          remark: \"\",\r\n        },\r\n        this.$emit(\"addFalse\")\r\n      },\r\n      getApeTaskList() {\r\n          getApeTaskList().then(res => {\r\n              if(res.code == 1000) {\r\n                this.task = res.data;\r\n              } else {\r\n                this.$notify.error({\r\n                  title: '错误',\r\n                  message: res.message\r\n                });\r\n              }\r\n          })\r\n      },\r\n      getApeTaskByTeacherId() {\r\n        getApeTaskByTeacherId().then(res => {\r\n              if(res.code == 1000) {\r\n                this.task = res.data;\r\n              } else {\r\n                this.$notify.error({\r\n                  title: '错误',\r\n                  message: res.message\r\n                });\r\n              }\r\n          })\r\n      },\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n      if(this.flag == 2) {\r\n        this.getApeTaskByTeacherId()\r\n      } else {\r\n        this.getApeTaskList()\r\n      }\r\n    }\r\n }\r\n</script>\r\n\r\n<style   scoped>\r\n  .el-col {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      margin-top: 12px\r\n  }\r\n  .search-title {\r\n      font-family: '黑体';\r\n      float: right;\r\n      white-space: nowrap;\r\n      font-size: 14px;\r\n      width: 84px;\r\n      text-align: right;\r\n  }\r\n  .el-tree {\r\n      border: 1px solid #BDC1C9;\r\n  }\r\n</style>\r\n"],"mappings":"AAgGA,SAAAA,KAAA;AACA,SAAAC,WAAA,EAAAC,cAAA,EAAAC,qBAAA;AACA;EACAC,MAAA,GAAAJ,KAAA;EACAK,KAAA;IACA;MACAC,cAAA;MACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,QAAA;QACAC,UAAA;QACAC,SAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA;QACAC,MAAA;MACA;MACAC,IAAA;MACAC,KAAA;QACAV,IAAA,GACA;UAAAW,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAZ,MAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAV,UAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,SAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,SAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,OAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,KAAA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA1B,WAAA,MAAAM,IAAA,EAAAqB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;gBACAC,KAAA;gBACAb,OAAA;cACA;cACA,KAAAc,WAAA;YACA;cACA,KAAAH,OAAA,CAAAI,KAAA;gBACAF,KAAA;gBACAb,OAAA,EAAAS,GAAA,CAAAT;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAc,YAAA;MACA,KAAA3B,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,QAAA;QACAC,UAAA;QACAC,SAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA;QACAC,MAAA;MACA,GACA,KAAAoB,KAAA;IACA;IACAlC,eAAA;MACAA,cAAA,GAAA0B,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAb,IAAA,GAAAY,GAAA,CAAAxB,IAAA;QACA;UACA,KAAA0B,OAAA,CAAAI,KAAA;YACAF,KAAA;YACAb,OAAA,EAAAS,GAAA,CAAAT;UACA;QACA;MACA;IACA;IACAjB,sBAAA;MACAA,qBAAA,GAAAyB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAb,IAAA,GAAAY,GAAA,CAAAxB,IAAA;QACA;UACA,KAAA0B,OAAA,CAAAI,KAAA;YACAF,KAAA;YACAb,OAAA,EAAAS,GAAA,CAAAT;UACA;QACA;MACA;IACA;EACA;EACAiB,QAAA,GAEA;EACAC,QAAA;IACA,SAAAC,IAAA;MACA,KAAApC,qBAAA;IACA;MACA,KAAAD,cAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}