{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { saveHomework } from '../../../api/api';\nexport default {\n  props: ['addVisible', 'chapterId'],\n  data() {\n    return {\n      form: {\n        chapterId: '',\n        chapterName: '',\n        title: '',\n        sort: '',\n        answer: '',\n        type: '0',\n        content: '',\n        score: '',\n        remark: ''\n      },\n      content: [{\n        value: 'A',\n        option: ''\n      }],\n      multipleAnswers: [],\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入题目',\n          trigger: 'blur'\n        }],\n        sort: [{\n          required: true,\n          message: '请输入序号',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入分数',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择类型',\n          trigger: 'blur'\n        }],\n        answer: [{\n          required: true,\n          validator: (rule, value, callback) => {\n            const type = this.form.type;\n            if (type === '1') {\n              if (!this.multipleAnswers.length) {\n                return callback(new Error('请选择一个或多个正确答案'));\n              }\n            } else if (type === '0' || type === '3') {\n              if (!value) {\n                return callback(new Error('请选择答案'));\n              }\n            } else {\n              if (!value) {\n                return callback(new Error('请输入答案'));\n              }\n            }\n            callback();\n          },\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.form.chapterId = this.$route.query.id || this.chapterId;\n  },\n  methods: {\n    addContent() {\n      const nextChar = String.fromCharCode(65 + this.content.length);\n      this.content.push({\n        value: nextChar,\n        option: ''\n      });\n    },\n    minusContent(index) {\n      this.content.splice(index, 1);\n      this.content.forEach((item, i) => {\n        item.value = String.fromCharCode(65 + i);\n      });\n    },\n    submit() {\n      this.$refs.ruleForm.validate(valid => {\n        if (!valid) return;\n        const type = this.form.type;\n        if (type === '0' || type === '1') {\n          for (const item of this.content) {\n            if (!item.value || !item.option) {\n              this.$message.warning('请完善选项及内容');\n              return;\n            }\n          }\n          this.form.content = JSON.stringify(this.content);\n          if (type === '0') {\n            if (!this.form.answer) {\n              this.$message.warning('请选择一个正确答案');\n              return;\n            }\n          } else {\n            if (!this.multipleAnswers.length) {\n              this.$message.warning('请选择一个或多个正确答案');\n              return;\n            }\n            this.form.answer = this.multipleAnswers.join(',');\n          }\n        } else if (type === '3') {\n          if (!this.form.answer) {\n            this.$message.warning('请选择判断答案');\n            return;\n          }\n          this.form.content = '';\n        } else {\n          this.form.content = '';\n        }\n\n        // 保存请求\n        saveHomework(this.form).then(res => {\n          if (res.code === 1000) {\n            this.$notify.success({\n              title: '成功',\n              message: '保存成功'\n            });\n            this.handleClose();\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      });\n    },\n    handleClose() {\n      this.resetForm();\n      this.$emit('addFalse');\n    },\n    resetForm() {\n      this.form = {\n        chapterId: this.form.chapterId,\n        chapterName: '',\n        title: '',\n        sort: '',\n        answer: '',\n        type: '0',\n        content: '',\n        score: '',\n        remark: ''\n      };\n      this.content = [{\n        value: 'A',\n        option: ''\n      }];\n      this.multipleAnswers = [];\n    }\n  }\n};","map":{"version":3,"names":["saveHomework","props","data","form","chapterId","chapterName","title","sort","answer","type","content","score","remark","value","option","multipleAnswers","rules","required","message","trigger","validator","rule","callback","length","Error","mounted","$route","query","id","methods","addContent","nextChar","String","fromCharCode","push","minusContent","index","splice","forEach","item","i","submit","$refs","ruleForm","validate","valid","$message","warning","JSON","stringify","join","then","res","code","$notify","success","handleClose","error","resetForm","$emit"],"sources":["src/components/system/homework/addHomework.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog title=\"新增作业\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"addVisible\" :before-close=\"handleClose\">\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\r\n        <el-row :gutter=\"10\">\r\n          <!-- 题目 -->\r\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">题目:</span>\r\n            <el-form-item prop=\"title\" style=\"margin-bottom:0\">\r\n              <el-input v-model=\"form.title\" size=\"mini\" placeholder=\"请输入题目\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <!-- 序号 -->\r\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">序号:</span>\r\n            <el-form-item prop=\"sort\" style=\"margin-bottom:0\">\r\n              <el-input-number size=\"mini\" v-model=\"form.sort\" :min=\"1\" label=\"请输入序号\"></el-input-number>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <!-- 类型 -->\r\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">类型:</span>\r\n            <el-form-item prop=\"type\" style=\"margin-bottom:0\">\r\n              <el-select clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.type\" placeholder=\"请选择\">\r\n                <el-option label=\"单选\" value=\"0\"></el-option>\r\n                <el-option label=\"多选\" value=\"1\"></el-option>\r\n                <el-option label=\"填空\" value=\"2\"></el-option>\r\n                <el-option label=\"判断\" value=\"3\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <!-- 内容（单选/多选） -->\r\n          <el-col v-if=\"form.type == 0 || form.type == 1\" :xs=\"24\">\r\n            <span class=\"search-title\">题目内容:</span>\r\n            <el-form-item prop=\"content\" style=\"margin-bottom:0\">\r\n              <div class=\"content-item\" v-for=\"(item,index) in content\" :key=\"index\" style=\"display:flex;align-items:center;margin-bottom:5px\">\r\n                <div style=\"width:60px;margin-right:10px\">\r\n                  <el-input v-model=\"item.value\" size=\"mini\" placeholder=\"选项\" readonly></el-input>\r\n                </div>\r\n                <el-input v-model=\"item.option\" size=\"mini\" placeholder=\"选项内容\" style=\"flex:1\" autocomplete=\"off\"></el-input>\r\n                <i class=\"el-icon-circle-plus-outline\" v-if=\"index === content.length - 1\" style=\"margin-left:10px;cursor:pointer\" @click=\"addContent\"></i>\r\n                <i class=\"el-icon-remove-outline\" v-if=\"index !== 0\" style=\"margin-left:10px;cursor:pointer\" @click=\"minusContent(index)\"></i>\r\n              </div>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <!-- 答案选择区 -->\r\n          <el-col :xs=\"24\">\r\n            <span class=\"search-title\">答案:</span>\r\n            <el-form-item prop=\"answer\" style=\"margin-bottom:0\">\r\n              <!-- 单选 -->\r\n              <el-radio-group v-if=\"form.type == 0\" v-model=\"form.answer\" size=\"mini\">\r\n                <el-radio v-for=\"(item, index) in content\" :key=\"'radio-' + index\" :label=\"item.value\">\r\n                  {{ item.value }}\r\n                </el-radio>\r\n              </el-radio-group>\r\n\r\n              <!-- 多选 -->\r\n              <el-checkbox-group v-else-if=\"form.type == 1\" v-model=\"multipleAnswers\" size=\"mini\">\r\n                <el-checkbox v-for=\"(item, index) in content\" :key=\"'check-' + index\" :label=\"item.value\">\r\n                  {{ item.value }}\r\n                </el-checkbox>\r\n              </el-checkbox-group>\r\n\r\n              <!-- 判断题 -->\r\n              <el-radio-group v-else-if=\"form.type == 3\" v-model=\"form.answer\" size=\"mini\">\r\n                <el-radio label=\"正确\">正确</el-radio>\r\n                <el-radio label=\"错误\">错误</el-radio>\r\n              </el-radio-group>\r\n\r\n              <!-- 填空等其他 -->\r\n              <el-input\r\n                v-else\r\n                type=\"textarea\"\r\n                v-model=\"form.answer\"\r\n                size=\"mini\"\r\n                placeholder=\"请输入答案\"\r\n                autocomplete=\"off\"\r\n              ></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <!-- 分数 -->\r\n          <el-col :xs=\"24\">\r\n            <span class=\"search-title\">分数:</span>\r\n            <el-form-item prop=\"sort\" style=\"margin-bottom:0\">\r\n              <el-input-number size=\"mini\" v-model=\"form.score\" :min=\"1\" label=\"请输入分数\"></el-input-number>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <!-- 备注 -->\r\n          <el-col style=\"margin-top:20px\" :xs=\"24\">\r\n            <span class=\"search-title\">备注:</span>\r\n            <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\r\n              <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\"></el-input>\r\n            </el-form-item>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\r\n        <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { saveHomework } from '../../../api/api'\r\n\r\nexport default {\r\n  props: ['addVisible', 'chapterId'],\r\n  data() {\r\n    return {\r\n      form: {\r\n        chapterId: '',\r\n        chapterName: '',\r\n        title: '',\r\n        sort: '',\r\n        answer: '',\r\n        type: '0',\r\n        content: '',\r\n        score: '',\r\n        remark: '',\r\n      },\r\n      content: [\r\n        { value: 'A', option: '' }\r\n      ],\r\n      multipleAnswers: [],\r\n      rules: {\r\n        title: [{ required: true, message: '请输入题目', trigger: 'blur' }],\r\n        sort: [{ required: true, message: '请输入序号', trigger: 'blur' }],\r\n        score: [{ required: true, message: '请输入分数', trigger: 'blur' }],\r\n        type: [{ required: true, message: '请选择类型', trigger: 'blur' }],\r\n        answer: [\r\n          {\r\n            required: true,\r\n            validator: (rule, value, callback) => {\r\n              const type = this.form.type\r\n              if (type === '1') {\r\n                if (!this.multipleAnswers.length) {\r\n                  return callback(new Error('请选择一个或多个正确答案'))\r\n                }\r\n              } else if (type === '0' || type === '3') {\r\n                if (!value) {\r\n                  return callback(new Error('请选择答案'))\r\n                }\r\n              } else {\r\n                if (!value) {\r\n                  return callback(new Error('请输入答案'))\r\n                }\r\n              }\r\n              callback()\r\n            },\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.form.chapterId = this.$route.query.id || this.chapterId\r\n  },\r\n  methods: {\r\n    addContent() {\r\n      const nextChar = String.fromCharCode(65 + this.content.length)\r\n      this.content.push({ value: nextChar, option: '' })\r\n    },\r\n    minusContent(index) {\r\n      this.content.splice(index, 1)\r\n      this.content.forEach((item, i) => {\r\n        item.value = String.fromCharCode(65 + i)\r\n      })\r\n    },\r\n    submit() {\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (!valid) return\r\n\r\n        const type = this.form.type\r\n\r\n        if (type === '0' || type === '1') {\r\n          for (const item of this.content) {\r\n            if (!item.value || !item.option) {\r\n              this.$message.warning('请完善选项及内容')\r\n              return\r\n            }\r\n          }\r\n          this.form.content = JSON.stringify(this.content)\r\n\r\n          if (type === '0') {\r\n            if (!this.form.answer) {\r\n              this.$message.warning('请选择一个正确答案')\r\n              return\r\n            }\r\n          } else {\r\n            if (!this.multipleAnswers.length) {\r\n              this.$message.warning('请选择一个或多个正确答案')\r\n              return\r\n            }\r\n            this.form.answer = this.multipleAnswers.join(',')\r\n          }\r\n        } else if (type === '3') {\r\n          if (!this.form.answer) {\r\n            this.$message.warning('请选择判断答案')\r\n            return\r\n          }\r\n          this.form.content = ''\r\n        } else {\r\n          this.form.content = ''\r\n        }\r\n\r\n        // 保存请求\r\n        saveHomework(this.form).then(res => {\r\n          if (res.code === 1000) {\r\n            this.$notify.success({ title: '成功', message: '保存成功' })\r\n            this.handleClose()\r\n          } else {\r\n            this.$notify.error({ title: '错误', message: res.message })\r\n          }\r\n        })\r\n      })\r\n    },\r\n    handleClose() {\r\n      this.resetForm()\r\n      this.$emit('addFalse')\r\n    },\r\n    resetForm() {\r\n      this.form = {\r\n        chapterId: this.form.chapterId,\r\n        chapterName: '',\r\n        title: '',\r\n        sort: '',\r\n        answer: '',\r\n        type: '0',\r\n        content: '',\r\n        score: '',\r\n        remark: '',\r\n      }\r\n      this.content = [{ value: 'A', option: '' }]\r\n      this.multipleAnswers = []\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n  .content-item {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .el-col {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      margin-top: 12px\r\n  }\r\n  .search-title {\r\n      font-family: '黑体';\r\n      float: right;\r\n      white-space: nowrap;\r\n      font-size: 14px;\r\n      width: 84px;\r\n      text-align: right;\r\n  }\r\n  .el-tree {\r\n      border: 1px solid #BDC1C9;\r\n  }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}