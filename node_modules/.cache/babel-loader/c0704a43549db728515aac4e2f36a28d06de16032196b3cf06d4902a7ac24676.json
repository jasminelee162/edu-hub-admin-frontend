{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { login, getUser } from '../../../api/api';\nimport { setLock } from '@/utils/lock';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  mounted() {\n    this.initParticles();\n  },\n  created() {},\n  methods: {\n    login() {\n      if (!this.username) {\n        this.$message({\n          message: '请输入用户名',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.password) {\n        this.$message({\n          message: '请输入密码',\n          type: 'warning'\n        });\n        return;\n      }\n      var params = {\n        username: this.username,\n        password: this.password\n      };\n      login(params).then(res => {\n        if (res.code == 1000) {\n          this.$message({\n            message: '登陆成功',\n            type: 'success'\n          });\n          var that = this;\n          var token = res.data.token;\n          this.$store.commit('user/setToken', token);\n          this.getUserInfo();\n          setLock(false);\n          setTimeout(function () {\n            that.$router.push(\"/index\");\n          }, 500);\n        } else {\n          this.$message.error(res.message);\n        }\n      });\n    },\n    getUserInfo() {\n      getUser().then(res => {\n        if (res.code == 1000) {\n          this.$store.commit('user/setUser', JSON.stringify(res.data));\n        }\n      });\n    },\n    initParticles() {\n      const canvas = document.getElementById('particle-canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n\n      // 深紫色系粒子配置 - 更专业的色调\n      const particles = [];\n      const particleCount = 80;\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399'];\n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 1,\n          // 稍小的粒子\n          speedX: Math.random() * 0.3 - 0.15,\n          // 更慢的速度\n          speedY: Math.random() * 0.3 - 0.15,\n          color: colors[Math.floor(Math.random() * colors.length)]\n        });\n      }\n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        particles.forEach(particle => {\n          ctx.beginPath();\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          particle.x += particle.speedX;\n          particle.y += particle.speedY;\n          if (particle.x < 0 || particle.x > canvas.width) {\n            particle.speedX *= -1;\n          }\n          if (particle.y < 0 || particle.y > canvas.height) {\n            particle.speedY *= -1;\n          }\n          particles.forEach(other => {\n            const distance = Math.sqrt(Math.pow(particle.x - other.x, 2) + Math.pow(particle.y - other.y, 2));\n            if (distance < 120) {\n              // 更短的连接线\n              ctx.beginPath();\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance / 120})`;\n              ctx.lineWidth = 0.3; // 更细的连接线\n              ctx.moveTo(particle.x, particle.y);\n              ctx.lineTo(other.x, other.y);\n              ctx.stroke();\n            }\n          });\n        });\n        requestAnimationFrame(animate);\n      };\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["login","getUser","setLock","data","username","password","mounted","initParticles","created","methods","$message","message","type","params","then","res","code","that","token","$store","commit","getUserInfo","setTimeout","$router","push","error","JSON","stringify","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","particleCount","colors","i","x","Math","random","y","size","speedX","speedY","color","floor","length","animate","clearRect","forEach","particle","beginPath","arc","PI","fillStyle","fill","other","distance","sqrt","pow","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame"],"sources":["src/views/system/login/login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <!-- 粒子背景画布 -->\r\n    <canvas id=\"particle-canvas\"></canvas>\r\n    \r\n    <!-- 左侧内容区域 - 增强版 -->\r\n    <div class=\"left-content\">\r\n      <div class=\"logo-area\" style=\"margin-top: 40px;\">\r\n        <img style=\"width:300px;padding-left:0px\" src=\"@/assets/image/systemlogo.png\" alt=\"平台Logo\" class=\"logo\" />\r\n        <div class=\"platform-role\">教师 · 管理中枢</div>\r\n      </div>\r\n      \r\n      <div class=\"feature-list\">\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-data\"></i>\r\n          <span>学情数据分析</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-notebook-2\"></i>\r\n          <span>课程内容管理</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-check\"></i>\r\n          <span>作业批改系统</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-chat-line-round\"></i>\r\n          <span>师生互动平台</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"quote-area\">\r\n        <p class=\"quote-text\">\"教育不是灌输，而是点燃火焰\"</p>\r\n        <p class=\"quote-author\">—— 苏格拉底 ——</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 右侧登录卡片 -->\r\n    <div class=\"login-card\">\r\n      <div class=\"card-header\">\r\n        <h2 class=\"slogan-en\">EDUCATION MANAGEMENT SYSTEM</h2>\r\n        <p class=\"slogan-cn\">教育管理系统 · 教师专业版</p>\r\n      </div>\r\n      \r\n      <div class=\"divider\"></div>\r\n      \r\n      <p class=\"sub-slogan\">智能教育管理平台，赋能高效教学<br>\r\n                            精准掌握每位学生的学习轨迹<br>用数据驱动个性化教学方案</p>\r\n      <div class=\"login-form\">\r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">工号/用户名</label>\r\n          <el-input\r\n            v-model=\"username\"\r\n            placeholder=\"请输入您的工号或用户名\"\r\n            prefix-icon=\"el-icon-user\"\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label class=\"form-label\">密码</label>\r\n          <el-input\r\n            v-model=\"password\"\r\n            placeholder=\"请输入您的登录密码\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n        </div>\r\n        \r\n        <div class=\"form-actions\">\r\n          <el-button \r\n            type=\"primary\" \r\n            class=\"login-btn\"\r\n            @click=\"login\"\r\n          >\r\n            <i class=\"el-icon-s-promotion\"></i> 登 录 系 统\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"card-footer\">\r\n        <p class=\"footer-text\">—— 教育信息化 · 教学管理专家 ——</p>\r\n        <p class=\"en-footer\">Secure Education Management Platform</p>\r\n        <div class=\"copyright\">©2025 在线学习教育平台 教师端</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {login,getUser} from '../../../api/api'\r\nimport { setLock } from '@/utils/lock'\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initParticles()\r\n  },\r\n      created() {\r\n\r\n    },\r\n  methods: {\r\n        login() {\r\n            if(!this.username) {\r\n                this.$message({\r\n                    message: '请输入用户名',\r\n                    type: 'warning'\r\n                });\r\n                return;\r\n            }\r\n            if(!this.password) {\r\n                this.$message({\r\n                    message: '请输入密码',\r\n                    type: 'warning'\r\n                });\r\n                return;\r\n            }\r\n            var params = {\r\n                username: this.username,\r\n                password: this.password\r\n            }\r\n            login(params).then(res => {\r\n                if(res.code == 1000) {\r\n                    this.$message({\r\n                        message: '登陆成功',\r\n                        type: 'success'\r\n                    });\r\n                    var that = this\r\n                    var token = res.data.token\r\n                    this.$store.commit('user/setToken', token)\r\n                    this.getUserInfo()\r\n                    setLock(false)\r\n                    setTimeout(function() {\r\n                        that.$router.push(\"/index\")\r\n                    },500)\r\n                } else {\r\n                    this.$message.error(res.message);\r\n                }\r\n            })\r\n        },\r\n        getUserInfo() {\r\n            getUser().then(res => {\r\n                if(res.code == 1000) {\r\n                    this.$store.commit('user/setUser', JSON.stringify(res.data))\r\n                }\r\n            })\r\n        },\r\n\r\n    initParticles() {\r\n      const canvas = document.getElementById('particle-canvas')\r\n      const ctx = canvas.getContext('2d')\r\n      canvas.width = window.innerWidth\r\n      canvas.height = window.innerHeight\r\n      \r\n      // 深紫色系粒子配置 - 更专业的色调\r\n      const particles = []\r\n      const particleCount = 80\r\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399']\r\n      \r\n      for (let i = 0; i < particleCount; i++) {\r\n        particles.push({\r\n          x: Math.random() * canvas.width,\r\n          y: Math.random() * canvas.height,\r\n          size: Math.random() * 3 + 1, // 稍小的粒子\r\n          speedX: Math.random() * 0.3 - 0.15, // 更慢的速度\r\n          speedY: Math.random() * 0.3 - 0.15,\r\n          color: colors[Math.floor(Math.random() * colors.length)]\r\n        })\r\n      }\r\n      \r\n      const animate = () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n        \r\n        particles.forEach(particle => {\r\n          ctx.beginPath()\r\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2)\r\n          ctx.fillStyle = particle.color\r\n          ctx.fill()\r\n          \r\n          particle.x += particle.speedX\r\n          particle.y += particle.speedY\r\n          \r\n          if (particle.x < 0 || particle.x > canvas.width) {\r\n            particle.speedX *= -1\r\n          }\r\n          if (particle.y < 0 || particle.y > canvas.height) {\r\n            particle.speedY *= -1\r\n          }\r\n          \r\n          particles.forEach(other => {\r\n            const distance = Math.sqrt(\r\n              Math.pow(particle.x - other.x, 2) + \r\n              Math.pow(particle.y - other.y, 2)\r\n            )\r\n            if (distance < 120) { // 更短的连接线\r\n              ctx.beginPath()\r\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance/120})`\r\n              ctx.lineWidth = 0.3 // 更细的连接线\r\n              ctx.moveTo(particle.x, particle.y)\r\n              ctx.lineTo(other.x, other.y)\r\n              ctx.stroke()\r\n            }\r\n          })\r\n        })\r\n        \r\n        requestAnimationFrame(animate)\r\n      }\r\n      \r\n      animate()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #ffffff;\r\n  overflow: hidden;\r\n  display: flex;\r\n  font-family: 'Microsoft YaHei', sans-serif;\r\n}\r\n\r\n#particle-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n\r\n/* 新增左侧内容区域样式 */\r\n.left-content {\r\n  width: 50%;\r\n  padding: 80px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  z-index: 2;\r\n}\r\n\r\n.logo-area {\r\n  margin-bottom: 80px;\r\n}\r\n\r\n.platform-name {\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  color: #4B0082;\r\n  letter-spacing: 2px;\r\n  margin-bottom: 15px;\r\n  text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.platform-role {\r\n  font-size: 24px;\r\n  color: #6A5ACD;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.feature-list {\r\n  margin: 60px 0;\r\n}\r\n\r\n.feature-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 35px;\r\n  color: #4B0082;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n}\r\n\r\n.feature-item i {\r\n  margin-right: 20px;\r\n  font-size: 28px;\r\n  color: #6A5ACD;\r\n}\r\n\r\n.quote-area {\r\n  color: #555;\r\n  font-style: italic;\r\n  line-height: 1.8;\r\n  margin-top: 60px;\r\n}\r\n\r\n.quote-text {\r\n  font-size: 26px;\r\n  line-height: 1.5;\r\n  margin-bottom: 10px;\r\n  color: #4B0082;\r\n}\r\n\r\n.quote-author {\r\n  text-align: right;\r\n  font-size: 18px;\r\n  color: #9370DB;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 登录卡片样式调整 */\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  width: 480px; /* 稍微加宽 */\r\n  height: 100vh;\r\n  background: rgba(255, 255, 255, 0.96);\r\n  backdrop-filter: blur(8px);\r\n  padding: 80px 60px;\r\n  box-shadow: -5px 0 40px rgba(0, 0, 0, 0.08);\r\n  border-left: 1px solid rgba(106, 90, 205, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n.card-header {\r\n  margin-bottom: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.slogan-en {\r\n  color: #4B0082;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 10px;\r\n  text-transform: uppercase;\r\n}\r\n\r\n.slogan-cn {\r\n  color: #6A5ACD;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n}\r\n\r\n.divider {\r\n  width: 80px;\r\n  height: 3px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  margin: 25px auto;\r\n  border-radius: 3px;\r\n}\r\n\r\n.sub-slogan {\r\n  color: #555;\r\n  line-height: 1.8;\r\n  margin-bottom: 50px;\r\n  font-size: 16px;\r\n  text-align: center;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 20px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.form-label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  color: #4B0082;\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n}\r\n\r\n.custom-input >>> .el-input__inner {\r\n  height: 52px;\r\n  border-radius: 6px;\r\n  border: 1px solid #E6E6FA;\r\n  padding-left: 50px;\r\n  background: rgba(255, 255, 255, 0.95);\r\n  transition: all 0.3s;\r\n  font-size: 15px;\r\n}\r\n\r\n.custom-input >>> .el-input__inner:focus {\r\n  border-color: #6A5ACD;\r\n  box-shadow: 0 0 0 2px rgba(106, 90, 205, 0.15);\r\n}\r\n\r\n.custom-input >>> .el-input__prefix {\r\n  color: #6A5ACD;\r\n  left: 18px;\r\n  font-size: 18px;\r\n}\r\n\r\n.form-actions {\r\n  margin-top: 40px;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  height: 54px;\r\n  border-radius: 6px;\r\n  background: linear-gradient(135deg, #6A5ACD, #483D8B);\r\n  border: none;\r\n  font-size: 17px;\r\n  letter-spacing: 1px;\r\n  transition: all 0.3s;\r\n  box-shadow: 0 4px 12px rgba(106, 90, 205, 0.2);\r\n}\r\n\r\n.login-btn:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 6px 16px rgba(106, 90, 205, 0.3);\r\n}\r\n\r\n.login-btn i {\r\n  margin-right: 8px;\r\n  font-size: 18px;\r\n}\r\n\r\n.card-footer {\r\n  margin-top: auto;\r\n  text-align: center;\r\n  padding-top: 30px;\r\n}\r\n\r\n.footer-text {\r\n  color: #6A5ACD;\r\n  font-size: 14px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.en-footer {\r\n  color: #B0C4DE;\r\n  font-size: 13px;\r\n  font-style: italic;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.copyright {\r\n  color: #999;\r\n  font-size: 12px;\r\n  margin-top: 30px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}