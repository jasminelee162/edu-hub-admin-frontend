{"ast":null,"code":"import { editMessage, getMessageById } from '../../../api/api';\nexport default {\n  data() {\n    return {\n      form: {\n        userId: \"\",\n        userName: \"\",\n        content: \"\",\n        answer: \"\"\n      },\n      rules: {\n        answer: [{\n          required: true,\n          message: '请输入回复内容',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateVisible', 'updateId'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          editMessage(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\",\n                customClass: 'tech-notification'\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message,\n                customClass: 'tech-notification'\n              });\n            }\n          });\n        }\n      });\n    },\n    handleClose() {\n      this.$emit(\"updateFalse\");\n    }\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getMessageById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            this.form = res.data;\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message,\n              customClass: 'tech-notification'\n            });\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["editMessage","getMessageById","data","form","userId","userName","content","answer","rules","required","message","trigger","props","methods","submit","$refs","validate","valid","then","res","code","$notify","success","title","customClass","handleClose","error","$emit","watch","updateId","newVal","id"],"sources":["src/components/system/message/updateMessage.vue"],"sourcesContent":["<template>\n  <div>\n    <el-dialog \n      title=\"编辑留言\" \n      width=\"45%\" \n      :destroy-on-close=\"true\" \n      :visible.sync=\"updateVisible\" \n      :before-close=\"handleClose\"\n      class=\"tech-dialog\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"24\">\n            <div class=\"form-item-container\">\n              <div class=\"label-with-icon\">\n                <i class=\"el-icon-chat-line-round bubble-icon question-icon\"></i>\n                <span class=\"tech-form-label\">\n                  提问内容:\n                </span>\n              </div>\n              <el-form-item prop=\"content\" class=\"tech-form-item\">\n                <el-input \n                  disabled\n                  type=\"textarea\" \n                  v-model=\"form.content\" \n                  :rows=\"3\"\n                  size=\"small\" \n                  placeholder=\"提问内容\" \n                  autocomplete=\"off\"\n                  class=\"tech-textarea\">\n                </el-input>\n              </el-form-item>\n            </div>\n          </el-col>\n          <el-col :span=\"24\">\n            <div class=\"form-item-container\">\n              <div class=\"label-with-icon\">\n                <i class=\"el-icon-chat-dot-round bubble-icon reply-icon\"></i>\n                <span class=\"tech-form-label\">\n                  回复内容:\n                </span>\n              </div>\n              <el-form-item prop=\"answer\" class=\"tech-form-item\">\n                <el-input \n                  type=\"textarea\" \n                  v-model=\"form.answer\" \n                  :rows=\"4\"\n                  size=\"small\" \n                  placeholder=\"请输入回复内容\" \n                  autocomplete=\"off\"\n                  class=\"tech-textarea\">\n                </el-input>\n              </el-form-item>\n            </div>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"tech-dialog-footer\">\n        <el-button \n          size=\"small\" \n          @click=\"handleClose\"\n          class=\"tech-cancel-btn\">\n          取 消\n        </el-button>\n        <el-button \n          size=\"small\" \n          type=\"primary\" \n          @click=\"submit\"\n          class=\"tech-confirm-btn\">\n          确 定\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {editMessage,getMessageById} from '../../../api/api'\nexport default {\n  data() {\n    return{\n      form: {\n        userId: \"\",\n        userName: \"\",\n        content: \"\",\n        answer: \"\",\n      },\n      rules: {\n        answer: [\n          { required: true, message: '请输入回复内容', trigger: 'blur' },\n        ],\n      },\n    }\n  },\n  props: ['updateVisible','updateId'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate((valid) => {\n        if (valid) {\n          editMessage(this.form).then(res => {\n            if(res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\",\n                customClass: 'tech-notification'\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message,\n                customClass: 'tech-notification'\n              });\n            }\n          })\n        }\n      });\n    },\n    handleClose() {\n      this.$emit(\"updateFalse\")\n    },\n  },\n  watch: {\n    updateId(newVal) {\n      if(newVal) {\n        getMessageById({id:newVal}).then(res => {\n          if(res.code == 1000) {\n            this.form = res.data\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message,\n              customClass: 'tech-notification'\n            });\n          }\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.form-item-container {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n}\n\n.label-with-icon {\n  display: flex;\n  align-items: center;\n  margin-bottom: 8px;\n}\n\n.tech-form-label {\n  font-family: 'Microsoft YaHei';\n  font-size: 14px;\n  color: #4A2B90;\n  font-weight: 500;\n  margin-left: 8px;\n}\n\n.bubble-icon {\n  font-size: 16px;\n  padding: 5px;\n  border-radius: 50%;\n}\n\n.question-icon {\n  color: white;\n  background-color: #7B68EE;\n}\n\n.reply-icon {\n  color: white;\n  background-color: #FF6B6B;\n}\n\n.tech-form-item {\n  margin-bottom: 0;\n}\n\n.tech-dialog-footer {\n  text-align: right;\n  padding: 15px 20px 10px;\n  border-top: 1px solid #F0EEF7;\n}\n</style>\n\n<style>\n/* 全局对话框样式 */\n.tech-dialog {\n  border-radius: 12px;\n}\n\n.tech-dialog .el-dialog__header {\n  border-bottom: 1px solid #F0EEF7;\n  padding: 15px 20px;\n}\n\n.tech-dialog .el-dialog__title {\n  color: #4A2B90;\n  font-weight: bold;\n  font-size: 16px;\n}\n\n.tech-dialog .el-dialog__body {\n  padding: 20px;\n}\n\n/* 输入框样式 */\n.tech-textarea .el-textarea__inner {\n  border-radius: 8px;\n  border: 1px solid #D8D8E5;\n  color: #5F4B8B;\n  background-color: #F9F8FD;\n  transition: all 0.3s;\n}\n\n.tech-textarea .el-textarea__inner:focus {\n  border-color: #7B68EE;\n  box-shadow: 0 0 0 2px rgba(123, 104, 238, 0.2);\n}\n\n/* 按钮样式 */\n.tech-confirm-btn {\n  background: linear-gradient(135deg, #7B68EE, #9370DB);\n  border: none;\n  border-radius: 20px;\n  color: white;\n  padding: 8px 20px;\n  transition: all 0.3s;\n}\n\n.tech-confirm-btn:hover {\n  background: linear-gradient(135deg, #6A5ACD, #7B68EE);\n  box-shadow: 0 4px 8px rgba(123, 104, 238, 0.3);\n}\n\n.tech-cancel-btn {\n  border-radius: 20px;\n  color: #7B68EE;\n  border: 1px solid #D8D8E5;\n  background: #F5F5FA;\n  padding: 8px 20px;\n  transition: all 0.3s;\n}\n\n.tech-cancel-btn:hover {\n  color: #6A5ACD;\n  border-color: #C7C7D5;\n  background: #EDEDF7;\n}\n\n/* 通知样式 */\n.tech-notification {\n  border-radius: 8px;\n  border-left: 4px solid #7B68EE;\n}\n</style>"],"mappings":"AA4EA,SAAAA,WAAA,EAAAC,cAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,MAAA;QACAC,QAAA;QACAC,OAAA;QACAC,MAAA;MACA;MACAC,KAAA;QACAD,MAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,KAAA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAjB,WAAA,MAAAG,IAAA,EAAAe,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;gBACAC,KAAA;gBACAb,OAAA;gBACAc,WAAA;cACA;cACA,KAAAC,WAAA;YACA;cACA,KAAAJ,OAAA,CAAAK,KAAA;gBACAH,KAAA;gBACAb,OAAA,EAAAS,GAAA,CAAAT,OAAA;gBACAc,WAAA;cACA;YACA;UACA;QACA;MACA;IACA;IACAC,YAAA;MACA,KAAAE,KAAA;IACA;EACA;EACAC,KAAA;IACAC,SAAAC,MAAA;MACA,IAAAA,MAAA;QACA7B,cAAA;UAAA8B,EAAA,EAAAD;QAAA,GAAAZ,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAjB,IAAA,GAAAgB,GAAA,CAAAjB,IAAA;UACA;YACA,KAAAmB,OAAA,CAAAK,KAAA;cACAH,KAAA;cACAb,OAAA,EAAAS,GAAA,CAAAT,OAAA;cACAc,WAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}