{"ast":null,"code":"import { mixin } from '../../../minix/index';\nimport { saveTest, getTaskList, getTaskByTeacherId } from '../../../api/api';\nexport default {\n  mixins: [mixin],\n  data() {\n    return {\n      formLabelWidth: '80px',\n      form: {\n        name: \"\",\n        taskId: \"\",\n        taskName: \"\",\n        totalScore: \"\",\n        totalTime: \"120\",\n        startTime: \"\",\n        endTime: \"\",\n        state: \"\",\n        remark: \"\"\n      },\n      task: [],\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入考试名称',\n          trigger: 'blur'\n        }],\n        taskId: [{\n          required: true,\n          message: '请选择课程',\n          trigger: 'blur'\n        }],\n        totalScore: [{\n          required: true,\n          message: '请输入总分',\n          trigger: 'blur'\n        }],\n        totalTime: [{\n          required: true,\n          message: '请输入考试时长',\n          trigger: 'blur'\n        }],\n        startTime: [{\n          required: true,\n          message: '请输入开始时间',\n          trigger: 'blur'\n        }],\n        endTime: [{\n          required: true,\n          message: '请输入截止时间',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['addVisible', 'flag'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          saveTest(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.form = {\n        name: \"\",\n        taskId: \"\",\n        taskName: \"\",\n        totalScore: \"\",\n        totalTime: \"120\",\n        startTime: \"\",\n        endTime: \"\",\n        state: \"\",\n        remark: \"\"\n      }, this.$emit(\"addFalse\");\n    },\n    getTaskList() {\n      getTaskList().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    getTaskByTeacherId() {\n      getTaskByTeacherId().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    }\n  },\n  created() {},\n  mounted() {\n    if (this.flag == 2) {\n      this.getTaskByTeacherId();\n    } else {\n      this.getTaskList();\n    }\n  }\n};","map":{"version":3,"names":["mixin","saveTest","getTaskList","getTaskByTeacherId","mixins","data","formLabelWidth","form","name","taskId","taskName","totalScore","totalTime","startTime","endTime","state","remark","task","rules","required","message","trigger","props","methods","submit","$refs","validate","valid","then","res","code","$notify","success","title","handleClose","error","$emit","created","mounted","flag"],"sources":["src/components/system/testP/addTest.vue"],"sourcesContent":["<template>\n<div>\n  <el-dialog title=\"新增考试\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"addVisible\" :before-close=\"handleClose\">\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n      <el-row :gutter=\"10\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                考试名称:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"name\" style=\"margin-bottom:0\">\n                      <el-input v-model=\"form.name\" size=\"mini\" placeholder=\"请输入考试名称\" autocomplete=\"off\"></el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                所属课程:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"taskId\" style=\"margin-bottom:0\">\n                        <el-select clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.taskId\" placeholder=\"请选择\">\n                            <el-option v-for=\"(item,index) in task\" :key=\"index\"\n                                :label=\"item.name\"\n                                :value=\"item.id\">\n                            </el-option>\n                        </el-select>\n                    </el-form-item>\n                </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                总分:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"totalScore\" style=\"margin-bottom:0\">\n                      <el-input type=\"number\" v-model=\"form.totalScore\" size=\"mini\" placeholder=\"请输入总分\" autocomplete=\"off\"></el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n    <span class=\"search-title\">\n        考试时长:\n    </span>\n              <div style=\"width:100%\">\n                  <el-form-item prop=\"totalTime\" style=\"margin-bottom:0\">\n                      <el-input type=\"number\" v-model=\"form.totalTime\" size=\"mini\" disabled autocomplete=\"off\"></el-input>\n                  </el-form-item>\n              </div>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">开始时间:</span>\n            <div style=\"width:100%\">\n            <el-form-item prop=\"startTime\" style=\"margin-bottom:0\">\n                <el-date-picker size=\"mini\"\n                  v-model=\"form.startTime\"\n                  type=\"date\"\n                  placeholder=\"开始时间\">\n                </el-date-picker>\n            </el-form-item>\n            </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">截止时间:</span>\n            <div style=\"width:100%\">\n            <el-form-item prop=\"endTime\" style=\"margin-bottom:0\">\n                <el-date-picker size=\"mini\"\n                  v-model=\"form.endTime\"\n                  type=\"date\"\n                  placeholder=\"截止时间\">\n                </el-date-picker>\n            </el-form-item>\n            </div>\n        </el-col>\n        <el-col style=\"margin-top:20px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                备注:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\n                      <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\"></el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n    </div>\n  </el-dialog>\n</div>\n</template>\n\n<script>\n  import { mixin } from '../../../minix/index';\n  import {saveTest,getTaskList,getTaskByTeacherId} from '../../../api/api'\n  export default {\n    mixins: [mixin],\n    data() {\n      return{\n        formLabelWidth: '80px',\n        form: {\n          name: \"\",\n          taskId: \"\",\n          taskName: \"\",\n          totalScore: \"\",\n          totalTime: \"120\",\n          startTime: \"\",\n          endTime: \"\",\n          state: \"\",\n          remark: \"\",\n        },\n        task: [],\n        rules: {\n          name: [\n            { required: true, message: '请输入考试名称', trigger: 'blur' },\n          ],\n          taskId: [\n            { required: true, message: '请选择课程', trigger: 'blur' },\n          ],\n          totalScore: [\n            { required: true, message: '请输入总分', trigger: 'blur' },\n          ],\n          totalTime: [\n            { required: true, message: '请输入考试时长', trigger: 'blur' },\n          ],\n          startTime: [\n            { required: true, message: '请输入开始时间', trigger: 'blur' },\n          ],\n          endTime: [\n            { required: true, message: '请输入截止时间', trigger: 'blur' },\n          ],\n        },\n      }\n    },\n    props: ['addVisible','flag'],\n    methods: {\n      submit() {\n        this.$refs[\"ruleForm\"].validate((valid) => {\n          if (valid) {\n            saveTest(this.form).then(res => {\n              if(res.code == 1000) {\n                this.$notify.success({\n                  title: '成功',\n                  message: \"保存成功\"\n                });\n                this.handleClose();\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n            })\n          } else {\n            return false;\n          }\n        });\n      },\n      handleClose() {\n        this.form = {\n          name: \"\",\n          taskId: \"\",\n          taskName: \"\",\n          totalScore: \"\",\n          totalTime: \"120\",\n          startTime: \"\",\n          endTime: \"\",\n          state: \"\",\n          remark: \"\",\n        },\n        this.$emit(\"addFalse\")\n      },\n      getTaskList() {\n          getTaskList().then(res => {\n              if(res.code == 1000) {\n                this.task = res.data;\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n          })\n      },\n      getTaskByTeacherId() {\n        getTaskByTeacherId().then(res => {\n              if(res.code == 1000) {\n                this.task = res.data;\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n          })\n      },\n    },\n    created() {\n\n    },\n    mounted() {\n      if(this.flag == 2) {\n        this.getTaskByTeacherId()\n      } else {\n        this.getTaskList()\n      }\n    }\n }\n</script>\n\n<style   scoped>\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>\n"],"mappings":"AAgGA,SAAAA,KAAA;AACA,SAAAC,QAAA,EAAAC,WAAA,EAAAC,kBAAA;AACA;EACAC,MAAA,GAAAJ,KAAA;EACAK,KAAA;IACA;MACAC,cAAA;MACAC,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,QAAA;QACAC,UAAA;QACAC,SAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA;QACAC,MAAA;MACA;MACAC,IAAA;MACAC,KAAA;QACAV,IAAA,GACA;UAAAW,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAZ,MAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAV,UAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,SAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,SAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,OAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,KAAA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA1B,QAAA,MAAAM,IAAA,EAAAqB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;gBACAC,KAAA;gBACAb,OAAA;cACA;cACA,KAAAc,WAAA;YACA;cACA,KAAAH,OAAA,CAAAI,KAAA;gBACAF,KAAA;gBACAb,OAAA,EAAAS,GAAA,CAAAT;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAc,YAAA;MACA,KAAA3B,IAAA;QACAC,IAAA;QACAC,MAAA;QACAC,QAAA;QACAC,UAAA;QACAC,SAAA;QACAC,SAAA;QACAC,OAAA;QACAC,KAAA;QACAC,MAAA;MACA,GACA,KAAAoB,KAAA;IACA;IACAlC,YAAA;MACAA,WAAA,GAAA0B,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAb,IAAA,GAAAY,GAAA,CAAAxB,IAAA;QACA;UACA,KAAA0B,OAAA,CAAAI,KAAA;YACAF,KAAA;YACAb,OAAA,EAAAS,GAAA,CAAAT;UACA;QACA;MACA;IACA;IACAjB,mBAAA;MACAA,kBAAA,GAAAyB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAb,IAAA,GAAAY,GAAA,CAAAxB,IAAA;QACA;UACA,KAAA0B,OAAA,CAAAI,KAAA;YACAF,KAAA;YACAb,OAAA,EAAAS,GAAA,CAAAT;UACA;QACA;MACA;IACA;EACA;EACAiB,QAAA,GAEA;EACAC,QAAA;IACA,SAAAC,IAAA;MACA,KAAApC,kBAAA;IACA;MACA,KAAAD,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}