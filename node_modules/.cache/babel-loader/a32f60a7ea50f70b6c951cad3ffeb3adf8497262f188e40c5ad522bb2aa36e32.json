{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\nimport { Message, MessageBox } from 'element-ui'; //导入element-ui组件库\n\n// 创建axios的对象\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080\",\n  //配置固定域名\n  timeout: 5000\n});\n\n// 请求拦截\n// 所有的网络请求都会走这个方法,可以在请求添加自定义内容\ninstance.interceptors.request.use(function (config) {\n  if (config.method === 'post') {\n    // 如果是数组，不添加时间戳\n    if (!Array.isArray(config.data) && !(config.data instanceof FormData)) {\n      config.data = {\n        ...config.data,\n        _t: Date.parse(new Date()) / 1000\n      };\n    }\n  } else if (config.method === 'get') {\n    config.params = {\n      random: Math.random(),\n      // 随机数\n      ...config.params\n    };\n  }\n  config.headers.x_access_token = window.localStorage.getItem(\"token\"); // 请求头添加token值\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n});\n\n// 响应拦截\n// 此处可以根据服务器返回的状态码做相应的数据\ninstance.interceptors.response.use(function (response) {\n  const res = response;\n  if (res.data.code === 1011 || res.data.code == 1008 || res.data.code == 1006) {\n    MessageBox.alert('系统登陆已过期，请重新登录', '错误', {\n      confirmButtonText: '确定',\n      type: 'error'\n    }).then(() => {\n      store.dispatch('user/logout').then(() => {\n        store.commit(\"menu/setMenus\", []);\n        store.commit(\"menu/setRoutes\", []);\n        store.commit(\"menu/setDisplayMenus\", []);\n        store.commit(\"menu/setBtnMenus\", []);\n        location.reload();\n      });\n    });\n    return Promise.reject('error');\n  } else if (res.data.code == 1009) {\n    MessageBox.alert('该账号已被锁定', '错误', {\n      confirmButtonText: '确定',\n      type: 'error'\n    }).then(() => {\n      store.dispatch('user/logout').then(() => {\n        store.commit(\"menu/setMenus\", []);\n        store.commit(\"menu/setRoutes\", []);\n        store.commit(\"menu/setDisplayMenus\", []);\n        store.commit(\"menu/setBtnMenus\", []);\n        location.reload();\n      });\n    });\n    return Promise.reject('error');\n  } else if (res.status != 200) {\n    MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\n      confirmButtonText: '确定',\n      type: 'error'\n    });\n    return Promise.reject('error');\n  } else {\n    return res.data;\n  }\n}, function (err) {\n  MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\n    confirmButtonText: '确定',\n    type: 'error'\n  });\n  return Promise.reject('error');\n});\n\n// 封装get和post请求\nexport function get(url, params) {\n  return instance.get(url, {\n    params\n  });\n}\nexport function post(url, data) {\n  return instance.post(url, data);\n}\nexport default instance;","map":{"version":3,"names":["axios","store","Message","MessageBox","instance","create","baseURL","timeout","interceptors","request","use","config","method","Array","isArray","data","FormData","_t","Date","parse","params","random","Math","headers","x_access_token","window","localStorage","getItem","err","Promise","reject","response","res","code","alert","confirmButtonText","type","then","dispatch","commit","location","reload","status","get","url","post"],"sources":["E:/project/java/46-SpringBoot+Vue在线学习教育平台/edu-hub-admin-frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\nimport store from '@/store'\nimport { Message, MessageBox } from 'element-ui'  //导入element-ui组件库\n \n// 创建axios的对象\nconst instance = axios.create({\n    baseURL: \"http://localhost:8080\",  //配置固定域名\n    timeout: 5000\n})\n \n// 请求拦截\n// 所有的网络请求都会走这个方法,可以在请求添加自定义内容\ninstance.interceptors.request.use(\n    function (config) {\n        if (config.method === 'post') {\n            // 如果是数组，不添加时间戳\n            if (!Array.isArray(config.data) && !(config.data instanceof FormData)) {\n                config.data = {\n                    ...config.data,\n                    _t: Date.parse(new Date()) / 1000\n                }\n            }\n        } else if (config.method === 'get') {\n            config.params = {\n              random: Math.random(), // 随机数\n              ...config.params\n            }\n        }\n        config.headers.x_access_token = window.localStorage.getItem(\"token\") // 请求头添加token值\n        return config\n    },\n    function (err) {\n        return Promise.reject(err)\n    }\n)\n \n// 响应拦截\n// 此处可以根据服务器返回的状态码做相应的数据\ninstance.interceptors.response.use(\n    function (response) {\n        const res = response\n        if (res.data.code === 1011 || res.data.code == 1008 || res.data.code == 1006) {\n            MessageBox.alert('系统登陆已过期，请重新登录', '错误', {\n                confirmButtonText: '确定',\n                type: 'error'\n            }).then(() => {\n                store.dispatch('user/logout').then(() => {\n                    store.commit(\"menu/setMenus\",[])\n                    store.commit(\"menu/setRoutes\",[])\n                    store.commit(\"menu/setDisplayMenus\",[])\n                    store.commit(\"menu/setBtnMenus\",[])\n                    location.reload()\n                })\n            })\n            return Promise.reject('error')\n        } else if(res.data.code == 1009) {\n            MessageBox.alert('该账号已被锁定', '错误', {\n                confirmButtonText: '确定',\n                type: 'error'\n            }).then(() => {\n                store.dispatch('user/logout').then(() => {\n                    store.commit(\"menu/setMenus\",[])\n                    store.commit(\"menu/setRoutes\",[])\n                    store.commit(\"menu/setDisplayMenus\",[])\n                    store.commit(\"menu/setBtnMenus\",[])\n                    location.reload()\n                })\n            })\n            return Promise.reject('error')\n        } else if (res.status != 200) {\n            MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\n                confirmButtonText: '确定',\n                type: 'error'\n            })\n            return Promise.reject('error')\n        } else {\n            return res.data\n        }\n    },\n    function (err) {\n        MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\n            confirmButtonText: '确定',\n            type: 'error'\n        })\n        return Promise.reject('error')\n    }\n)\n \n// 封装get和post请求\nexport function get(url, params) {\n    return instance.get(url, {params})\n}\n \nexport function post(url, data) {\n    return instance.post(url, data)\n}\n \nexport default instance;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}