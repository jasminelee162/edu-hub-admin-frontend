{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { saveTestItem } from '../../../api/api';\nexport default {\n  props: ['addVisible', 'testId'],\n  data() {\n    return {\n      form: {\n        testId: '',\n        title: '',\n        sort: '',\n        type: '0',\n        score: '',\n        keyword: '',\n        answer: '',\n        content: '',\n        remark: ''\n      },\n      content: [{\n        value: 'A',\n        option: ''\n      }],\n      keyword: [{\n        value: '',\n        option: ''\n      }],\n      multipleAnswers: [],\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入题目',\n          trigger: 'blur'\n        }],\n        sort: [{\n          required: true,\n          message: '请输入序号',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入分数',\n          trigger: 'blur'\n        }],\n        answer: [{\n          required: true,\n          validator: (rule, value, callback) => {\n            if (this.form.type === '1') {\n              if (!this.multipleAnswers.length) {\n                callback(new Error('请选择一个或多个正确答案'));\n              } else {\n                callback();\n              }\n            } else if (this.form.type === '0' || this.form.type === '3') {\n              if (!value) {\n                callback(new Error('请选择答案'));\n              } else {\n                callback();\n              }\n            } else {\n              // 填空、问答、计算题等\n              if (!value) {\n                callback(new Error('请输入答案'));\n              } else {\n                callback();\n              }\n            }\n          },\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择类型',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    addContent() {\n      const nextChar = String.fromCharCode(65 + this.content.length);\n      this.content.push({\n        value: nextChar,\n        option: ''\n      });\n    },\n    minusContent(index) {\n      this.content.splice(index, 1);\n      this.content.forEach((item, i) => {\n        item.value = String.fromCharCode(65 + i);\n      });\n    },\n    addKeyword() {\n      this.keyword.push({\n        value: '',\n        option: ''\n      });\n    },\n    minusKeyword(index) {\n      this.keyword.splice(index, 1);\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (!valid) return;\n        if (this.form.type === '0' || this.form.type === '1') {\n          for (const item of this.content) {\n            if (!item.option) {\n              this.$message.warning('请完善选项内容');\n              return;\n            }\n          }\n          this.form.content = JSON.stringify(this.content);\n          if (this.form.type === '1') {\n            this.form.answer = this.multipleAnswers.join(',');\n          }\n        } else if (this.form.type === '3') {\n          this.form.content = '';\n        } else {\n          this.form.content = '';\n        }\n        if (this.form.type === '4') {\n          for (const item of this.keyword) {\n            if (!item.value || !item.option) {\n              this.$message.warning('请完善得分点');\n              return;\n            }\n          }\n          this.form.keyword = JSON.stringify(this.keyword);\n        } else {\n          this.form.keyword = '';\n        }\n        this.form.testId = this.testId;\n        saveTestItem(this.form).then(res => {\n          if (res.code === 1000) {\n            this.$notify.success({\n              title: '成功',\n              message: '保存成功'\n            });\n            this.handleClose();\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      });\n    },\n    handleClose() {\n      this.content = [{\n        value: 'A',\n        option: ''\n      }];\n      this.keyword = [{\n        value: '',\n        option: ''\n      }];\n      this.multipleAnswers = [];\n      this.form = {\n        testId: '',\n        title: '',\n        sort: '',\n        type: '0',\n        score: '',\n        keyword: '',\n        answer: '',\n        content: '',\n        remark: ''\n      };\n      this.$emit(\"addFalse\");\n    }\n  }\n};","map":{"version":3,"names":["saveTestItem","props","data","form","testId","title","sort","type","score","keyword","answer","content","remark","value","option","multipleAnswers","rules","required","message","trigger","validator","rule","callback","length","Error","methods","addContent","nextChar","String","fromCharCode","push","minusContent","index","splice","forEach","item","i","addKeyword","minusKeyword","submit","$refs","validate","valid","$message","warning","JSON","stringify","join","then","res","code","$notify","success","handleClose","error","$emit"],"sources":["src/components/system/testP/addTestItem.vue"],"sourcesContent":["<template>\n  <div>\n    <el-dialog title=\"新增考试题目\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"addVisible\" :before-close=\"handleClose\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n        <el-row :gutter=\"10\">\n\n          <!-- 题目 -->\n          <el-col :xs=\"24\">\n            <span class=\"search-title\">题目:</span>\n            <el-form-item prop=\"title\" style=\"margin-bottom:0\">\n              <el-input v-model=\"form.title\" size=\"mini\" placeholder=\"请输入题目\" autocomplete=\"off\" />\n            </el-form-item>\n          </el-col>\n\n          <!-- 序号 -->\n          <el-col :xs=\"24\">\n            <span class=\"search-title\">序号:</span>\n            <el-form-item prop=\"sort\" style=\"margin-bottom:0\">\n              <el-input type=\"number\" v-model=\"form.sort\" size=\"mini\" placeholder=\"请输入序号\" autocomplete=\"off\" />\n            </el-form-item>\n          </el-col>\n\n          <!-- 类型 -->\n          <el-col :xs=\"24\">\n            <span class=\"search-title\">类型:</span>\n            <el-form-item prop=\"type\" style=\"margin-bottom:0\">\n              <el-select clearable size=\"mini\" v-model=\"form.type\" placeholder=\"请选择\">\n                <el-option label=\"单选\" value=\"0\" />\n                <el-option label=\"多选\" value=\"1\" />\n                <el-option label=\"填空\" value=\"2\" />\n                <el-option label=\"判断\" value=\"3\" />\n                <el-option label=\"问答\" value=\"4\" />\n                <el-option label=\"计算(需人工阅卷)\" value=\"5\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <!-- 分数 -->\n          <el-col :xs=\"24\">\n            <span class=\"search-title\">分数:</span>\n            <el-form-item prop=\"score\" style=\"margin-bottom:0\">\n              <el-input type=\"number\" v-model=\"form.score\" size=\"mini\" placeholder=\"请输入分数\" autocomplete=\"off\" />\n            </el-form-item>\n          </el-col>\n\n          <!-- 得分点 -->\n          <el-col v-if=\"form.type == '4'\" :xs=\"24\">\n            <span class=\"search-title\">得分点:</span>\n            <el-form-item prop=\"content\" style=\"margin-bottom:0\">\n              <div class=\"content-item\" v-for=\"(item,index) in keyword\" :key=\"index\" style=\"display:flex;margin-bottom:5px\">\n                <div style=\"width:100px;margin-right:10px\">\n                  <el-input v-model=\"item.value\" size=\"mini\" placeholder=\"分数\" />\n                </div>\n                <el-input v-model=\"item.option\" size=\"mini\" placeholder=\"关键词\" />\n                <i class=\"el-icon-circle-plus-outline\" v-if=\"index === keyword.length - 1\" style=\"margin-left:10px;cursor:pointer\" @click=\"addKeyword\" />\n                <i class=\"el-icon-remove-outline\" v-if=\"index !== 0\" style=\"margin-left:10px;cursor:pointer\" @click=\"minusKeyword(index)\" />\n              </div>\n            </el-form-item>\n          </el-col>\n\n          <!-- 答案 -->\n          <el-col :xs=\"24\">\n            <span class=\"search-title\">答案:</span>\n            <el-form-item prop=\"answer\" style=\"margin-bottom:0\">\n              <el-radio-group v-if=\"form.type == '0'\" v-model=\"form.answer\" size=\"mini\">\n                <el-radio v-for=\"(item, index) in content\" :key=\"'radio-' + index\" :label=\"item.value\">{{ item.value }}</el-radio>\n              </el-radio-group>\n              <el-checkbox-group v-else-if=\"form.type == '1'\" v-model=\"multipleAnswers\" size=\"mini\">\n                <el-checkbox v-for=\"(item, index) in content\" :key=\"'check-' + index\" :label=\"item.value\">{{ item.value }}</el-checkbox>\n              </el-checkbox-group>\n              <el-radio-group v-else-if=\"form.type == '3'\" v-model=\"form.answer\" size=\"mini\">\n                <el-radio label=\"正确\">正确</el-radio>\n                <el-radio label=\"错误\">错误</el-radio>\n              </el-radio-group>\n              <el-input v-else type=\"textarea\" v-model=\"form.answer\" size=\"mini\" placeholder=\"请输入答案\" autocomplete=\"off\" />\n            </el-form-item>\n          </el-col>\n\n          <!-- 题目内容 -->\n          <el-col v-if=\"form.type == '0' || form.type == '1'\" :xs=\"24\">\n            <span class=\"search-title\">题目内容:</span>\n            <el-form-item prop=\"content\" style=\"margin-bottom:0\">\n              <div class=\"content-item\" v-for=\"(item,index) in content\" :key=\"index\" style=\"display:flex;align-items:center;margin-bottom:5px\">\n                <div style=\"width:60px;margin-right:10px\">\n                  <el-input v-model=\"item.value\" size=\"mini\" placeholder=\"选项\" readonly />\n                </div>\n                <el-input v-model=\"item.option\" size=\"mini\" placeholder=\"选项内容\" style=\"flex:1\" />\n                <i class=\"el-icon-circle-plus-outline\" v-if=\"index === content.length - 1\" style=\"margin-left:10px;cursor:pointer\" @click=\"addContent\" />\n                <i class=\"el-icon-remove-outline\" v-if=\"index !== 0\" style=\"margin-left:10px;cursor:pointer\" @click=\"minusContent(index)\" />\n              </div>\n            </el-form-item>\n          </el-col>\n\n          <!-- 备注 -->\n          <el-col style=\"margin-top:20px\" :xs=\"24\">\n            <span class=\"search-title\">备注:</span>\n            <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\n              <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n        <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { saveTestItem } from '../../../api/api'\nexport default {\n  props: ['addVisible', 'testId'],\n  data() {\n    return {\n      form: {\n        testId: '',\n        title: '',\n        sort: '',\n        type: '0',\n        score: '',\n        keyword: '',\n        answer: '',\n        content: '',\n        remark: '',\n      },\n      content: [{ value: 'A', option: '' }],\n      keyword: [{ value: '', option: '' }],\n      multipleAnswers: [],\n      rules: {\n        title: [{ required: true, message: '请输入题目', trigger: 'blur' }],\n        sort: [{ required: true, message: '请输入序号', trigger: 'blur' }],\n        score: [{ required: true, message: '请输入分数', trigger: 'blur' }],\n        answer: [\n          {\n            required: true,\n            validator: (rule, value, callback) => {\n              if (this.form.type === '1') {\n                if (!this.multipleAnswers.length) {\n                  callback(new Error('请选择一个或多个正确答案'))\n                } else {\n                  callback()\n                }\n              } else if (this.form.type === '0' || this.form.type === '3') {\n                if (!value) {\n                  callback(new Error('请选择答案'))\n                } else {\n                  callback()\n                }\n              } else {\n                // 填空、问答、计算题等\n                if (!value) {\n                  callback(new Error('请输入答案'))\n                } else {\n                  callback()\n                }\n              }\n            },\n            trigger: 'blur'\n          }\n        ],\n        type: [{ required: true, message: '请选择类型', trigger: 'blur' }],\n      },\n    }\n  },\n  methods: {\n    addContent() {\n      const nextChar = String.fromCharCode(65 + this.content.length)\n      this.content.push({ value: nextChar, option: '' })\n    },\n    minusContent(index) {\n      this.content.splice(index, 1)\n      this.content.forEach((item, i) => {\n        item.value = String.fromCharCode(65 + i)\n      })\n    },\n    addKeyword() {\n      this.keyword.push({ value: '', option: '' })\n    },\n    minusKeyword(index) {\n      this.keyword.splice(index, 1)\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate((valid) => {\n        if (!valid) return\n\n        if (this.form.type === '0' || this.form.type === '1') {\n          for (const item of this.content) {\n            if (!item.option) {\n              this.$message.warning('请完善选项内容')\n              return\n            }\n          }\n          this.form.content = JSON.stringify(this.content)\n\n          if (this.form.type === '1') {\n            this.form.answer = this.multipleAnswers.join(',')\n          }\n        } else if (this.form.type === '3') {\n          this.form.content = ''\n        } else {\n          this.form.content = ''\n        }\n\n        if (this.form.type === '4') {\n          for (const item of this.keyword) {\n            if (!item.value || !item.option) {\n              this.$message.warning('请完善得分点')\n              return\n            }\n          }\n          this.form.keyword = JSON.stringify(this.keyword)\n        } else {\n          this.form.keyword = ''\n        }\n\n        this.form.testId = this.testId\n        saveTestItem(this.form).then(res => {\n          if (res.code === 1000) {\n            this.$notify.success({ title: '成功', message: '保存成功' })\n            this.handleClose()\n          } else {\n            this.$notify.error({ title: '错误', message: res.message })\n          }\n        })\n      })\n    },\n    handleClose() {\n      this.content = [{ value: 'A', option: '' }]\n      this.keyword = [{ value: '', option: '' }]\n      this.multipleAnswers = []\n      this.form = {\n        testId: '',\n        title: '',\n        sort: '',\n        type: '0',\n        score: '',\n        keyword: '',\n        answer: '',\n        content: '',\n        remark: '',\n      }\n      this.$emit(\"addFalse\")\n    },\n  },\n}\n</script>\n\n\n\n<style   scoped>\n  .content-item {\n    display: flex;\n    align-items: center;\n  }\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}