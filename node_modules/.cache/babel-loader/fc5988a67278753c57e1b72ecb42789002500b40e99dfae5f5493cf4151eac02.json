{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getIndexData, getIndexSexData, getTaskChart, getTaskIndexList } from '../../../api/api';\nimport * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      top: {},\n      sex: [],\n      tasks: [],\n      nums: [],\n      taskList: [],\n      taskCard: [],\n      today: new Date(),\n      myChart: \"\",\n      pieChart: \"\"\n    };\n  },\n  methods: {\n    toTask() {\n      var param = {\n        \"name\": \"ËØæÁ®ãÁÆ°ÁêÜ\",\n        \"url\": \"/task\"\n      };\n      this.$store.commit('menu/addActiveMenu', param);\n      this.$router.push(\"/task\");\n      this.$store.commit('menu/setActiveMenu', \"/task\");\n    },\n    toStudent() {\n      var param = {\n        \"name\": \"Â≠¶ÁîüÁÆ°ÁêÜ\",\n        \"url\": \"/student\"\n      };\n      this.$store.commit('menu/addActiveMenu', param);\n      this.$router.push(\"/student\");\n      this.$store.commit('menu/setActiveMenu', \"/student\");\n    },\n    toTeacher() {\n      var param = {\n        \"name\": \"ÊïôÂ∏àÁÆ°ÁêÜ\",\n        \"url\": \"/teacher\"\n      };\n      this.$store.commit('menu/addActiveMenu', param);\n      this.$router.push(\"/teacher\");\n      this.$store.commit('menu/setActiveMenu', \"/teacher\");\n    }\n  },\n  created() {},\n  mounted() {\n    getIndexData({\n      type: 0\n    }).then(res => {\n      if (res.code == 1000) {\n        this.top = res.data;\n      }\n    });\n    getIndexSexData({\n      type: 0\n    }).then(res => {\n      if (res.code == 1000) {\n        this.sex = res.data;\n        this.pieChart = echarts.init(document.getElementById(\"pie-chart\"));\n        var optionPie = {\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            center: 'center',\n            textStyle: {\n              color: '#666'\n            } // Ê∑ªÂä†Âõæ‰æãÊñáÂ≠óÈ¢úËâ≤\n          },\n          series: [{\n            name: 'Â≠¶ÁîüÊÄßÂà´ÂàÜÊûê',\n            type: 'pie',\n            radius: '50%',\n            data: [{\n              value: this.sex[0].value,\n              name: this.sex[0].name,\n              itemStyle: {\n                color: '#8470D1',\n                // ÊµÖÁ¥´Ëâ≤ÔºàÁî∑Ôºâ\n                borderWidth: 2,\n                borderColor: '#fff'\n              }\n            }, {\n              value: this.sex[1].value,\n              name: this.sex[1].name,\n              itemStyle: {\n                color: '#6A5ACD',\n                // Ê∑±Á¥´Ëâ≤ÔºàÂ•≥Ôºâ\n                borderWidth: 2,\n                borderColor: '#fff'\n              }\n            }],\n            label: {\n              // Ê∑ªÂä†Ê†áÁ≠æÊ†∑Âºè\n              color: '#333',\n              fontSize: 14\n            },\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.3)'\n              }\n            }\n          }]\n        };\n        this.pieChart.setOption(optionPie);\n      }\n    });\n    getTaskChart({\n      type: 0\n    }).then(res => {\n      console.log(\"üìä Chart Data:\", res);\n      if (res.code == 1000) {\n        this.tasks = res.data.tasks;\n        this.nums = res.data.nums;\n        this.myChart = echarts.init(document.getElementById(\"chart\"));\n        var option = {\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['Â≠¶ÁîüÊï∞Èáè', 'Â≠¶ÁîüÊï∞Èáè']\n          },\n          backgroundColor: '#fff',\n          xAxis: [{\n            type: 'category',\n            color: '#59588D',\n            data: this.tasks,\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(107,107,107,0.37)'\n              }\n            },\n            axisTick: {\n              show: true\n            }\n          }],\n          yAxis: [{\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(107,107,107,0.37)'\n              }\n            },\n            axisTick: {\n              show: true\n            },\n            splitLine: {\n              lineStyle: {\n                color: 'rgba(131,101,101,0.2)',\n                type: 'dashed'\n              }\n            }\n          }],\n          series: [{\n            data: this.nums,\n            type: 'line',\n            name: 'ÊäòÁ∫øÂõæ',\n            symbol: 'none',\n            areaStyle: {\n              color: \"#E6F8EE\"\n            },\n            lineStyle: {\n              color: '#3AC977',\n              width: 2,\n              shadowColor: 'rgba(0, 0, 0, 0.3)',\n              //ËÆæÁΩÆÊäòÁ∫øÈò¥ÂΩ±\n              shadowBlur: 15,\n              shadowOffsetY: 20\n            },\n            zlevel: 1\n          }, {\n            type: 'bar',\n            data: this.nums,\n            barWidth: '15px',\n            name: 'Êü±Áä∂Âõæ',\n            itemStyle: {\n              normal: {\n                color: function (params) {\n                  //Â±ïÁ§∫Ê≠£ÂÄºÁöÑÊü±Â≠êÔºåË¥üÊï∞ËÆæ‰∏∫ÈÄèÊòé\n                  let colorArr = params.value > 0 ? ['#7866BE', '#7866BE'] : ['rgba(0,0,0,0)', 'rgba(0,0,0,0)'];\n                  return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: colorArr[0] // 0% Â§ÑÁöÑÈ¢úËâ≤\n                  }, {\n                    offset: 1,\n                    color: colorArr[1] // 100% Â§ÑÁöÑÈ¢úËâ≤\n                  }], false);\n                },\n                barBorderRadius: [30, 30, 0, 0]\n              }\n            },\n            label: {\n              normal: {\n                show: true,\n                fontSize: 13,\n                color: '#333',\n                position: 'top'\n              }\n            },\n            zlevel: 2\n          }]\n        };\n        this.myChart.setOption(option);\n      }\n    });\n    getTaskIndexList({\n      type: 0\n    }).then(res => {\n      if (res.code == 1000) {\n        this.taskList = res.data.slice(0, 5);\n        this.taskCard = res.data.slice(0, 3);\n      }\n    });\n    var that = this;\n    window.onresize = function () {\n      if (that.myChart && typeof that.myChart.resize === 'function') {\n        that.myChart.resize();\n      }\n      if (that.pieChart && typeof that.pieChart.resize === 'function') {\n        that.pieChart.resize();\n      }\n    };\n  }\n};","map":{"version":3,"names":["getIndexData","getIndexSexData","getTaskChart","getTaskIndexList","echarts","data","top","sex","tasks","nums","taskList","taskCard","today","Date","myChart","pieChart","methods","toTask","param","$store","commit","$router","push","toStudent","toTeacher","created","mounted","type","then","res","code","init","document","getElementById","optionPie","tooltip","trigger","legend","center","textStyle","color","series","name","radius","value","itemStyle","borderWidth","borderColor","label","fontSize","emphasis","shadowBlur","shadowOffsetX","shadowColor","setOption","console","log","option","backgroundColor","xAxis","axisLine","lineStyle","axisTick","show","yAxis","splitLine","symbol","areaStyle","width","shadowOffsetY","zlevel","barWidth","normal","params","colorArr","graphic","LinearGradient","offset","barBorderRadius","position","slice","that","window","onresize","resize"],"sources":["src/views/system/index/index.vue"],"sourcesContent":["<template>\n    <div>\n        <el-row :gutter=\"20\" class=\"index-top\">\n            <!-- Á¨¨‰∏ÄË°å -->\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple\">\n                    <el-card shadow=\"always\" class=\"item-01\">\n                        <!-- Áî®Êà∑Êï∞Èáè -->\n                        <div class=\"item-01-top\">\n                            <img src=\"../../../assets/image/index-01.png\" style=\"width:110px\">\n                            <div class=\"item-01-top-center\">\n                                <div style=\"color:#ffffff;font-size:20px;font-weight:bold\">Áî®Êà∑Êï∞Èáè</div>\n                                <div style=\"color:#ffffff;font-size:30px;font-weight:bold\">{{top.userNum}}‰∫∫</div>\n                            </div>\n                        </div>\n                        <div class=\"item-01-under\">\n                            <!-- <div style=\"color:#B1B7EA;font-size:14px;font-weight:bold\">Êü•ÁúãÁî®Êà∑ÂàóË°®</div> -->\n                            <!-- <i class=\"el-icon-right\" style=\"color:#B1B7EA;font-size:14px;font-weight:bold\"></i> -->\n                        </div>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple\">\n                    <el-card shadow=\"always\" class=\"item-03\">\n                        <div class=\"item-01-top\">\n                            <img src=\"../../../assets/image/index-02.png\" style=\"width:110px\">\n                            <div class=\"item-01-top-center\">\n                                <div style=\"color:#000000;font-size:20px;font-weight:bold\">Â≠¶ÁîüÊï∞Èáè</div>\n                                <div style=\"color:#000000;font-size:30px;font-weight:bold\">{{top.studentNum}}‰∫∫</div>\n                            </div>\n                        </div>\n                        <div class=\"item-01-under\" @click=\"toStudent()\" \n                             style=\"cursor: pointer; transition: all 0.3s;\">\n                            <div style=\"color:black;font-size:14px;font-weight:bold;text-decoration: underline; text-underline-offset: 3px; \">Êü•ÁúãÂÖ®ÈÉ®</div>\n                            <i class=\"el-icon-right\" style=\"color:black;font-size:14px;font-weight:bold\"></i>\n                        </div>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple\">\n                    <el-card shadow=\"always\" class=\"item-05\">\n                        <div class=\"item-01-top\">\n                            <img src=\"../../../assets/image/avator.png\" style=\"width:110px\">\n                            <div class=\"item-01-top-center\">\n                                <div style=\"color:#ffffff;font-size:20px;font-weight:bold\">ÊïôÂ∏àÊï∞Èáè</div>\n                                <div style=\"color:#ffffff;font-size:30px;font-weight:bold\">{{top.teacherNum}}‰∫∫</div>\n                            </div>\n                        </div>\n                        <div class=\"item-01-under\" @click=\"toTeacher()\" \n                             style=\"cursor: pointer; transition: all 0.3s;\">\n                            <div style=\"color:black;font-size:14px;font-weight:bold;text-decoration: underline;text-underline-offset: 3px; /* ÊéßÂà∂‰∏ãÂàíÁ∫øË∑ùÁ¶ª */\">Êü•ÁúãÂÖ®ÈÉ®</div>\n                            <i class=\"el-icon-right\" style=\"color:black;font-size:14px;font-weight:bold\"></i>\n                        </div>\n                    </el-card>\n                </div>\n            </el-col>\n            <el-col :span=\"6\">\n                <div class=\"grid-content bg-purple\">\n                    <el-card shadow=\"always\" class=\"item-06\">\n                        <div class=\"item-01-top\">\n                            <img src=\"../../../assets/image/index-05.png\" style=\"width:110px\">\n                            <div class=\"item-01-top-center\">\n                                <div style=\"color:#000000;font-size:12px;font-weight:bold;display:flex;align-item:center\">\n                                    <img src=\"../../../assets/image/index-06.png\" style=\"width:20px\">Ôºöpuppy03110\n                                </div>\n                                <div style=\"color:#000000;font-size:12px;font-weight:bold;display:flex;align-item:center\">\n                                    <img src=\"../../../assets/image/index-07.png\" style=\"width:20px\">Ôºö3204986849\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"item-01-under\">\n                            <div style=\"color:black;font-size:14px;font-weight:bold\">ËÅîÁ≥ªÊàë‰ª¨</div>\n                            <i class=\"el-icon-phone-outline\" style=\"color:black;font-size:14px;font-weight:bold\"></i>\n                        </div>\n                    </el-card>\n                </div>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"index-center\">\n            <el-col :span=\"16\">\n                <el-card shadow=\"always\" class=\"item-07\">\n                    <div id=\"chart\" style=\"height: 300px;\">\n\n                    </div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"8\">\n                <el-card shadow=\"always\" class=\"item-08\">\n                    <div id=\"pie-chart\">\n\n                    </div>\n                </el-card>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"index-center-01\">\n            <el-col :span=\"24\">\n                <el-card shadow=\"always\" class=\"item-09\">\n                    <el-table\n                        :data=\"taskList\"\n                        :header-cell-style=\"{\n              'color': '#4A2B90',\n              'background-color': '#ECE9F4',\n            }\"\n                        :row-style=\"{\n              'color': '#888897',\n              'font-size': '15px',\n              'font-family':'Èªë‰Ωì'\n            }\"\n                        stripe\n                        style=\"width: 100%\">\n                        <el-table-column\n                            prop=\"name\"\n                            label=\"ËØæÁ®ãÂêçÁß∞\"\n                        >\n                        </el-table-column>\n                        <el-table-column\n                            prop=\"teacherName\"\n                            label=\"ÊïôÂ∏à\"\n                        >\n                            <template slot-scope=\"scope\">\n                                <div style=\"display:flex;align-items: center\">\n                                    <img style=\"width:35px;height:35px\" src=\"../../../assets/image/avator.png\">\n                                    <div style=\"margin-left:10px\">{{scope.row.teacherName}}</div>\n                                </div>\n                            </template>\n                        </el-table-column>\n                                <el-table-column\n                                    prop=\"major\"\n                                    label=\"‰∏ì‰∏ö\"\n                                    align=\"center\">\n                                    <template slot-scope=\"scope\">\n                                        <el-button \n                                            size=\"mini\"\n                                            style=\"\n                                                background-color: #409EFF; \n                                                color: white;\n                                                border-color: #409EFF;\n                                                font-weight: bold;\n                                                width: 50%;\n                                                padding: 4px 0;\n                                            \">\n                                            {{scope.row.major}}\n                                        </el-button>\n                                    </template>\n                                </el-table-column>\n                                <el-table-column\n                                    prop=\"classification\"\n                                    label=\"ËØæÁ®ãÂàÜÁ±ª\"\n                                    align=\"center\">\n                                    <template slot-scope=\"scope\">\n                                        <el-button \n                                            size=\"mini\" \n                                            style=\"\n                                                background-color: #8470D1;\n                                                color: white;\n                                                width: 50%;\n                                                border-color: #8470D1;\n                                                font-weight: bold;\n                                            \">\n                                            {{scope.row.classification}}\n                                        </el-button>\n                                    </template>\n                        </el-table-column>\n                        <el-table-column\n                            prop=\"num\"\n                            label=\"Â≠¶ÁîüÊï∞Èáè\"\n                            align=\"center\">\n                        </el-table-column>\n                        <el-table-column\n                            prop=\"createTime\"\n                            label=\"ÂàõÂª∫Êó∂Èó¥\"\n                            align=\"center\">\n                        </el-table-column>\n                    </el-table>\n                </el-card>\n            </el-col>\n        </el-row>\n        <el-row :gutter=\"20\" class=\"index-under\">\n            <el-col :span=\"16\">\n                <el-card shadow=\"always\" class=\"item-10\">\n                    <div style=\"width:100%;height:50px;display:flex;justify-content: space-between\">\n                        <span>ËØæÁ®ã ÂàóË°®</span>\n                        <el-button style=\"height:35px;background:#8470D1\" size=\"mini\" type=\"primary\" @click=\"toTask()\">Êü•ÁúãÂÖ®ÈÉ®</el-button>\n                    </div>\n                    <div style=\"width:100%;height:260px\">\n                        <el-row>\n                            <el-col class=\"item-10-item\" :span=\"7\" v-for=\"(item,index) in taskCard\" :key=\"index\">\n                                <img :src=\"$store.state.configure.HOST + item.image\" style=\"border-radius: 20px;width:90%\">\n                                <div>{{item.name}}</div>\n                                <div style=\"width:90%;display:flex;justify-content: space-around;\">\n                                    <div style=\"height:35px;font-size:13px;display:flex;align-items:center\"><span>{{item.createTime}}</span>\n                                    </div>\n                                    <el-button size=\"mini\" style=\"height:30px\" type=\"danger\">{{item.teacherName}}</el-button>\n                                </div>\n                            </el-col>\n                        </el-row>\n                    </div>\n                </el-card>\n            </el-col>\n            <el-col :span=\"8\">\n                <el-card shadow=\"always\" class=\"item-11\">\n                    <el-calendar v-model=\"today\">\n                    </el-calendar>\n                </el-card>\n            </el-col>\n        </el-row>\n    </div>\n</template>\n\n<script>\nimport {getIndexData,getIndexSexData,getTaskChart,getTaskIndexList} from '../../../api/api'\nimport * as echarts from \"echarts\";\nexport default {\n    data() {\n        return{\n            top: {},\n            sex: [],\n            tasks: [],\n            nums: [],\n            taskList: [],\n            taskCard: [],\n            today: new Date(),\n            myChart: \"\",\n            pieChart: \"\",\n        }\n    },\n    methods: {\n        toTask() {\n            var param = {\n                \"name\": \"ËØæÁ®ãÁÆ°ÁêÜ\",\n                \"url\": \"/task\"\n            }\n            this.$store.commit('menu/addActiveMenu', param)\n            this.$router.push(\"/task\")\n            this.$store.commit('menu/setActiveMenu', \"/task\")\n        },\n        toStudent() {\n            var param = {\n                \"name\": \"Â≠¶ÁîüÁÆ°ÁêÜ\",\n                \"url\": \"/student\"\n            }\n            this.$store.commit('menu/addActiveMenu', param)\n            this.$router.push(\"/student\")\n            this.$store.commit('menu/setActiveMenu', \"/student\")\n        },\n        toTeacher() {\n            var param = {\n                \"name\": \"ÊïôÂ∏àÁÆ°ÁêÜ\",\n                \"url\": \"/teacher\"\n            }\n            this.$store.commit('menu/addActiveMenu', param)\n            this.$router.push(\"/teacher\")\n            this.$store.commit('menu/setActiveMenu', \"/teacher\")\n        }\n    },\n    created() {\n\n    },\n    mounted() {\n        getIndexData({type:0}).then(res => {\n            if (res.code == 1000) {\n                this.top = res.data\n            }\n        })\n        getIndexSexData({type:0}).then(res => {\n            if (res.code == 1000) {\n                this.sex = res.data;\n                this.pieChart = echarts.init(document.getElementById(\"pie-chart\"));\n                var optionPie = {\n                    tooltip: { trigger: 'item' },\n                    legend: { \n                        center: 'center',\n                        textStyle: { color: '#666' } // Ê∑ªÂä†Âõæ‰æãÊñáÂ≠óÈ¢úËâ≤\n                    },\n                    series: [{\n                        name: 'Â≠¶ÁîüÊÄßÂà´ÂàÜÊûê',\n                        type: 'pie',\n                        radius: '50%',\n                        data: [\n                            {\n                                value: this.sex[0].value,\n                                name: this.sex[0].name,\n                                itemStyle: { \n                                    color: '#8470D1', // ÊµÖÁ¥´Ëâ≤ÔºàÁî∑Ôºâ\n                                    borderWidth: 2,\n                                    borderColor: '#fff'\n                                }\n                            },\n                            {\n                                value: this.sex[1].value,\n                                name: this.sex[1].name,\n                                itemStyle: { \n                                    color: '#6A5ACD', // Ê∑±Á¥´Ëâ≤ÔºàÂ•≥Ôºâ\n                                    borderWidth: 2,\n                                    borderColor: '#fff'\n                                }\n                            }\n                        ],\n                        label: { // Ê∑ªÂä†Ê†áÁ≠æÊ†∑Âºè\n                            color: '#333',\n                            fontSize: 14\n                        },\n                        emphasis: {\n                            itemStyle: {\n                                shadowBlur: 10,\n                                shadowOffsetX: 0,\n                                shadowColor: 'rgba(0, 0, 0, 0.3)'\n                            }\n                        }\n                    }]\n                };\n                this.pieChart.setOption(optionPie);\n            }\n        })\n        getTaskChart({type:0}).then(res => {\n          console.log(\"üìä Chart Data:\", res);\n\n            if (res.code == 1000) {\n                this.tasks = res.data.tasks\n                this.nums = res.data.nums\n                this.myChart = echarts.init(document.getElementById(\"chart\"))\n                var option = {\n                    tooltip: {\n                        trigger: 'axis'\n                    },\n                    legend: {\n                        data: ['Â≠¶ÁîüÊï∞Èáè', 'Â≠¶ÁîüÊï∞Èáè']\n                    },\n                    backgroundColor: '#fff',\n                      xAxis: [{\n                          type: 'category',\n                          color: '#59588D',\n                          data: this.tasks,\n                          axisLine: {\n                              lineStyle: {\n                                  color: 'rgba(107,107,107,0.37)',\n                              }\n                          },\n                          axisTick: {\n                              show: true\n                          },\n                      }],\n                      yAxis: [{\n                          axisLine: {\n                              lineStyle: {\n                                  color: 'rgba(107,107,107,0.37)',\n                              }\n                          },\n                          axisTick: {\n                              show: true\n                          },\n                          splitLine: {\n                              lineStyle: {\n                                  color: 'rgba(131,101,101,0.2)',\n                                  type: 'dashed',\n                              }\n                          }\n                    }],\n                    series: [{\n                        data: this.nums,\n                        type: 'line',\n                        name: 'ÊäòÁ∫øÂõæ',\n                        symbol: 'none',\n                        areaStyle: {\n                            color: \"#E6F8EE\"\n                        },\n                        lineStyle: {\n                            color: '#3AC977',\n                            width: 2,\n                            shadowColor: 'rgba(0, 0, 0, 0.3)',//ËÆæÁΩÆÊäòÁ∫øÈò¥ÂΩ±\n                            shadowBlur: 15,\n                            shadowOffsetY: 20,\n                        },\n                        zlevel: 1\n                    },{\n                        type: 'bar',\n                        data: this.nums,\n                        barWidth: '15px',\n                        name: 'Êü±Áä∂Âõæ',\n                        itemStyle: {\n                            normal: {\n                                color: function(params){//Â±ïÁ§∫Ê≠£ÂÄºÁöÑÊü±Â≠êÔºåË¥üÊï∞ËÆæ‰∏∫ÈÄèÊòé\n                                    let colorArr = params.value > 0?['#7866BE', '#7866BE']:['rgba(0,0,0,0)', 'rgba(0,0,0,0)']\n                                    return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                                        offset: 0,\n                                        color: colorArr[0] // 0% Â§ÑÁöÑÈ¢úËâ≤\n                                    }, {\n                                        offset: 1,\n                                        color:  colorArr[1]// 100% Â§ÑÁöÑÈ¢úËâ≤\n                                    }], false)\n                                },\n                                barBorderRadius: [30,30,0,0]\n                            },\n                        },\n                        label: {\n                            normal: {\n                                show: true,\n                                fontSize: 13,\n                                color: '#333',\n                                position: 'top',\n                            }\n                        },\n                        zlevel: 2\n                    }\n                    ]\n                };\n                this.myChart.setOption(option);\n            }\n        })\n        getTaskIndexList({type:0}).then(res => {\n            if (res.code == 1000) {\n                this.taskList = res.data.slice(0,5)\n                this.taskCard = res.data.slice(0,3)\n            }\n        })\n        var that = this\n        window.onresize = function () {\n          if (that.myChart && typeof that.myChart.resize === 'function') {\n            that.myChart.resize();\n          }\n          if (that.pieChart && typeof that.pieChart.resize === 'function') {\n            that.pieChart.resize();\n          }\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n/* Èò≤Ê≠¢Èº†Ê†áÂèòÊàêÊñáÊú¨ËæìÂÖ•Á¨¶Âè∑ */\n.item-01-top, \n.item-01-top-center{\n  cursor: default !important;\n}\n\n/* ÂõæÊ†áÊÇ¨ÂÅúÊîæÂ§ß */\n.item-01-under i:hover {\n  transform: scale(1.2);\n  color: var(--primary-purple); /* ÊÇ¨ÂÅúÂèòËâ≤ */\n}\n\n/* ÂÖ®Â±ÄÈ¢úËâ≤ÂèòÈáè */\n:root {\n  --primary-purple: #6A5ACD;\n  --light-purple: #8470D1;\n  --dark-purple: #4B0082;\n  --white: #ffffff;\n  --light-bg: #F8F8FF;\n}\n\n/* Âü∫Á°ÄÂ∏ÉÂ±ÄË∞ÉÊï¥ */\n.index-top {\n    height: 210px;\n    margin-bottom: 20px;\n}\n\n/* Âç°ÁâáÁªü‰∏ÄÊ†∑Âºè */\n.el-card {\n    border-radius: 12px;\n    border: none;\n    box-shadow: 0 4px 12px rgba(106, 90, 205, 0.1);\n}\n\n/* È°∂ÈÉ®Âç°Áâá */\n.item-01 {\n    height: 170px;\n    background: linear-gradient(135deg, #483D8B, #7B68EE);\n    color: var(--white);\n}\n\n.item-03, .item-06 {\n    height: 170px;\n    background: var(--white);\n    border: 1px solid rgba(106, 90, 205, 0.1);\n}\n\n.item-05 {\n    height: 170px;\n    background: linear-gradient(135deg, #5F4B8B, #8A2BE2);\n    color: var(--white);\n}\n\n/* ‰∏≠Èó¥ÂõæË°®Âå∫Âüü */\n.index-center {\n    margin: 20px 0;\n    height: 400px;\n    border: 1px solid red !important;\n}\n\n.item-07, .item-08 {\n    height: 400px;\n    background: var(--white);\n    border: 1px solid rgba(106, 90, 205, 0.1);\n}\n\n/* Ë°®Ê†ºÂå∫Âüü */\n.index-center-01 {\n    margin: 20px 0;\n    height: 300px;\n    border: 1px solid red !important;\n}\n\n.item-09 {\n    height: 300px;\n    background: var(--white);\n    border: 1px solid rgba(106, 90, 205, 0.1);\n    overflow: scroll;\n}\n\n/* Â∫ïÈÉ®Âå∫Âüü */\n.index-under {\n    margin-top: 20px;\n    height: 400px;\n    border: 1px solid red !important;\n}\n\n.item-10 {\n    height: 350px;\n    background: var(--white);\n    border: 1px solid rgba(106, 90, 205, 0.1);\n}\n\n.item-11 {\n    border-radius: 8px;\n    height: 390px;\n    background-color: #ffffff;\n}\n\n/* Âç°ÁâáÂÜÖÈÉ®Â∏ÉÂ±Ä */\n.item-01-top {\n    height: 90px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n}\n\n.item-01-top-center {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n}\n\n.item-01-under {\n    height: 60px;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    padding: 0 20px;\n    cursor: pointer !important; /* Á°Æ‰øùÁà∂ÂÆπÂô®ÊòØÂ∞èÊâã */\n}\n\n/* ËØæÁ®ãÂç°Áâá */\n.item-10-item {\n    border: 1px solid rgba(106, 90, 205, 0.2);\n    border-radius: 20px;\n    height: 100%;\n    margin: 0 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    transition: all 0.3s;\n}\n\n.item-10-item:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 5px 15px rgba(106, 90, 205, 0.2);\n}\n\n/* ÊåâÈíÆÊ†∑Âºè */\n.el-button--primary {\n    background-color: var(--primary-purple);\n    border-color: var(--primary-purple);\n}\n\n.el-button--primary:hover {\n    background-color: var(--light-purple);\n    border-color: var(--light-purple);\n}\n\n.el-button--danger {\n    background-color: #FF6B6B;\n    border-color: #FF6B6B;\n}\n\n/* Ë°®Ê†ºÊ†∑Âºè */\n.el-table {\n    --el-table-header-bg-color: #F0EFFF;\n    --el-table-header-text-color: var(--dark-purple);\n    --el-table-border-color: rgba(106, 90, 205, 0.1);\n}\n\n/* ÊªöÂä®Êù°ÈöêËóè */\n.item-09::-webkit-scrollbar {\n    width: 0px;\n    height: 0px;\n}\n\n/* ÂõæË°®ÂÆπÂô® */\n#chart, #pie-chart {\n    width: 100%;\n    height: 380px;\n}\n\n/* Âç°ÁâáÊÇ¨ÂÅúÊîæÂ§ßÊïàÊûú */\n.grid-content .el-card {\n    transition: all 0.3s ease;\n    transform-origin: center;\n    cursor: pointer;\n}\n\n.grid-content .el-card:hover {\n    transform: scale(1.05);\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2) !important;\n}\n\n/* Á°Æ‰øùÂç°ÁâáÂÜÖÂÆπ‰∏ç‰ºöÂõ†‰∏∫ÊîæÂ§ßËÄåÊ∫¢Âá∫ */\n.grid-content {\n    overflow: hidden;\n    border-radius: 12px;\n}\n\n/deep/ .el-calendar-day {\n    height: 40px !important;\n    border: none;\n}\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}