{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mixin } from \"../../../minix\";\nimport { editTask, getTaskById, getUserListByType, getMajorList, getClassificationList } from '../../../api/api';\nexport default {\n  mixins: [mixin],\n  data() {\n    return {\n      formLabelWidth: '80px',\n      form: {\n        name: \"\",\n        taskDescribe: \"\",\n        teacherId: \"\",\n        teacherName: \"\",\n        image: \"\",\n        state: \"\",\n        major: \"\",\n        classification: \"\",\n        num: \"\",\n        remark: \"\",\n        proportion: \"\"\n      },\n      fileList: [],\n      dialogImageUrl: '',\n      dialogVisible: false,\n      rules: {\n        proportion: [{\n          required: true,\n          message: '请输入视频和作业分数占比',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入课程名称',\n          trigger: 'blur'\n        }],\n        taskDescribe: [{\n          required: true,\n          message: '请输入课程描述',\n          trigger: 'blur'\n        }],\n        teacherId: [{\n          required: true,\n          message: '请选择教师',\n          trigger: 'blur'\n        }],\n        state: [{\n          required: true,\n          message: '请选择状态',\n          trigger: 'blur'\n        }],\n        major: [{\n          required: true,\n          message: '请选择所属专业',\n          trigger: 'blur'\n        }],\n        classification: [{\n          required: true,\n          message: '请选择所属分类',\n          trigger: 'blur'\n        }],\n        image: [{\n          required: true,\n          message: '请上传封面图片',\n          trigger: 'blur'\n        }]\n      },\n      teacher: [],\n      major: [],\n      classification: []\n    };\n  },\n  props: ['updateVisible', 'updateId', 'flag'],\n  methods: {\n    handleAvatorSuccess(res) {\n      let _this = this;\n      if (res.code == 1000) {\n        _this.$message({\n          type: 'success',\n          message: '上传成功!'\n        });\n        this.fileList.push({\n          url: this.$store.state.configure.HOST + res.message\n        });\n        this.form.image = res.message;\n      } else {\n        _this.$notify.error({\n          title: '错误',\n          message: res.message\n        });\n      }\n    },\n    handleRemove(file, fileList) {\n      this.form.image = \"\";\n      this.fileList = [];\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    getUserListByType() {\n      getUserListByType({\n        type: 1\n      }).then(res => {\n        if (res.code == 1000) {\n          this.teacher = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    getMajorList() {\n      getMajorList().then(res => {\n        if (res.code == 1000) {\n          this.major = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    getClassificationList() {\n      getClassificationList().then(res => {\n        if (res.code == 1000) {\n          this.classification = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          if (this.flag == 2) {\n            this.form.type = 1;\n          }\n          editTask(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.fileList = [];\n      this.$emit(\"updateFalse\");\n    }\n  },\n  created() {},\n  mounted() {\n    this.getUserListByType();\n    this.getMajorList();\n    this.getClassificationList();\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getTaskById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            this.form = res.data;\n            this.form.state = 2;\n            this.form.num = res.data.num + \"\";\n            this.fileList.push({\n              url: this.$store.state.configure.HOST + this.form.image\n            });\n            if (this.flag == 1) {\n              this.form.type = 0;\n            } else {\n              this.form.type = 1;\n            }\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["mixin","editTask","getTaskById","getUserListByType","getMajorList","getClassificationList","mixins","data","formLabelWidth","form","name","taskDescribe","teacherId","teacherName","image","state","major","classification","num","remark","proportion","fileList","dialogImageUrl","dialogVisible","rules","required","message","trigger","teacher","props","methods","handleAvatorSuccess","res","_this","code","$message","type","push","url","$store","configure","HOST","$notify","error","title","handleRemove","file","handlePictureCardPreview","then","submit","$refs","validate","valid","flag","success","handleClose","$emit","created","mounted","watch","updateId","newVal","id"],"sources":["src/components/system/task/updateTask.vue"],"sourcesContent":["<template>\n<div>\n  <el-dialog title=\"编辑课程\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateVisible\" :before-close=\"handleClose\">\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n      <el-row :gutter=\"10\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                课程名称:\n                </span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"name\" style=\"margin-bottom:0\">\n                  <el-input v-model=\"form.name\" size=\"mini\" placeholder=\"请输入课程名称\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n            </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                课程占比:\n                </span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"proportion\" style=\"margin-bottom:0\">\n                  <el-input type=\"number\" min=\"0\" max=\"100\" v-model=\"form.proportion\" size=\"mini\" placeholder=\"请输入视频和作业分数所占比例\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n            </div>\n        </el-col>\n        <el-col v-if=\"flag == 1\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                教师名称:\n                </span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"teacherId\" style=\"margin-bottom:0\">\n                  <el-select clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.teacherId\" placeholder=\"请选择\">\n                    <el-option v-for=\"(item,index) in teacher\" :key=\"index\"\n                      :label=\"item.userName\"\n                      :value=\"item.id\">\n                    </el-option>\n                  </el-select>\n              </el-form-item>\n             </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                所属专业:\n                </span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"major\" style=\"margin-bottom:0\">\n                <el-select clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.major\" placeholder=\"请选择\">\n                  <el-option v-for=\"(item,index) in major\" :key=\"index\"\n                    :label=\"item.name\"\n                    :value=\"item.name\">\n                  </el-option>\n                </el-select>\n              </el-form-item>\n            </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                所属分类:\n                </span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"classification\" style=\"margin-bottom:0\">\n                  <el-select clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.classification\" placeholder=\"请选择\">\n                    <el-option v-for=\"(item,index) in classification\" :key=\"index\"\n                      :label=\"item.name\"\n                      :value=\"item.name\">\n                    </el-option>\n                  </el-select>\n              </el-form-item>\n            </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                封面:\n                </span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"image\" style=\"margin-bottom:0\">\n                <el-upload\n                  :file-list=\"fileList\"\n                  ref=\"upload\"\n                  :action=\"uploadImageUrl()\"\n                  accept=\"image/*\"\n                  :multiple=\"false\"\n                  :limit=\"1\"\n                  :before-upload=\"beforeAvatorUpload\"\n                  list-type=\"picture-card\"\n                  :on-preview=\"handlePictureCardPreview\"\n                  :on-exceed=\"handleExceed\"\n                  :on-success=\"handleAvatorSuccess\"\n                  :on-remove=\"handleRemove\">\n                  <i class=\"el-icon-plus\"></i>\n                </el-upload>\n                <el-dialog :visible.sync=\"dialogVisible\">\n                  <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n                </el-dialog>\n              </el-form-item>\n            </div>\n        </el-col>\n        <el-col style=\"margin-top:35px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                课程描述:\n                </span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"taskDescribe\" style=\"margin-bottom:0\">\n                <el-input type=\"textarea\" v-model=\"form.taskDescribe\" size=\"mini\" placeholder=\"请输入课程描述\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n            </div>\n        </el-col>\n        <el-col style=\"margin-top:25px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                备注:\n                </span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\n                <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n            </div>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n    </div>\n  </el-dialog>\n</div>\n</template>\n\n<script>\n  import {mixin} from \"../../../minix\";\n  import {editTask,getTaskById,getUserListByType,getMajorList,getClassificationList} from '../../../api/api'\n  export default {\n    mixins: [mixin],\n    data() {\n      return{\n        formLabelWidth: '80px',\n        form: {\n          name: \"\",\n          taskDescribe: \"\",\n          teacherId: \"\",\n          teacherName: \"\",\n          image: \"\",\n          state: \"\",\n          major: \"\",\n          classification: \"\",\n          num: \"\",\n          remark: \"\",\n          proportion: \"\",\n        },\n        fileList: [],\n        dialogImageUrl: '',\n        dialogVisible: false,\n        rules: {\n          proportion: [\n            { required: true, message: '请输入视频和作业分数占比', trigger: 'blur' },\n          ],\n          name: [\n            { required: true, message: '请输入课程名称', trigger: 'blur' },\n          ],\n          taskDescribe: [\n            { required: true, message: '请输入课程描述', trigger: 'blur' },\n          ],\n          teacherId: [\n            { required: true, message: '请选择教师', trigger: 'blur' },\n          ],\n          state: [\n            { required: true, message: '请选择状态', trigger: 'blur' },\n          ],\n          major: [\n            { required: true, message: '请选择所属专业', trigger: 'blur' },\n          ],\n          classification: [\n            { required: true, message: '请选择所属分类', trigger: 'blur' },\n          ],\n          image: [\n            { required: true, message: '请上传封面图片', trigger: 'blur' },\n          ],\n        },\n        teacher: [],\n        major: [],\n        classification: []\n      }\n    },\n    props: ['updateVisible','updateId','flag'],\n    methods: {\n      handleAvatorSuccess(res) {\n        let _this = this;\n        if(res.code == 1000){\n            _this.$message({\n              type: 'success',\n              message: '上传成功!'\n            });\n            this.fileList.push({url:this.$store.state.configure.HOST + res.message})\n            this.form.image = res.message\n        }else{\n          _this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      },\n      handleRemove(file, fileList) {\n        this.form.image = \"\"\n        this.fileList = []\n      },\n      handlePictureCardPreview(file) {\n        this.dialogImageUrl = file.url;\n        this.dialogVisible = true;\n      },\n      getUserListByType() {\n        getUserListByType({type:1}).then(res => {\n          if(res.code == 1000) {\n            this.teacher = res.data\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        })\n      },\n      getMajorList() {\n        getMajorList().then(res => {\n          if(res.code == 1000) {\n            this.major = res.data\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        })\n      },\n      getClassificationList() {\n        getClassificationList().then(res => {\n          if(res.code == 1000) {\n            this.classification = res.data\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        })\n      },\n      submit() {\n        this.$refs[\"ruleForm\"].validate((valid) => {\n          if (valid) {\n            if(this.flag == 2) {\n              this.form.type = 1\n            }\n            editTask(this.form).then(res => {\n              if(res.code == 1000) {\n                this.$notify.success({\n                  title: '成功',\n                  message: \"保存成功\"\n                });\n                this.handleClose();\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n            })\n          } else {\n            return false;\n          }\n        });\n      },\n      handleClose() {\n        this.fileList = []\n        this.$emit(\"updateFalse\")\n      },\n     \n    },\n    created() {\n     \n    },\n    mounted() {\n      this.getUserListByType()\n      this.getMajorList()\n      this.getClassificationList()\n    },\n    watch: {\n      updateId(newVal) {\n        if(newVal) {\n          getTaskById({id:newVal}).then(res => {\n            if(res.code == 1000) {\n              this.form = res.data\n              this.form.state = 2\n              this.form.num = res.data.num + \"\"\n              this.fileList.push({url:this.$store.state.configure.HOST + this.form.image})\n              if (this.flag == 1) {\n                this.form.type = 0\n              } else {\n                this.form.type = 1\n              }\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          })\n        }\n        \n      }\n    }\n }\n</script>\n\n<style   scoped>\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}