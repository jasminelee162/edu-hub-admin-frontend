{"ast":null,"code":"import { editParam, getParamById } from '../../../api/api';\nexport default {\n  data() {\n    return {\n      formLabelWidth: '80px',\n      form: {\n        paramName: \"\",\n        paramKey: \"\",\n        paramValue: \"\",\n        within: '1',\n        remark: \"\"\n      },\n      rules: {\n        paramName: [{\n          required: true,\n          message: '请输入参数名称',\n          trigger: 'blur'\n        }],\n        paramKey: [{\n          required: true,\n          message: '请输入参数键名',\n          trigger: 'blur'\n        }],\n        paramValue: [{\n          required: true,\n          message: '请输入参数键值',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateParamVisible', 'updateId'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          editParam(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.$emit(\"updateParamFalse\");\n    }\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getParamById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            this.form = res.data;\n            this.form.within = res.data.within + \"\";\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["editParam","getParamById","data","formLabelWidth","form","paramName","paramKey","paramValue","within","remark","rules","required","message","trigger","props","methods","submit","$refs","validate","valid","then","res","code","$notify","success","title","handleClose","error","$emit","watch","updateId","newVal","id"],"sources":["src/components/system/param/updateParam.vue"],"sourcesContent":["<template>\n<div>\n  <el-dialog title=\"编辑参数\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateParamVisible\" :before-close=\"handleClose\">\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n      <el-row :gutter=\"10\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\n            <span class=\"search-title\">\n                参数名称:\n                </span>\n            <el-form-item prop=\"paramName\" style=\"margin-bottom:0\">\n                <el-input v-model=\"form.paramName\" size=\"mini\" placeholder=\"请输入参数名称\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\n            <span class=\"search-title\">\n                参数键名:\n                </span>\n            <el-form-item prop=\"paramKey\" style=\"margin-bottom:0\">\n                <el-input v-model=\"form.paramKey\" size=\"mini\" placeholder=\"请输入参数键名\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\n            <span class=\"search-title\">\n                参数键值:\n                </span>\n            <el-form-item prop=\"paramValue\" style=\"margin-bottom:0\">\n                <el-input v-model=\"form.paramValue\" size=\"mini\" placeholder=\"请输入参数键值\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"12\" :lg=\"12\" :xl=\"12\">\n            <span class=\"search-title\">系统内置:</span>\n             <el-form-item prop=\"within\" style=\"margin-bottom:0\">\n                <el-radio-group style=\"margin-top:1px;height:40px;display:flex;align-items: center\" v-model=\"form.within\">\n                  <el-radio label=\"0\">是</el-radio>\n                  <el-radio label=\"1\">否</el-radio>\n                </el-radio-group>\n            </el-form-item>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;备注:</span>\n            <el-input type=\"textarea\" v-model=\"form.remark\"></el-input>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n    </div>\n  </el-dialog>\n</div>\n</template>\n\n<script>\n  import {editParam,getParamById} from '../../../api/api'\n  export default {\n    data() {\n      return{\n        formLabelWidth: '80px',\n        form: {\n          paramName: \"\",\n          paramKey: \"\",\n          paramValue: \"\",\n          within: '1',\n          remark: \"\"\n        },\n        rules: {\n          paramName: [\n            { required: true, message: '请输入参数名称', trigger: 'blur' },\n          ],\n          paramKey: [\n            { required: true, message: '请输入参数键名', trigger: 'blur' },\n          ],\n          paramValue: [\n            { required: true, message: '请输入参数键值', trigger: 'blur' },\n          ],\n        },\n      }\n    },\n    props: ['updateParamVisible','updateId'],\n    methods: {\n      submit() {\n        this.$refs[\"ruleForm\"].validate((valid) => {\n          if (valid) {\n            editParam(this.form).then(res => {\n              if(res.code == 1000) {\n                this.$notify.success({\n                  title: '成功',\n                  message: \"保存成功\"\n                });\n                this.handleClose();\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n            })\n          } else {\n            return false;\n          }\n        });\n      },\n      handleClose() {\n        this.$emit(\"updateParamFalse\")\n      },\n    },\n    watch: {\n      updateId(newVal) {\n        if(newVal) {\n          getParamById({id:newVal}).then(res => {\n            if(res.code == 1000) {\n              this.form = res.data\n              this.form.within = res.data.within + \"\"\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          })\n        }\n        \n      }\n    }\n }\n</script>\n\n<style   scoped>\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>"],"mappings":"AAqDA,SAAAA,SAAA,EAAAC,YAAA;AACA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,IAAA;QACAC,SAAA;QACAC,QAAA;QACAC,UAAA;QACAC,MAAA;QACAC,MAAA;MACA;MACAC,KAAA;QACAL,SAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAP,QAAA,GACA;UAAAK,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAN,UAAA,GACA;UAAAI,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,KAAA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAnB,SAAA,MAAAI,IAAA,EAAAgB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;gBACAC,KAAA;gBACAb,OAAA;cACA;cACA,KAAAc,WAAA;YACA;cACA,KAAAH,OAAA,CAAAI,KAAA;gBACAF,KAAA;gBACAb,OAAA,EAAAS,GAAA,CAAAT;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAc,YAAA;MACA,KAAAE,KAAA;IACA;EACA;EACAC,KAAA;IACAC,SAAAC,MAAA;MACA,IAAAA,MAAA;QACA9B,YAAA;UAAA+B,EAAA,EAAAD;QAAA,GAAAX,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAlB,IAAA,GAAAiB,GAAA,CAAAnB,IAAA;YACA,KAAAE,IAAA,CAAAI,MAAA,GAAAa,GAAA,CAAAnB,IAAA,CAAAM,MAAA;UACA;YACA,KAAAe,OAAA,CAAAI,KAAA;cACAF,KAAA;cACAb,OAAA,EAAAS,GAAA,CAAAT;YACA;UACA;QACA;MACA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}