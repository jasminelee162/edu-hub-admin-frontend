{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\nimport { Message, MessageBox } from 'element-ui';\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080\",\n  timeout: 5000\n});\n\n// 不需要登录验证的白名单路径\nconst WHITE_LIST = ['/email/sendCode',\n// 添加验证码发送接口到白名单\n'/email/login' // 添加邮箱登录接口到白名单\n];\ninstance.interceptors.request.use(function (config) {\n  // 白名单请求不添加token\n  if (!WHITE_LIST.some(path => config.url.includes(path))) {\n    config.headers.x_access_token = window.localStorage.getItem(\"token\");\n  }\n  if (config.method === 'post') {\n    if (!Array.isArray(config.data) && !(config.data instanceof FormData)) {\n      config.data = {\n        ...config.data,\n        _t: Date.parse(new Date()) / 1000\n      };\n    }\n  } else if (config.method === 'get') {\n    config.params = {\n      random: Math.random(),\n      ...config.params\n    };\n  }\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n});\ninstance.interceptors.response.use(function (response) {\n  const res = response;\n\n  // 白名单请求跳过特殊状态码检查\n  if (WHITE_LIST.some(path => response.config.url.includes(path))) {\n    return res.data;\n  }\n\n  // 原有状态码处理\n  if (res.data.code === 1011 || res.data.code == 1008 || res.data.code == 1006) {\n    handleSessionExpired();\n    return Promise.reject('error');\n  } else if (res.data.code == 1009) {\n    handleAccountLocked();\n    return Promise.reject('error');\n  } else if (res.status != 200) {\n    handleSystemError();\n    return Promise.reject('error');\n  } else {\n    return res.data;\n  }\n}, function (err) {\n  handleSystemError();\n  return Promise.reject(err);\n});\n\n// 提取公共处理方法\nfunction handleSessionExpired() {\n  MessageBox.alert('系统登陆已过期，请重新登录', '错误', {\n    confirmButtonText: '确定',\n    type: 'error'\n  }).then(() => {\n    logoutAndReload();\n  });\n}\nfunction handleAccountLocked() {\n  MessageBox.alert('该账号已被锁定', '错误', {\n    confirmButtonText: '确定',\n    type: 'error'\n  }).then(() => {\n    logoutAndReload();\n  });\n}\nfunction handleSystemError() {\n  MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\n    confirmButtonText: '确定',\n    type: 'error'\n  });\n}\nfunction logoutAndReload() {\n  store.dispatch('user/logout').then(() => {\n    store.commit(\"menu/setMenus\", []);\n    store.commit(\"menu/setRoutes\", []);\n    store.commit(\"menu/setDisplayMenus\", []);\n    store.commit(\"menu/setBtnMenus\", []);\n    location.reload();\n  });\n}\nexport function get(url, params) {\n  return instance.get(url, {\n    params\n  });\n}\nexport function post(url, data) {\n  return instance.post(url, data);\n}\nexport default instance;","map":{"version":3,"names":["axios","store","Message","MessageBox","instance","create","baseURL","timeout","WHITE_LIST","interceptors","request","use","config","some","path","url","includes","headers","x_access_token","window","localStorage","getItem","method","Array","isArray","data","FormData","_t","Date","parse","params","random","Math","err","Promise","reject","response","res","code","handleSessionExpired","handleAccountLocked","status","handleSystemError","alert","confirmButtonText","type","then","logoutAndReload","dispatch","commit","location","reload","get","post"],"sources":["C:/Users/32049/Desktop/edu-hub-admin-frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport store from '@/store'\r\nimport { Message, MessageBox } from 'element-ui'\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:8080\",\r\n    timeout: 5000\r\n})\r\n\r\n// 不需要登录验证的白名单路径\r\nconst WHITE_LIST = [\r\n  '/email/sendCode',  // 添加验证码发送接口到白名单\r\n  '/email/login'      // 添加邮箱登录接口到白名单\r\n]\r\n\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        // 白名单请求不添加token\r\n        if (!WHITE_LIST.some(path => config.url.includes(path))) {\r\n            config.headers.x_access_token = window.localStorage.getItem(\"token\")\r\n        }\r\n        \r\n        if (config.method === 'post') {\r\n            if (!Array.isArray(config.data) && !(config.data instanceof FormData)) {\r\n                config.data = {\r\n                    ...config.data,\r\n                    _t: Date.parse(new Date()) / 1000\r\n                }\r\n            }\r\n        } else if (config.method === 'get') {\r\n            config.params = {\r\n              random: Math.random(),\r\n              ...config.params\r\n            }\r\n        }\r\n        return config\r\n    },\r\n    function (err) {\r\n        return Promise.reject(err)\r\n    }\r\n)\r\n\r\ninstance.interceptors.response.use(\r\n    function (response) {\r\n        const res = response\r\n        \r\n        // 白名单请求跳过特殊状态码检查\r\n        if (WHITE_LIST.some(path => response.config.url.includes(path))) {\r\n            return res.data\r\n        }\r\n        \r\n        // 原有状态码处理\r\n        if (res.data.code === 1011 || res.data.code == 1008 || res.data.code == 1006) {\r\n            handleSessionExpired()\r\n            return Promise.reject('error')\r\n        } else if(res.data.code == 1009) {\r\n            handleAccountLocked()\r\n            return Promise.reject('error')\r\n        } else if (res.status != 200) {\r\n            handleSystemError()\r\n            return Promise.reject('error')\r\n        } else {\r\n            return res.data\r\n        }\r\n    },\r\n    function (err) {\r\n        handleSystemError()\r\n        return Promise.reject(err)\r\n    }\r\n)\r\n\r\n// 提取公共处理方法\r\nfunction handleSessionExpired() {\r\n    MessageBox.alert('系统登陆已过期，请重新登录', '错误', {\r\n        confirmButtonText: '确定',\r\n        type: 'error'\r\n    }).then(() => {\r\n        logoutAndReload()\r\n    })\r\n}\r\n\r\nfunction handleAccountLocked() {\r\n    MessageBox.alert('该账号已被锁定', '错误', {\r\n        confirmButtonText: '确定',\r\n        type: 'error'\r\n    }).then(() => {\r\n        logoutAndReload()\r\n    })\r\n}\r\n\r\nfunction handleSystemError() {\r\n    MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\r\n        confirmButtonText: '确定',\r\n        type: 'error'\r\n    })\r\n}\r\n\r\nfunction logoutAndReload() {\r\n    store.dispatch('user/logout').then(() => {\r\n        store.commit(\"menu/setMenus\",[])\r\n        store.commit(\"menu/setRoutes\",[])\r\n        store.commit(\"menu/setDisplayMenus\",[])\r\n        store.commit(\"menu/setBtnMenus\",[])\r\n        location.reload()\r\n    })\r\n}\r\n\r\nexport function get(url, params) {\r\n    return instance.get(url, {params})\r\n}\r\n\r\nexport function post(url, data) {\r\n    return instance.post(url, data)\r\n}\r\n\r\nexport default instance"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}