{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { login, sendEmailCode, loginWithEmail, getUser } from '@/api/api';\nimport { setLock } from '@/utils/lock';\nexport default {\n  data() {\n    return {\n      loginType: 'account',\n      // 'account' 或 'email'\n      userInfo: {\n        username: '',\n        password: ''\n      },\n      emailInfo: {\n        email: '',\n        code: ''\n      },\n      isSending: false,\n      // 与第一个页面保持一致\n      countdown: 60,\n      // 与第一个页面保持一致\n      timer: null,\n      // 与第一个页面保持一致\n      loading: false\n    };\n  },\n  mounted() {\n    this.initParticles();\n  },\n  beforeDestroy() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  },\n  methods: {\n    // 切换登录方式\n    toggleLoginType() {\n      this.loginType = this.loginType === 'account' ? 'email' : 'account';\n    },\n    // 发送验证码 - 保留完整状态提示和倒计时\n    sendCode() {\n      if (!this.emailInfo.email) {\n        this.$message.warning('请输入邮箱地址');\n        return;\n      }\n\n      // 邮箱格式验证\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(this.emailInfo.email)) {\n        this.$message.warning('请输入有效的邮箱地址');\n        return;\n      }\n\n      // 发送请求\n      sendEmailCode(this.emailInfo.email).then(res => {\n        if (res.code === 1000) {\n          this.$message.success('验证码发送成功，请查看邮箱');\n\n          // 开始倒计时\n          this.isSending = true;\n          this.countdown = 60;\n          this.timer = setInterval(() => {\n            this.countdown--;\n            if (this.countdown <= 0) {\n              clearInterval(this.timer);\n              this.isSending = false;\n              this.countdown = 60;\n            }\n          }, 1000);\n        } else {\n          this.$message.error(res.message || '验证码发送失败');\n        }\n      }).catch(error => {\n        console.error('发送验证码失败:', error);\n        this.$message.error('验证码发送失败，请稍后重试');\n      });\n    },\n    // 处理登录\n    handleLogin() {\n      if (this.loginType === 'account') {\n        this.accountLogin();\n      } else {\n        this.emailLogin(); // 方法名改为与第一个页面一致\n      }\n    },\n    // 账号密码登录\n    accountLogin() {\n      if (!this.userInfo.username) {\n        this.$message.warning('请输入用户名');\n        return;\n      }\n      if (!this.userInfo.password) {\n        this.$message.warning('请输入密码');\n        return;\n      }\n      this.loading = true;\n      login({\n        username: this.userInfo.username,\n        password: this.userInfo.password\n      }).then(res => {\n        this.loading = false;\n        if (res.code == 1000) {\n          this.handleLoginSuccess(res.data.token);\n        } else {\n          this.$message.error(res.message);\n        }\n      }).catch(() => {\n        this.loading = false;\n        this.$message.error('登录失败，请稍后重试');\n      });\n    },\n    // 邮箱验证码登录 - 改为与第一个页面相同的实现方式\n    emailLogin() {\n      const {\n        email,\n        code\n      } = this.emailInfo;\n      if (!email || !code) {\n        this.$message.warning('请填写邮箱和验证码');\n        return;\n      }\n      this.loading = true;\n\n      // 使用第一个页面的API调用方式\n      loginWithEmail(email, code).then(res => {\n        this.loading = false;\n        if (res.code === 1000) {\n          this.handleLoginSuccess(res.data.token);\n        } else {\n          this.$message.error(res.message);\n        }\n      }).catch(() => {\n        this.loading = false;\n        this.$message.error('登录失败');\n      });\n    },\n    // 登录成功处理 - 提取公共方法\n    handleLoginSuccess(token) {\n      this.$message.success('登录成功');\n      this.$store.commit('user/setToken', token);\n      this.getUserInfo().then(() => {\n        setLock(false);\n        const redirect = this.$route.query.redirect || '/index';\n        this.$router.push(redirect);\n      });\n    },\n    // 获取用户信息 - 与第一个页面保持一致\n    getUserInfo() {\n      return getUser().then(res => {\n        if (res.code === 1000) {\n          this.$store.commit('user/setUser', JSON.stringify(res.data));\n        }\n      });\n    },\n    // 粒子背景动画\n    initParticles() {\n      const canvas = document.getElementById('particle-canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      const particles = [];\n      const particleCount = 80;\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399'];\n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 1,\n          speedX: Math.random() * 0.3 - 0.15,\n          speedY: Math.random() * 0.3 - 0.15,\n          color: colors[Math.floor(Math.random() * colors.length)]\n        });\n      }\n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        particles.forEach(particle => {\n          ctx.beginPath();\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          particle.x += particle.speedX;\n          particle.y += particle.speedY;\n          if (particle.x < 0 || particle.x > canvas.width) {\n            particle.speedX *= -1;\n          }\n          if (particle.y < 0 || particle.y > canvas.height) {\n            particle.speedY *= -1;\n          }\n          particles.forEach(other => {\n            const distance = Math.sqrt(Math.pow(particle.x - other.x, 2) + Math.pow(particle.y - other.y, 2));\n            if (distance < 120) {\n              ctx.beginPath();\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance / 120})`;\n              ctx.lineWidth = 0.3;\n              ctx.moveTo(particle.x, particle.y);\n              ctx.lineTo(other.x, other.y);\n              ctx.stroke();\n            }\n          });\n        });\n        requestAnimationFrame(animate);\n      };\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["login","sendEmailCode","loginWithEmail","getUser","setLock","data","loginType","userInfo","username","password","emailInfo","email","code","isSending","countdown","timer","loading","mounted","initParticles","beforeDestroy","clearInterval","methods","toggleLoginType","sendCode","$message","warning","emailRegex","test","then","res","success","setInterval","error","message","catch","console","handleLogin","accountLogin","emailLogin","handleLoginSuccess","token","$store","commit","getUserInfo","redirect","$route","query","$router","push","JSON","stringify","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","particleCount","colors","i","x","Math","random","y","size","speedX","speedY","color","floor","length","animate","clearRect","forEach","particle","beginPath","arc","PI","fillStyle","fill","other","distance","sqrt","pow","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame"],"sources":["src/views/system/login/login.vue"],"sourcesContent":["<template>\r\n<div class=\"login-container\">\r\n    <!-- 粒子背景画布 -->\r\n    <canvas id=\"particle-canvas\"></canvas>\r\n    \r\n    <!-- 左侧内容区域 - 增强版 -->\r\n    <div class=\"left-content\">\r\n      <div class=\"logo-area\" style=\"padding-top: 30px;\">\r\n        <img style=\"width:300px; padding-left:0px; margin-top:20px;\" src=\"@/assets/image/systemlogo.png\" />\r\n        <div class=\"platform-role\">教师 · 管理中枢</div>\r\n      </div>\r\n      \r\n      <div class=\"feature-list\">\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-data\"></i>\r\n          <span>学情数据分析</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-notebook-2\"></i>\r\n          <span>课程内容管理</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-check\"></i>\r\n          <span>作业批改系统</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-chat-line-round\"></i>\r\n          <span>师生互动平台</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"quote-area\">\r\n        <p class=\"quote-text\">\"教育不是灌输，而是点燃火焰\"</p>\r\n        <p class=\"quote-author\">—— 苏格拉底 ——</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 右侧登录卡片 -->\r\n    <div class=\"login-card\">\r\n      <h2 class=\"slogan-en\">TEACH WITH INTELLIGENCE</h2>\r\n      <p class=\"slogan-cn\">智能教育管理平台，赋能高效教学</p>\r\n      \r\n      <div class=\"divider\"></div>\r\n      \r\n      <p class=\"sub-slogan\">精准掌握每位学生的学习轨迹<br>用数据驱动个性化教学方案</p>\r\n      \r\n      <div class=\"login-form\">\r\n        <!-- 账号密码登录表单 -->\r\n        <div v-if=\"loginType === 'account'\" class=\"account-login\">\r\n          <el-input\r\n            v-model=\"userInfo.username\"\r\n            placeholder=\"工号/用户名\"\r\n            prefix-icon=\"el-icon-user\"\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n          \r\n          <el-input\r\n            v-model=\"userInfo.password\"\r\n            placeholder=\"密码\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n        </div>\r\n        \r\n        <!-- 邮箱验证码登录表单 -->\r\n        <div v-else class=\"email-login\">\r\n          <el-input\r\n            v-model=\"emailInfo.email\"\r\n            placeholder=\"请输入邮箱\"\r\n            prefix-icon=\"el-icon-message\"\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n          \r\n          <div class=\"code-input-group\">\r\n            <el-input\r\n              v-model=\"emailInfo.code\"\r\n              placeholder=\"验证码\"\r\n              prefix-icon=\"el-icon-key\"\r\n              class=\"custom-input code-input\"\r\n            ></el-input>\r\n            <el-button \r\n              :disabled=\"isSending\"\r\n              @click=\"sendCode\"\r\n              class=\"code-btn\"\r\n            >\r\n              {{ isSending ? countdown + 's 后重发' : '获取验证码' }}\r\n            </el-button>\r\n          </div>\r\n        </div>\r\n        \r\n        <el-button \r\n          type=\"primary\" \r\n          class=\"login-btn\"\r\n          @click=\"handleLogin\"\r\n          :loading=\"loading\"\r\n        >\r\n          {{ loginType === 'account' ? '登 录' : '邮箱登录' }}\r\n        </el-button>\r\n        \r\n        <!-- 切换登录方式 -->\r\n        <div class=\"login-switch\">\r\n          <el-link type=\"primary\" @click=\"toggleLoginType\">\r\n            {{ loginType === 'account' ? '使用邮箱验证码登录' : '使用账号密码登录' }}\r\n          </el-link>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"footer\">\r\n        <p>—— 让科技赋能每一份教育热忱 ——</p>\r\n        <p class=\"en-footer\">Where Innovation Meets Education</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {login, sendEmailCode, loginWithEmail, getUser} from '@/api/api'\r\nimport { setLock } from '@/utils/lock'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginType: 'account', // 'account' 或 'email'\r\n      userInfo: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      emailInfo: {\r\n        email: '',\r\n        code: ''\r\n      },\r\n      isSending: false,  // 与第一个页面保持一致\r\n      countdown: 60,     // 与第一个页面保持一致\r\n      timer: null,       // 与第一个页面保持一致\r\n      loading: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initParticles()\r\n  },\r\n  beforeDestroy() {\r\n    if (this.timer) {\r\n      clearInterval(this.timer)\r\n    }\r\n  },\r\n  methods: {\r\n    // 切换登录方式\r\n    toggleLoginType() {\r\n      this.loginType = this.loginType === 'account' ? 'email' : 'account'\r\n    },\r\n    \r\n    // 发送验证码 - 保留完整状态提示和倒计时\r\n    sendCode() {\r\n      if (!this.emailInfo.email) {\r\n        this.$message.warning('请输入邮箱地址')\r\n        return\r\n      }\r\n\r\n      // 邮箱格式验证\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n      if (!emailRegex.test(this.emailInfo.email)) {\r\n        this.$message.warning('请输入有效的邮箱地址')\r\n        return\r\n      }\r\n\r\n      // 发送请求\r\n      sendEmailCode(this.emailInfo.email).then(res => {\r\n        if (res.code === 1000) {\r\n          this.$message.success('验证码发送成功，请查看邮箱')\r\n          \r\n          // 开始倒计时\r\n          this.isSending = true\r\n          this.countdown = 60\r\n          this.timer = setInterval(() => {\r\n            this.countdown--\r\n            if (this.countdown <= 0) {\r\n              clearInterval(this.timer)\r\n              this.isSending = false\r\n              this.countdown = 60\r\n            }\r\n          }, 1000)\r\n        } else {\r\n          this.$message.error(res.message || '验证码发送失败')\r\n        }\r\n      }).catch(error => {\r\n        console.error('发送验证码失败:', error)\r\n        this.$message.error('验证码发送失败，请稍后重试')\r\n      })\r\n    },\r\n    \r\n    // 处理登录\r\n    handleLogin() {\r\n      if (this.loginType === 'account') {\r\n        this.accountLogin()\r\n      } else {\r\n        this.emailLogin() // 方法名改为与第一个页面一致\r\n      }\r\n    },\r\n    \r\n    // 账号密码登录\r\n    accountLogin() {\r\n      if(!this.userInfo.username) {\r\n        this.$message.warning('请输入用户名')\r\n        return\r\n      }\r\n      if(!this.userInfo.password) {\r\n        this.$message.warning('请输入密码')\r\n        return\r\n      }\r\n      \r\n      this.loading = true\r\n      \r\n      login({\r\n        username: this.userInfo.username,\r\n        password: this.userInfo.password\r\n      }).then(res => {\r\n        this.loading = false\r\n        if(res.code == 1000) {\r\n          this.handleLoginSuccess(res.data.token)\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      }).catch(() => {\r\n        this.loading = false\r\n        this.$message.error('登录失败，请稍后重试')\r\n      })\r\n    },\r\n    \r\n    // 邮箱验证码登录 - 改为与第一个页面相同的实现方式\r\n    emailLogin() {\r\n      const { email, code } = this.emailInfo\r\n      if (!email || !code) {\r\n        this.$message.warning('请填写邮箱和验证码')\r\n        return\r\n      }\r\n      \r\n      this.loading = true\r\n      \r\n      // 使用第一个页面的API调用方式\r\n      loginWithEmail(email, code).then(res => {\r\n        this.loading = false\r\n        if (res.code === 1000) {\r\n          this.handleLoginSuccess(res.data.token)\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      }).catch(() => {\r\n        this.loading = false\r\n        this.$message.error('登录失败')\r\n      })\r\n    },\r\n    \r\n    // 登录成功处理 - 提取公共方法\r\n    handleLoginSuccess(token) {\r\n      this.$message.success('登录成功')\r\n      this.$store.commit('user/setToken', token)\r\n      \r\n      this.getUserInfo().then(() => {\r\n        setLock(false)\r\n        const redirect = this.$route.query.redirect || '/index'\r\n        this.$router.push(redirect)\r\n      })\r\n    },\r\n    \r\n    // 获取用户信息 - 与第一个页面保持一致\r\n    getUserInfo() {\r\n      return getUser().then(res => {\r\n        if (res.code === 1000) {\r\n          this.$store.commit('user/setUser', JSON.stringify(res.data))\r\n        }\r\n      })\r\n    },\r\n\r\n    // 粒子背景动画\r\n    initParticles() {\r\n      const canvas = document.getElementById('particle-canvas')\r\n      const ctx = canvas.getContext('2d')\r\n      canvas.width = window.innerWidth\r\n      canvas.height = window.innerHeight\r\n      \r\n      const particles = []\r\n      const particleCount = 80\r\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399']\r\n      \r\n      for (let i = 0; i < particleCount; i++) {\r\n        particles.push({\r\n          x: Math.random() * canvas.width,\r\n          y: Math.random() * canvas.height,\r\n          size: Math.random() * 3 + 1,\r\n          speedX: Math.random() * 0.3 - 0.15,\r\n          speedY: Math.random() * 0.3 - 0.15,\r\n          color: colors[Math.floor(Math.random() * colors.length)]\r\n        })\r\n      }\r\n      \r\n      const animate = () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n        \r\n        particles.forEach(particle => {\r\n          ctx.beginPath()\r\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2)\r\n          ctx.fillStyle = particle.color\r\n          ctx.fill()\r\n          \r\n          particle.x += particle.speedX\r\n          particle.y += particle.speedY\r\n          \r\n          if (particle.x < 0 || particle.x > canvas.width) {\r\n            particle.speedX *= -1\r\n          }\r\n          if (particle.y < 0 || particle.y > canvas.height) {\r\n            particle.speedY *= -1\r\n          }\r\n          \r\n          particles.forEach(other => {\r\n            const distance = Math.sqrt(\r\n              Math.pow(particle.x - other.x, 2) + \r\n              Math.pow(particle.y - other.y, 2)\r\n            )\r\n            if (distance < 120) {\r\n              ctx.beginPath()\r\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance/120})`\r\n              ctx.lineWidth = 0.3\r\n              ctx.moveTo(particle.x, particle.y)\r\n              ctx.lineTo(other.x, other.y)\r\n              ctx.stroke()\r\n            }\r\n          })\r\n        })\r\n        \r\n        requestAnimationFrame(animate)\r\n      }\r\n      \r\n      animate()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 保持原有的样式不变 */\r\n.login-container {\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #ffffff;\r\n  overflow: hidden;\r\n  display: flex;\r\n  font-family: 'Microsoft YaHei', sans-serif;\r\n}\r\n\r\n#particle-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n\r\n.left-content {\r\n  width: 50%;\r\n  padding: 80px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  z-index: 2;\r\n}\r\n\r\n.logo-area {\r\n  margin-bottom: 80px;\r\n}\r\n\r\n.platform-role {\r\n  font-size: 24px;\r\n  color: #6A5ACD;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.feature-list {\r\n  margin: 60px 0;\r\n}\r\n\r\n.feature-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 35px;\r\n  color: #4B0082;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n}\r\n\r\n.feature-item i {\r\n  margin-right: 20px;\r\n  font-size: 28px;\r\n  color: #6A5ACD;\r\n}\r\n\r\n.quote-area {\r\n  color: #555;\r\n  font-style: italic;\r\n  line-height: 1.8;\r\n  margin-top: 60px;\r\n}\r\n\r\n.quote-text {\r\n  font-size: 26px;\r\n  line-height: 1.5;\r\n  margin-bottom: 10px;\r\n  color: #4B0082;\r\n}\r\n\r\n.quote-author {\r\n  text-align: right;\r\n  font-size: 18px;\r\n  color: #9370DB;\r\n  font-weight: 500;\r\n}\r\n\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  width: 450px;\r\n  min-height: 100vh;\r\n  overflow: visible;\r\n  padding-bottom: 120px;\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(5px);\r\n  padding: 100px 50px;\r\n  box-shadow: -5px 0 30px rgba(0, 0, 0, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.slogan-en {\r\n  color: #4B0082;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.slogan-cn {\r\n  color: #6A5ACD;\r\n  font-size: 18px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.divider {\r\n  width: 50px;\r\n  height: 3px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  margin: 25px 0;\r\n}\r\n\r\n.sub-slogan {\r\n  color: #666;\r\n  line-height: 1.8;\r\n  margin-bottom: 50px;\r\n  font-size: 15px;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 40px;\r\n}\r\n\r\n.custom-input {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.custom-input >>> .el-input__inner {\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  border: 1px solid #E6E6FA;\r\n  padding-left: 45px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.custom-input >>> .el-input__inner:focus {\r\n  border-color: #6A5ACD;\r\n  box-shadow: 0 0 0 2px rgba(106, 90, 205, 0.2);\r\n}\r\n\r\n.custom-input >>> .el-input__prefix {\r\n  color: #6A5ACD;\r\n  left: 15px;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  border: none;\r\n  font-size: 16px;\r\n  letter-spacing: 2px;\r\n  margin-top: 10px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.login-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 15px rgba(106, 90, 205, 0.4);\r\n}\r\n\r\n.code-input-group {\r\n  display: flex;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.code-input {\r\n  flex: 1;\r\n  margin-right: 10px;\r\n}\r\n\r\n.code-btn {\r\n  width: 140px;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  background: linear-gradient(to right, #9370DB, #8A2BE2);\r\n  color: white;\r\n  border: none;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.code-btn:disabled {\r\n  background: linear-gradient(to right, rgba(147, 112, 219, 0.5), rgba(138, 43, 226, 0.5));\r\n  color: rgba(255, 255, 255, 0.8);\r\n  cursor: not-allowed;\r\n}\r\n\r\n.login-switch {\r\n  text-align: center;\r\n  margin-top: 20px;\r\n}\r\n\r\n.login-switch .el-link {\r\n  font-size: 14px;\r\n}\r\n\r\n.footer {\r\n  position: absolute;\r\n  bottom: 40px;\r\n  width: calc(100% - 100px);\r\n  text-align: center;\r\n  color: #6A5ACD;\r\n  font-size: 14px;\r\n}\r\n\r\n.en-footer {\r\n  margin-top: 10px;\r\n  font-style: italic;\r\n  color: #B0C4DE;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}