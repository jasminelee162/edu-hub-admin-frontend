{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getIndexData, getIndexSexData, getTaskChart, getTaskIndexList } from '../../../api/api';\nimport * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      top: {},\n      sex: [],\n      tasks: [],\n      nums: [],\n      taskList: [],\n      taskCard: [],\n      today: new Date(),\n      myChart: \"\",\n      pieChart: \"\",\n      courseSelect: '',\n      courses: [{\n        value: '1',\n        label: '计算机科学导论'\n      }, {\n        value: '2',\n        label: '数据结构与算法'\n      }, {\n        value: '3',\n        label: '数据库系统原理'\n      }],\n      progressChart: null,\n      resourceChart: null\n    };\n  },\n  methods: {\n    // 新增的四个跳转方法\n    toTeacherTask() {\n      this.$router.push(\"/teacherTask\");\n      this.setActiveMenu(\"/teacherTask\", \"课程管理\");\n    },\n    toTeacherChapter() {\n      this.$router.push(\"/teacherChapter\");\n      this.setActiveMenu(\"/teacherChapter\", \"章节管理\");\n    },\n    toTeacherTest() {\n      this.$router.push(\"/teacherTest\");\n      this.setActiveMenu(\"/teacherTest\", \"测试管理\");\n    },\n    toQuestion() {\n      this.$router.push(\"/question\");\n      this.setActiveMenu(\"/question\", \"题库管理\");\n    },\n    // 公共方法设置激活菜单\n    setActiveMenu(path, name) {\n      const param = {\n        \"name\": name,\n        \"url\": path\n      };\n      this.$store.commit('menu/addActiveMenu', param);\n      this.$store.commit('menu/setActiveMenu', path);\n    },\n    toTask() {\n      var param = {\n        \"name\": \"教师课程管理\",\n        \"url\": \"/task\"\n      };\n      this.$store.commit('menu/addActiveMenu', param);\n      this.$router.push(\"/teacherTask\");\n      this.$store.commit('menu/setActiveMenu', \"/teacherTask\");\n    },\n    toStudent() {\n      var param = {\n        \"name\": \"学生管理\",\n        \"url\": \"/student\"\n      };\n      this.$store.commit('menu/addActiveMenu', param);\n      this.$router.push(\"/student\");\n      this.$store.commit('menu/setActiveMenu', \"/student\");\n    },\n    toTeacher() {\n      var param = {\n        \"name\": \"教师管理\",\n        \"url\": \"/teacher\"\n      };\n      this.$store.commit('menu/addActiveMenu', param);\n      this.$router.push(\"/teacher\");\n      this.$store.commit('menu/setActiveMenu', \"/teacher\");\n    },\n    initProgressChart() {\n      this.progressChart = echarts.init(document.getElementById(\"progress-chart\"));\n\n      // 模拟数据 - 实际应从API获取\n      const option = {\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            crossStyle: {\n              color: '#999'\n            }\n          }\n        },\n        legend: {\n          data: ['计划进度', '实际进度', '平均成绩']\n        },\n        grid: [{\n          top: '15%',\n          height: '30%'\n        }, {\n          top: '55%',\n          height: '30%'\n        }],\n        xAxis: [{\n          type: 'category',\n          data: ['第1周', '第2周', '第3周', '第4周', '第5周', '第6周', '第7周'],\n          axisPointer: {\n            type: 'shadow'\n          },\n          gridIndex: 0\n        }, {\n          type: 'category',\n          data: ['0-59', '60-69', '70-79', '80-89', '90-100'],\n          gridIndex: 1\n        }],\n        yAxis: [{\n          type: 'value',\n          name: '进度(%)',\n          min: 0,\n          max: 100,\n          gridIndex: 0\n        }, {\n          type: 'value',\n          name: '人数',\n          gridIndex: 1\n        }],\n        series: [{\n          name: '计划进度',\n          type: 'line',\n          smooth: true,\n          data: [15, 30, 45, 60, 75, 90, 100],\n          lineStyle: {\n            color: '#8884d8',\n            width: 3,\n            type: 'dashed'\n          },\n          itemStyle: {\n            color: '#8884d8'\n          },\n          xAxisIndex: 0,\n          yAxisIndex: 0\n        }, {\n          name: '实际进度',\n          type: 'line',\n          smooth: true,\n          data: [10, 25, 40, 50, 65, 80, 95],\n          lineStyle: {\n            color: '#82ca9d',\n            width: 3\n          },\n          itemStyle: {\n            color: '#82ca9d'\n          },\n          areaStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: 'rgba(130, 202, 157, 0.3)'\n            }, {\n              offset: 1,\n              color: 'rgba(130, 202, 157, 0.1)'\n            }])\n          },\n          xAxisIndex: 0,\n          yAxisIndex: 0\n        }, {\n          name: '成绩分布',\n          type: 'bar',\n          barWidth: '60%',\n          data: [2, 4, 10, 15, 8],\n          itemStyle: {\n            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n              offset: 0,\n              color: '#83bff6'\n            }, {\n              offset: 0.5,\n              color: '#188df0'\n            }, {\n              offset: 1,\n              color: '#188df0'\n            }])\n          },\n          xAxisIndex: 1,\n          yAxisIndex: 1\n        }]\n      };\n      this.progressChart.setOption(option);\n    },\n    initResourceChart() {\n      this.resourceChart = echarts.init(document.getElementById(\"resource-chart\"));\n\n      // 模拟数据 - 实际应从API获取\n      const option = {\n        title: {\n          text: '资源类型分布',\n          left: 'center',\n          top: 10\n        },\n        series: {\n          name: '资源分布',\n          type: 'sunburst',\n          data: [{\n            name: '课程资源',\n            children: [{\n              name: '教学视频',\n              value: 35,\n              itemStyle: {\n                color: '#5470c6'\n              }\n            }, {\n              name: '课件资料',\n              value: 25,\n              itemStyle: {\n                color: '#91cc75'\n              }\n            }, {\n              name: '测试题库',\n              value: 20,\n              itemStyle: {\n                color: '#fac858'\n              }\n            }, {\n              name: '阅读材料',\n              value: 15,\n              itemStyle: {\n                color: '#ee6666'\n              }\n            }, {\n              name: '其他资源',\n              value: 5,\n              itemStyle: {\n                color: '#73c0de'\n              }\n            }]\n          }],\n          radius: [0, '90%'],\n          label: {\n            rotate: 'radial'\n          },\n          levels: [{}, {\n            r0: '15%',\n            r: '45%',\n            itemStyle: {\n              borderWidth: 2\n            },\n            label: {\n              rotate: 'tangential'\n            }\n          }, {\n            r0: '45%',\n            r: '80%',\n            label: {\n              align: 'right'\n            }\n          }, {\n            r0: '80%',\n            r: '82%',\n            label: {\n              position: 'outside',\n              padding: 3,\n              silent: false\n            },\n            itemStyle: {\n              borderWidth: 3\n            }\n          }]\n        }\n      };\n      this.resourceChart.setOption(option);\n    }\n  },\n  created() {},\n  mounted() {\n    this.initProgressChart();\n    this.initResourceChart();\n\n    // 窗口大小变化时重绘图表\n    window.addEventListener('resize', () => {\n      this.progressChart && this.progressChart.resize();\n      this.resourceChart && this.resourceChart.resize();\n    });\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', () => {\n      this.progressChart && this.progressChart.resize();\n      this.resourceChart && this.resourceChart.resize();\n    });\n  },\n  mounted() {\n    this.initProgressChart();\n    this.initResourceChart();\n\n    // 获取首页顶部数据\n    getIndexData({\n      type: 1\n    }).then(res => {\n      if (res.code == 1000) {\n        this.top = res.data;\n      }\n    });\n\n    // 获取学生性别数据\n    getIndexSexData({\n      type: 1\n    }).then(res => {\n      if (res.code == 1000) {\n        this.sex = res.data;\n        this.pieChart = echarts.init(document.getElementById(\"pie-chart\"));\n        var optionPie = {\n          tooltip: {\n            trigger: 'item'\n          },\n          legend: {\n            center: 'center'\n          },\n          series: [{\n            name: '学生性别分析',\n            type: 'pie',\n            radius: '50%',\n            data: this.sex,\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          }]\n        };\n        this.pieChart.setOption(optionPie);\n      }\n    });\n\n    // 获取任务图表数据\n    getTaskChart({\n      type: 1\n    }).then(res => {\n      if (res.code == 1000) {\n        this.tasks = res.data.tasks;\n        this.nums = res.data.nums;\n        this.myChart = echarts.init(document.getElementById(\"chart\"));\n        var option = {\n          tooltip: {\n            trigger: 'axis'\n          },\n          legend: {\n            data: ['学生数量', '学生数量']\n          },\n          backgroundColor: '#fff',\n          xAxis: [{\n            type: 'category',\n            color: '#59588D',\n            data: this.tasks,\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(107,107,107,0.37)'\n              }\n            },\n            axisTick: {\n              show: true\n            }\n          }],\n          yAxis: [{\n            axisLine: {\n              lineStyle: {\n                color: 'rgba(107,107,107,0.37)'\n              }\n            },\n            axisTick: {\n              show: true\n            },\n            splitLine: {\n              lineStyle: {\n                color: 'rgba(131,101,101,0.2)',\n                type: 'dashed'\n              }\n            }\n          }],\n          series: [{\n            data: this.nums,\n            type: 'line',\n            name: '折线图',\n            symbol: 'none',\n            areaStyle: {\n              color: \"#E6F8EE\"\n            },\n            lineStyle: {\n              color: '#3AC977',\n              width: 2,\n              shadowColor: 'rgba(0, 0, 0, 0.3)',\n              //设置折线阴影\n              shadowBlur: 15,\n              shadowOffsetY: 20\n            },\n            zlevel: 1\n          }, {\n            type: 'bar',\n            data: this.nums,\n            barWidth: '15px',\n            name: '柱状图',\n            itemStyle: {\n              normal: {\n                color: function (params) {\n                  //展示正值的柱子，负数设为透明\n                  let colorArr = params.value > 0 ? ['#7866BE', '#7866BE'] : ['rgba(0,0,0,0)', 'rgba(0,0,0,0)'];\n                  return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                    offset: 0,\n                    color: colorArr[0] // 0% 处的颜色\n                  }, {\n                    offset: 1,\n                    color: colorArr[1] // 100% 处的颜色\n                  }], false);\n                },\n                barBorderRadius: [30, 30, 0, 0]\n              }\n            },\n            label: {\n              normal: {\n                show: true,\n                fontSize: 13,\n                color: '#333',\n                position: 'top'\n              }\n            },\n            zlevel: 2\n          }]\n        };\n        this.myChart.setOption(option);\n      }\n    });\n\n    // 获取任务列表数据\n    getTaskIndexList({\n      type: 1\n    }).then(res => {\n      if (res.code == 1000) {\n        this.taskList = res.data.slice(0, 5);\n        this.taskCard = res.data.slice(0, 3);\n      }\n    });\n\n    // 窗口大小变化时重绘图表\n    window.addEventListener('resize', () => {\n      this.progressChart && this.progressChart.resize();\n      this.resourceChart && this.resourceChart.resize();\n      if (this.myChart && typeof this.myChart.resize === 'function') {\n        this.myChart.resize();\n      }\n      if (this.pieChart && typeof this.pieChart.resize === 'function') {\n        this.pieChart.resize();\n      }\n    });\n  }\n};","map":{"version":3,"names":["getIndexData","getIndexSexData","getTaskChart","getTaskIndexList","echarts","data","top","sex","tasks","nums","taskList","taskCard","today","Date","myChart","pieChart","courseSelect","courses","value","label","progressChart","resourceChart","methods","toTeacherTask","$router","push","setActiveMenu","toTeacherChapter","toTeacherTest","toQuestion","path","name","param","$store","commit","toTask","toStudent","toTeacher","initProgressChart","init","document","getElementById","option","tooltip","trigger","axisPointer","type","crossStyle","color","legend","grid","height","xAxis","gridIndex","yAxis","min","max","series","smooth","lineStyle","width","itemStyle","xAxisIndex","yAxisIndex","areaStyle","graphic","LinearGradient","offset","barWidth","setOption","initResourceChart","title","text","left","children","radius","rotate","levels","r0","r","borderWidth","align","position","padding","silent","created","mounted","window","addEventListener","resize","beforeDestroy","removeEventListener","then","res","code","optionPie","center","emphasis","shadowBlur","shadowOffsetX","shadowColor","backgroundColor","axisLine","axisTick","show","splitLine","symbol","shadowOffsetY","zlevel","normal","params","colorArr","barBorderRadius","fontSize","slice"],"sources":["src/views/system/index/teacherIndex.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"20\" class=\"index-top\">\r\n            <!-- 第一张卡片 - 跳转到/teacherTask -->\r\n            <el-col :span=\"6\">\r\n                <div class=\"grid-content bg-purple\">\r\n                    <el-card \r\n                        shadow=\"always\" \r\n                        class=\"dashboard-card card-1\"\r\n                        @click.native=\"toTeacherTask()\"\r\n                        :body-style=\"{ padding: '0', cursor: 'pointer', overflow: 'hidden' }\">\r\n                        <div class=\"card-folder-edge\"></div>\r\n                        <div class=\"card-content\">\r\n                            <div class=\"item-01-top\">\r\n                                <img src=\"../../../assets/image/index-01.png\" class=\"card-icon\">\r\n                                <div class=\"item-01-top-center\">\r\n                                    <div class=\"card-title\">课程管理</div>\r\n                                    <div class=\"card-value\">{{top.userNum}}门</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-footer\">\r\n                                <span>查看详情</span>\r\n                                <i class=\"el-icon-arrow-right\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>\r\n                </div>\r\n            </el-col>\r\n            \r\n            <!-- 第二张卡片 - 跳转到/teacherChapter -->\r\n            <el-col :span=\"6\">\r\n                <div class=\"grid-content bg-purple\">\r\n                    <el-card \r\n                        shadow=\"always\" \r\n                        class=\"dashboard-card card-2\"\r\n                        @click.native=\"toTeacherChapter()\"\r\n                        :body-style=\"{ padding: '0', cursor: 'pointer', overflow: 'hidden' }\">\r\n                        <div class=\"card-folder-edge\"></div>\r\n                        <div class=\"card-content\">\r\n                            <div class=\"item-01-top\">\r\n                                <img src=\"../../../assets/image/index-02.png\" class=\"card-icon\">\r\n                                <div class=\"item-01-top-center\">\r\n                                    <div class=\"card-title\">章节管理</div>\r\n                                    <div class=\"card-value\">{{top.studentNum}}章</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-footer\">\r\n                                <span>查看详情</span>\r\n                                <i class=\"el-icon-arrow-right\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>\r\n                </div>\r\n            </el-col>\r\n            \r\n            <!-- 第三张卡片 - 跳转到/teacherTest -->\r\n            <el-col :span=\"6\">\r\n                <div class=\"grid-content bg-purple\">\r\n                    <el-card \r\n                        shadow=\"always\" \r\n                        class=\"dashboard-card card-3\"\r\n                        @click.native=\"toTeacherTest()\"\r\n                        :body-style=\"{ padding: '0', cursor: 'pointer', overflow: 'hidden' }\">\r\n                        <div class=\"card-folder-edge\"></div>\r\n                        <div class=\"card-content\">\r\n                            <div class=\"item-01-top\">\r\n                                <img src=\"../../../assets/image/avator.png\" class=\"card-icon\">\r\n                                <div class=\"item-01-top-center\">\r\n                                    <div class=\"card-title\">测试管理</div>\r\n                                    <div class=\"card-value\">{{top.teacherNum}}个</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-footer\">\r\n                                <span>查看详情</span>\r\n                                <i class=\"el-icon-arrow-right\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>\r\n                </div>\r\n            </el-col>\r\n            \r\n            <!-- 第四张卡片 - 跳转到/question -->\r\n            <el-col :span=\"6\">\r\n                <div class=\"grid-content bg-purple\">\r\n                    <el-card \r\n                        shadow=\"always\" \r\n                        class=\"dashboard-card card-4\"\r\n                        @click.native=\"toQuestion()\"\r\n                        :body-style=\"{ padding: '0', cursor: 'pointer', overflow: 'hidden' }\">\r\n                        <div class=\"card-folder-edge\"></div>\r\n                        <div class=\"card-content\">\r\n                            <div class=\"item-01-top\">\r\n                                <img src=\"../../../assets/image/index-05.png\" class=\"card-icon\">\r\n                                <div class=\"item-01-top-center\">\r\n                                    <div class=\"card-title\">答疑管理</div>\r\n                                    <div class=\"card-value\">疑问</div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"card-footer\">\r\n                                <span>查看详情</span>\r\n                                <i class=\"el-icon-arrow-right\"></i>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n        \r\n        <!-- 中间图表区 - 修改后的版本 -->\r\n        <el-row :gutter=\"20\" class=\"index-center\">\r\n            <el-col :span=\"16\">\r\n                <el-card shadow=\"always\" class=\"item-07\">\r\n                    <div class=\"chart-header\">\r\n                        <span>教学进度与成绩分析</span>\r\n                        <el-select v-model=\"courseSelect\" placeholder=\"选择课程\" size=\"mini\">\r\n                            <el-option\r\n                                v-for=\"item in courses\"\r\n                                :key=\"item.value\"\r\n                                :label=\"item.label\"\r\n                                :value=\"item.value\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </div>\r\n                    <div id=\"progress-chart\" style=\"width:100%;height:360px\"></div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <el-card shadow=\"always\" class=\"item-08\">\r\n                    <div class=\"chart-header\">\r\n                        <span>课程资源分布</span>\r\n                    </div>\r\n                    <div id=\"resource-chart\" style=\"width:100%;height:360px\"></div>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <el-row :gutter=\"20\" class=\"index-under\">\r\n            <el-col :span=\"16\">\r\n                <el-card shadow=\"always\" class=\"item-10\">\r\n                    <div style=\"width:100%;height:50px;display:flex;justify-content: space-between\">\r\n                        <span>课程 列表</span>\r\n                        <el-button style=\"height:35px;background:#8470D1\" size=\"mini\" type=\"primary\" @click=\"toTask()\">查看全部</el-button>\r\n                    </div>\r\n                    <div style=\"width:100%;height:260px\">\r\n                        <el-row>\r\n                            <el-col class=\"item-10-item\" :span=\"7\" v-for=\"(item,index) in taskCard\" :key=\"index\">\r\n                                <img :src=\"$store.state.configure.HOST + item.image\" style=\"border-radius: 20px;width:90%\">\r\n                                <div>{{item.name}}</div>\r\n                                <div style=\"width:90%;display:flex;justify-content: space-around;\">\r\n                                    <div style=\"height:35px;font-size:13px;display:flex;align-items:center\"><span>{{item.createTime}}</span>\r\n                                    </div>\r\n                                    <el-button size=\"mini\" style=\"height:30px\" type=\"danger\">{{item.teacherName}}</el-button>\r\n                                </div>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <el-card shadow=\"always\" class=\"item-11\">\r\n                    <el-calendar v-model=\"today\">\r\n                    </el-calendar>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getIndexData,getIndexSexData,getTaskChart,getTaskIndexList} from '../../../api/api'\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default {\r\n    data() {\r\n        return{\r\n            top: {},\r\n            sex: [],\r\n            tasks: [],\r\n            nums: [],\r\n            taskList: [],\r\n            taskCard: [],\r\n            today: new Date(),\r\n            myChart: \"\",\r\n            pieChart: \"\",\r\n                        courseSelect: '',\r\n            courses: [\r\n                { value: '1', label: '计算机科学导论' },\r\n                { value: '2', label: '数据结构与算法' },\r\n                { value: '3', label: '数据库系统原理' }\r\n            ],\r\n            progressChart: null,\r\n            resourceChart: null\r\n        }\r\n    },\r\n    methods: {\r\n                // 新增的四个跳转方法\r\n        toTeacherTask() {\r\n            this.$router.push(\"/teacherTask\");\r\n            this.setActiveMenu(\"/teacherTask\", \"课程管理\");\r\n        },\r\n        toTeacherChapter() {\r\n            this.$router.push(\"/teacherChapter\");\r\n            this.setActiveMenu(\"/teacherChapter\", \"章节管理\");\r\n        },\r\n        toTeacherTest() {\r\n            this.$router.push(\"/teacherTest\");\r\n            this.setActiveMenu(\"/teacherTest\", \"测试管理\");\r\n        },\r\n        toQuestion() {\r\n            this.$router.push(\"/question\");\r\n            this.setActiveMenu(\"/question\", \"题库管理\");\r\n        },\r\n        \r\n        // 公共方法设置激活菜单\r\n        setActiveMenu(path, name) {\r\n            const param = {\r\n                \"name\": name,\r\n                \"url\": path\r\n            }\r\n            this.$store.commit('menu/addActiveMenu', param);\r\n            this.$store.commit('menu/setActiveMenu', path);\r\n        },\r\n        toTask() {\r\n            var param = {\r\n                \"name\": \"教师课程管理\",\r\n                \"url\": \"/task\"\r\n            }\r\n            this.$store.commit('menu/addActiveMenu', param)\r\n            this.$router.push(\"/teacherTask\")\r\n            this.$store.commit('menu/setActiveMenu', \"/teacherTask\")\r\n        },\r\n        toStudent() {\r\n            var param = {\r\n                \"name\": \"学生管理\",\r\n                \"url\": \"/student\"\r\n            }\r\n            this.$store.commit('menu/addActiveMenu', param)\r\n            this.$router.push(\"/student\")\r\n            this.$store.commit('menu/setActiveMenu', \"/student\")\r\n        },\r\n        toTeacher() {\r\n            var param = {\r\n                \"name\": \"教师管理\",\r\n                \"url\": \"/teacher\"\r\n            }\r\n            this.$store.commit('menu/addActiveMenu', param)\r\n            this.$router.push(\"/teacher\")\r\n            this.$store.commit('menu/setActiveMenu', \"/teacher\")\r\n        },\r\n        initProgressChart() {\r\n            this.progressChart = echarts.init(document.getElementById(\"progress-chart\"));\r\n            \r\n            // 模拟数据 - 实际应从API获取\r\n            const option = {\r\n                tooltip: {\r\n                    trigger: 'axis',\r\n                    axisPointer: {\r\n                        type: 'cross',\r\n                        crossStyle: {\r\n                            color: '#999'\r\n                        }\r\n                    }\r\n                },\r\n                legend: {\r\n                    data: ['计划进度', '实际进度', '平均成绩']\r\n                },\r\n                grid: [\r\n                    {\r\n                        top: '15%',\r\n                        height: '30%'\r\n                    },\r\n                    {\r\n                        top: '55%',\r\n                        height: '30%'\r\n                    }\r\n                ],\r\n                xAxis: [\r\n                    {\r\n                        type: 'category',\r\n                        data: ['第1周', '第2周', '第3周', '第4周', '第5周', '第6周', '第7周'],\r\n                        axisPointer: {\r\n                            type: 'shadow'\r\n                        },\r\n                        gridIndex: 0\r\n                    },\r\n                    {\r\n                        type: 'category',\r\n                        data: ['0-59', '60-69', '70-79', '80-89', '90-100'],\r\n                        gridIndex: 1\r\n                    }\r\n                ],\r\n                yAxis: [\r\n                    {\r\n                        type: 'value',\r\n                        name: '进度(%)',\r\n                        min: 0,\r\n                        max: 100,\r\n                        gridIndex: 0\r\n                    },\r\n                    {\r\n                        type: 'value',\r\n                        name: '人数',\r\n                        gridIndex: 1\r\n                    }\r\n                ],\r\n                series: [\r\n                    {\r\n                        name: '计划进度',\r\n                        type: 'line',\r\n                        smooth: true,\r\n                        data: [15, 30, 45, 60, 75, 90, 100],\r\n                        lineStyle: {\r\n                            color: '#8884d8',\r\n                            width: 3,\r\n                            type: 'dashed'\r\n                        },\r\n                        itemStyle: {\r\n                            color: '#8884d8'\r\n                        },\r\n                        xAxisIndex: 0,\r\n                        yAxisIndex: 0\r\n                    },\r\n                    {\r\n                        name: '实际进度',\r\n                        type: 'line',\r\n                        smooth: true,\r\n                        data: [10, 25, 40, 50, 65, 80, 95],\r\n                        lineStyle: {\r\n                            color: '#82ca9d',\r\n                            width: 3\r\n                        },\r\n                        itemStyle: {\r\n                            color: '#82ca9d'\r\n                        },\r\n                        areaStyle: {\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                {\r\n                                    offset: 0,\r\n                                    color: 'rgba(130, 202, 157, 0.3)'\r\n                                },\r\n                                {\r\n                                    offset: 1,\r\n                                    color: 'rgba(130, 202, 157, 0.1)'\r\n                                }\r\n                            ])\r\n                        },\r\n                        xAxisIndex: 0,\r\n                        yAxisIndex: 0\r\n                    },\r\n                    {\r\n                        name: '成绩分布',\r\n                        type: 'bar',\r\n                        barWidth: '60%',\r\n                        data: [2, 4, 10, 15, 8],\r\n                        itemStyle: {\r\n                            color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                                { offset: 0, color: '#83bff6' },\r\n                                { offset: 0.5, color: '#188df0' },\r\n                                { offset: 1, color: '#188df0' }\r\n                            ])\r\n                        },\r\n                        xAxisIndex: 1,\r\n                        yAxisIndex: 1\r\n                    }\r\n                ]\r\n            };\r\n            \r\n            this.progressChart.setOption(option);\r\n        },\r\n        \r\n        initResourceChart() {\r\n            this.resourceChart = echarts.init(document.getElementById(\"resource-chart\"));\r\n            \r\n            // 模拟数据 - 实际应从API获取\r\n            const option = {\r\n                title: {\r\n                    text: '资源类型分布',\r\n                    left: 'center',\r\n                    top: 10\r\n                },\r\n                series: {\r\n                    name: '资源分布',\r\n                    type: 'sunburst',\r\n                    data: [{\r\n                        name: '课程资源',\r\n                        children: [\r\n                            {\r\n                                name: '教学视频',\r\n                                value: 35,\r\n                                itemStyle: { color: '#5470c6' }\r\n                            },\r\n                            {\r\n                                name: '课件资料',\r\n                                value: 25,\r\n                                itemStyle: { color: '#91cc75' }\r\n                            },\r\n                            {\r\n                                name: '测试题库',\r\n                                value: 20,\r\n                                itemStyle: { color: '#fac858' }\r\n                            },\r\n                            {\r\n                                name: '阅读材料',\r\n                                value: 15,\r\n                                itemStyle: { color: '#ee6666' }\r\n                            },\r\n                            {\r\n                                name: '其他资源',\r\n                                value: 5,\r\n                                itemStyle: { color: '#73c0de' }\r\n                            }\r\n                        ]\r\n                    }],\r\n                    radius: [0, '90%'],\r\n                    label: {\r\n                        rotate: 'radial'\r\n                    },\r\n                    levels: [\r\n                        {},\r\n                        {\r\n                            r0: '15%',\r\n                            r: '45%',\r\n                            itemStyle: {\r\n                                borderWidth: 2\r\n                            },\r\n                            label: {\r\n                                rotate: 'tangential'\r\n                            }\r\n                        },\r\n                        {\r\n                            r0: '45%',\r\n                            r: '80%',\r\n                            label: {\r\n                                align: 'right'\r\n                            }\r\n                        },\r\n                        {\r\n                            r0: '80%',\r\n                            r: '82%',\r\n                            label: {\r\n                                position: 'outside',\r\n                                padding: 3,\r\n                                silent: false\r\n                            },\r\n                            itemStyle: {\r\n                                borderWidth: 3\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n            \r\n            this.resourceChart.setOption(option);\r\n        }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n        this.initProgressChart();\r\n        this.initResourceChart();\r\n        \r\n        // 窗口大小变化时重绘图表\r\n        window.addEventListener('resize', () => {\r\n            this.progressChart && this.progressChart.resize();\r\n            this.resourceChart && this.resourceChart.resize();\r\n        });\r\n    },\r\n    beforeDestroy() {\r\n        window.removeEventListener('resize', () => {\r\n            this.progressChart && this.progressChart.resize();\r\n            this.resourceChart && this.resourceChart.resize();\r\n        });\r\n    },\r\n    mounted() {\r\n        this.initProgressChart();\r\n        this.initResourceChart();\r\n\r\n        // 获取首页顶部数据\r\n        getIndexData({type:1}).then(res => {\r\n            if (res.code == 1000) {\r\n                this.top = res.data\r\n            }\r\n        });\r\n\r\n        // 获取学生性别数据\r\n        getIndexSexData({type:1}).then(res => {\r\n            if (res.code == 1000) {\r\n                this.sex  = res.data\r\n                this.pieChart = echarts.init(document.getElementById(\"pie-chart\"))\r\n                var optionPie = {\r\n                    tooltip: {\r\n                        trigger: 'item'\r\n                    },\r\n                    legend: {\r\n                        center: 'center'\r\n                    },\r\n                    series: [\r\n                        {\r\n                            name: '学生性别分析',\r\n                            type: 'pie',\r\n                            radius: '50%',\r\n                            data: this.sex,\r\n                            emphasis: {\r\n                                itemStyle: {\r\n                                    shadowBlur: 10,\r\n                                    shadowOffsetX: 0,\r\n                                    shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                                }\r\n                            }\r\n                        }\r\n                    ]\r\n                };\r\n                this.pieChart.setOption(optionPie)\r\n            }\r\n        });\r\n\r\n        // 获取任务图表数据\r\n        getTaskChart({type:1}).then(res => {\r\n            if (res.code == 1000) {\r\n                this.tasks = res.data.tasks\r\n                this.nums = res.data.nums\r\n                this.myChart = echarts.init(document.getElementById(\"chart\"))\r\n                var option = {\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                    },\r\n                    legend: {\r\n                        data: ['学生数量', '学生数量']\r\n                    },\r\n                    backgroundColor: '#fff',\r\n                    xAxis: [{\r\n                        type: 'category',\r\n                        color: '#59588D',\r\n                        data: this.tasks,\r\n                        axisLine: {\r\n                            lineStyle: {\r\n                                color: 'rgba(107,107,107,0.37)',\r\n                            }\r\n                        },\r\n                        axisTick: {\r\n                            show: true\r\n                        },\r\n                    }],\r\n                    yAxis: [{\r\n                        axisLine: {\r\n                            lineStyle: {\r\n                                color: 'rgba(107,107,107,0.37)',\r\n                            }\r\n                        },\r\n                        axisTick: {\r\n                            show: true\r\n                        },\r\n                        splitLine: {\r\n                            lineStyle: {\r\n                                color: 'rgba(131,101,101,0.2)',\r\n                                type: 'dashed',\r\n                            }\r\n                        }\r\n                    }],\r\n                    series: [{\r\n                        data: this.nums,\r\n                        type: 'line',\r\n                        name: '折线图',\r\n                        symbol: 'none',\r\n                        areaStyle: {\r\n                            color: \"#E6F8EE\"\r\n                        },\r\n                        lineStyle: {\r\n                            color: '#3AC977',\r\n                            width: 2,\r\n                            shadowColor: 'rgba(0, 0, 0, 0.3)',//设置折线阴影\r\n                            shadowBlur: 15,\r\n                            shadowOffsetY: 20,\r\n                        },\r\n                        zlevel: 1\r\n                    },{\r\n                        type: 'bar',\r\n                        data: this.nums,\r\n                        barWidth: '15px',\r\n                        name: '柱状图',\r\n                        itemStyle: {\r\n                            normal: {\r\n                                color: function(params){//展示正值的柱子，负数设为透明\r\n                                    let colorArr = params.value > 0?['#7866BE', '#7866BE']:['rgba(0,0,0,0)', 'rgba(0,0,0,0)']\r\n                                    return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                        offset: 0,\r\n                                        color: colorArr[0] // 0% 处的颜色\r\n                                    }, {\r\n                                        offset: 1,\r\n                                        color:  colorArr[1]// 100% 处的颜色\r\n                                    }], false)\r\n                                },\r\n                                barBorderRadius: [30,30,0,0]\r\n                            },\r\n                        },\r\n                        label: {\r\n                            normal: {\r\n                                show: true,\r\n                                fontSize: 13,\r\n                                color: '#333',\r\n                                position: 'top',\r\n                            }\r\n                        },\r\n                        zlevel: 2\r\n                    }\r\n                    ]\r\n                };\r\n                this.myChart.setOption(option);\r\n            }\r\n        });\r\n\r\n        // 获取任务列表数据\r\n        getTaskIndexList({type:1}).then(res => {\r\n            if (res.code == 1000) {\r\n                this.taskList = res.data.slice(0,5)\r\n                this.taskCard = res.data.slice(0,3)\r\n            }\r\n        });\r\n\r\n        // 窗口大小变化时重绘图表\r\n        window.addEventListener('resize', () => {\r\n            this.progressChart && this.progressChart.resize();\r\n            this.resourceChart && this.resourceChart.resize();\r\n            if (this.myChart && typeof this.myChart.resize === 'function') {\r\n                this.myChart.resize()\r\n            }\r\n            if (this.pieChart && typeof this.pieChart.resize === 'function') {\r\n                this.pieChart.resize()\r\n            }\r\n        });\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.index-top {\r\n    margin-bottom: 20px;\r\n    height: 210px;\r\n}\r\n.item-01 {\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 0;\r\n    border-radius: 8px;\r\n    height: 170px;\r\n    background-color: #452B90;\r\n}\r\n.item-02 {\r\n    border-radius: 8px;\r\n    margin-top: 20px;\r\n    height: 90px;\r\n    background-color: #ffffff;\r\n}\r\n.item-03 {\r\n    border-radius: 8px;\r\n    height: 170px;\r\n    background-color: #ffffff;\r\n}\r\n.item-04 {\r\n    border-radius: 8px;\r\n    margin-top: 20px;\r\n    height: 90px;\r\n    background-color: #ffffff;\r\n}\r\n.item-05 {\r\n    border-radius: 8px;\r\n    height: 170px;\r\n    background-color: #F8B940;\r\n    background-size: 100% 100%;\r\n    color: #ffffff;\r\n}\r\n.item-06 {\r\n    border-radius: 8px;\r\n    height: 170px;\r\n    background-color: #ffffff;\r\n}\r\n.index-center {\r\n    margin-top: 20px;\r\n    height: 400px;\r\n}\r\n.item-07 {\r\n    border-radius: 8px;\r\n    height: 400px;\r\n    background-color: #ffffff;\r\n}\r\n.item-08 {\r\n    border-radius: 8px;\r\n    height: 400px;\r\n    background-color: #ffffff;\r\n}\r\n.index-center-01 {\r\n    margin-top: 20px;\r\n    height: 300px;\r\n}\r\n.item-09 {\r\n    border-radius: 8px;\r\n    height: 300px;\r\n    background-color: #ffffff;\r\n    overflow: scroll;\r\n}\r\n.index-under {\r\n    margin-top: 20px;\r\n    height: 400px;\r\n}\r\n.item-10 {\r\n    border-radius: 8px;\r\n    height: 350px;\r\n    background-color: #ffffff;\r\n}\r\n.item-11 {\r\n    border-radius: 8px;\r\n    height: 450px;\r\n    background-color: #ffffff;\r\n}\r\n.item-01-top {\r\n    height: 90px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n}\r\n.item-01-top-center {\r\n    margin-left: 15px;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n}\r\n.item-01-under {\r\n    margin-top: 10px;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    height: 60px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n.item-06-top {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n.item-06-under {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n.item-05-top {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n#chart,#pie-chart {\r\n    width: 100%;\r\n    height: 380px;\r\n}\r\n.item-09::-webkit-scrollbar {\r\n    width: 0px;\r\n    height: 0px;\r\n}\r\n.el-row {\r\n    width: 100%;\r\n    height: 100%;\r\n}\r\n.item-10-item {\r\n    border: 1px solid #E5E5E5;\r\n    border-radius: 20px;\r\n    height: 100%;\r\n    margin: 0 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n}\r\n/deep/ .el-calendar-day {\r\n    height: 45px !important;\r\n    border: none;\r\n}\r\n/* 鼠标悬停颜色加深 */\r\n/* 新增卡片样式 */\r\n.dashboard-card {\r\n    transition: all 0.3s ease;\r\n    border-radius: 10px;\r\n    border: none;\r\n    position: relative;\r\n    overflow: hidden;\r\n}\r\n\r\n.card-content {\r\n    padding: 20px;\r\n    position: relative;\r\n    z-index: 2;\r\n}\r\n\r\n.card-folder-edge {\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    width: 8px;\r\n    z-index: 1;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.card-icon {\r\n    width: 70px;\r\n    height: 70px;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.card-title {\r\n    color: #4A2B90;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.card-value {\r\n    color: #4A2B90;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n}\r\n\r\n.card-footer {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    margin-top: 15px;\r\n    color: #4A2B90;\r\n    font-size: 14px;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n.card-footer i {\r\n    margin-left: 5px;\r\n    transition: all 0.3s ease;\r\n}\r\n\r\n/* 卡片1 - 淡紫色 */\r\n.card-1 {\r\n    background-color: #F0EBFA;\r\n}\r\n.card-1 .card-folder-edge {\r\n    background-color: #8A6AE4;\r\n}\r\n.card-1:hover {\r\n    background-color: #D8C7F5;\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 10px 20px rgba(138, 106, 228, 0.2) !important;\r\n}\r\n.card-1:hover .card-folder-edge {\r\n    width: 12px;\r\n    background-color: #6A3DC8;\r\n}\r\n.card-1:hover .card-icon {\r\n    transform: scale(1.1);\r\n}\r\n.card-1:hover .card-footer {\r\n    color: #6A3DC8;\r\n}\r\n.card-1:hover .card-footer i {\r\n    transform: translateX(5px);\r\n}\r\n\r\n/* 卡片2 - 淡蓝色 */\r\n.card-2 {\r\n    background-color: #E8F4FE;\r\n}\r\n.card-2 .card-folder-edge {\r\n    background-color: #4A90E2;\r\n}\r\n.card-2:hover {\r\n    background-color: #C3E3FD;\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 10px 20px rgba(74, 144, 226, 0.2) !important;\r\n}\r\n.card-2:hover .card-folder-edge {\r\n    width: 12px;\r\n    background-color: #2A7BD6;\r\n}\r\n.card-2:hover .card-icon {\r\n    transform: scale(1.1);\r\n}\r\n.card-2:hover .card-footer {\r\n    color: #2A7BD6;\r\n}\r\n.card-2:hover .card-footer i {\r\n    transform: translateX(5px);\r\n}\r\n\r\n/* 卡片3 - 淡绿色 */\r\n.card-3 {\r\n    background-color: #E8F8F0;\r\n}\r\n.card-3 .card-folder-edge {\r\n    background-color: #4CAF50;\r\n}\r\n.card-3:hover {\r\n    background-color: #C3EBD6;\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 10px 20px rgba(76, 175, 80, 0.2) !important;\r\n}\r\n.card-3:hover .card-folder-edge {\r\n    width: 12px;\r\n    background-color: #3D8B40;\r\n}\r\n.card-3:hover .card-icon {\r\n    transform: scale(1.1);\r\n}\r\n.card-3:hover .card-footer {\r\n    color: #3D8B40;\r\n}\r\n.card-3:hover .card-footer i {\r\n    transform: translateX(5px);\r\n}\r\n\r\n/* 卡片4 - 淡橙色 */\r\n.card-4 {\r\n    background-color: #FEF0E8;\r\n}\r\n.card-4 .card-folder-edge {\r\n    background-color: #FF7043;\r\n}\r\n.card-4:hover {\r\n    background-color: #FDD8C3;\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 10px 20px rgba(255, 112, 67, 0.2) !important;\r\n}\r\n.card-4:hover .card-folder-edge {\r\n    width: 12px;\r\n    background-color: #F4511E;\r\n}\r\n.card-4:hover .card-icon {\r\n    transform: scale(1.1);\r\n}\r\n.card-4:hover .card-footer {\r\n    color: #F4511E;\r\n}\r\n.card-4:hover .card-footer i {\r\n    transform: translateX(5px);\r\n}\r\n\r\n.item-01-top {\r\n    height: auto;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.item-01-top-center {\r\n    margin-left: 15px;\r\n    height: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n\r\n.chart-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    border-bottom: 1px solid #eee;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.chart-header span {\r\n    font-weight: bold;\r\n    color: #4A2B90;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}