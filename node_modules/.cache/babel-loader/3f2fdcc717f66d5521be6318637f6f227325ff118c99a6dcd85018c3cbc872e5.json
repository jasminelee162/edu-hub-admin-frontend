{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { editTestItem, getTestItemById } from '../../../api/api';\nexport default {\n  props: ['updateVisible', 'updateId', 'testId'],\n  data() {\n    return {\n      content: [{\n        value: \"A\",\n        option: \"\"\n      }],\n      keyword: [{\n        value: \"\",\n        option: \"\"\n      }],\n      form: {\n        testId: \"\",\n        title: \"\",\n        sort: \"\",\n        type: \"\",\n        score: \"\",\n        keyword: \"\",\n        answer: \"\",\n        content: \"\",\n        remark: \"\"\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入题目',\n          trigger: 'blur'\n        }],\n        sort: [{\n          required: true,\n          message: '请输入序号',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入分数',\n          trigger: 'blur'\n        }],\n        answer: [{\n          required: true,\n          message: '请输入答案',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择类型',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    addContent() {\n      const code = String.fromCharCode(65 + this.content.length);\n      this.content.push({\n        value: code,\n        option: \"\"\n      });\n    },\n    minusContent(index) {\n      this.content.splice(index, 1);\n    },\n    addKeyword() {\n      this.keyword.push({\n        value: \"\",\n        option: \"\"\n      });\n    },\n    minusKeyword(index) {\n      this.keyword.splice(index, 1);\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (!valid) return false;\n        if (this.form.type === '0' || this.form.type === '1') {\n          for (const item of this.content) {\n            if (!item.option) {\n              this.$message({\n                message: '请完善选项内容',\n                type: 'warning'\n              });\n              return;\n            }\n          }\n          this.form.content = JSON.stringify(this.content);\n        } else if (this.form.type === '3') {\n          this.form.content = JSON.stringify([{\n            value: 'A',\n            option: '对'\n          }, {\n            value: 'B',\n            option: '错'\n          }]);\n        } else {\n          this.form.content = \"\";\n        }\n        if (this.form.type === '4') {\n          for (const item of this.keyword) {\n            if (!item.value || !item.option) {\n              this.$message({\n                message: '请完善得分点信息',\n                type: 'warning'\n              });\n              return;\n            }\n          }\n          this.form.keyword = JSON.stringify(this.keyword);\n        } else {\n          this.form.keyword = \"\";\n        }\n        this.form.testId = this.testId;\n        editTestItem(this.form).then(res => {\n          if (res.code === 1000) {\n            this.$notify.success({\n              title: '成功',\n              message: \"保存成功\"\n            });\n            this.handleClose();\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      });\n    },\n    handleClose() {\n      this.content = [{\n        value: \"A\",\n        option: \"\"\n      }];\n      this.keyword = [{\n        value: \"\",\n        option: \"\"\n      }];\n      this.$emit(\"updateFalse\");\n    }\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getTestItemById({\n          id: newVal\n        }).then(res => {\n          if (res.code === 1000) {\n            this.form = res.data;\n            this.form.type = String(res.data.type);\n            this.content = res.data.content ? JSON.parse(res.data.content) : [{\n              value: \"A\",\n              option: \"\"\n            }];\n            this.keyword = res.data.keyword ? JSON.parse(res.data.keyword) : [{\n              value: \"\",\n              option: \"\"\n            }];\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    },\n    'form.type'(newType) {\n      if (newType === '3') {\n        this.content = [{\n          value: 'A',\n          option: '对'\n        }, {\n          value: 'B',\n          option: '错'\n        }];\n      } else if (newType === '0' || newType === '1') {\n        this.content = [{\n          value: 'A',\n          option: ''\n        }];\n      } else {\n        this.content = [];\n      }\n    }\n  }\n};","map":{"version":3,"names":["editTestItem","getTestItemById","props","data","content","value","option","keyword","form","testId","title","sort","type","score","answer","remark","rules","required","message","trigger","methods","addContent","code","String","fromCharCode","length","push","minusContent","index","splice","addKeyword","minusKeyword","submit","$refs","validate","valid","item","$message","JSON","stringify","then","res","$notify","success","handleClose","error","$emit","watch","updateId","newVal","id","parse","form.type","newType"],"sources":["src/components/system/testP/updateTestItem.vue"],"sourcesContent":["<template>\n  <div>\n    <el-dialog title=\"编辑考试题目\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateVisible\" :before-close=\"handleClose\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n        <el-row :gutter=\"10\">\n          <el-col :xs=\"24\"><span class=\"search-title\">题目:</span>\n            <el-form-item prop=\"title\" style=\"margin-bottom:0\">\n              <el-input v-model=\"form.title\" size=\"mini\" placeholder=\"请输入题目\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n          </el-col>\n\n          <el-col :xs=\"24\"><span class=\"search-title\">序号:</span>\n            <el-form-item prop=\"sort\" style=\"margin-bottom:0\">\n              <el-input type=\"number\" v-model=\"form.sort\" size=\"mini\" placeholder=\"请输入序号\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n          </el-col>\n\n          <el-col :xs=\"24\"><span class=\"search-title\">类型:</span>\n            <el-form-item prop=\"type\" style=\"margin-bottom:0\">\n              <el-select clearable size=\"mini\" v-model=\"form.type\" placeholder=\"请选择\">\n                <el-option label=\"单选\" value=\"0\" />\n                <el-option label=\"多选\" value=\"1\" />\n                <el-option label=\"填空\" value=\"2\" />\n                <el-option label=\"判断\" value=\"3\" />\n                <el-option label=\"问答\" value=\"4\" />\n                <el-option label=\"计算(需人工阅卷)\" value=\"5\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n\n          <el-col :xs=\"24\"><span class=\"search-title\">分数:</span>\n            <el-form-item prop=\"score\" style=\"margin-bottom:0\">\n              <el-input type=\"number\" v-model=\"form.score\" size=\"mini\" placeholder=\"请输入分数\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n          </el-col>\n\n          <el-col v-if=\"form.type == 4\" :xs=\"24\">\n            <span class=\"search-title\">得分点:</span>\n            <el-form-item prop=\"content\" style=\"margin-bottom:0\">\n              <div class=\"content-item\" v-for=\"(item,index) in keyword\" :key=\"index\">\n                <el-input v-model=\"item.value\" size=\"mini\" placeholder=\"分数\" style=\"width:100px;margin-right:10px\" />\n                <el-input v-model=\"item.option\" size=\"mini\" placeholder=\"关键词\" />\n                <i v-if=\"index == (keyword.length - 1)\" class=\"el-icon-circle-plus-outline\" style=\"margin-left:10px\" @click=\"addKeyword\"></i>\n                <i v-if=\"index != 0\" class=\"el-icon-remove-outline\" style=\"margin-left:10px\" @click=\"minusKeyword(index)\"></i>\n              </div>\n            </el-form-item>\n          </el-col>\n\n          <el-col :xs=\"24\"><span class=\"search-title\">答案:</span>\n            <el-form-item prop=\"answer\" style=\"margin-bottom:0\">\n              <el-input type=\"textarea\" v-model=\"form.answer\" size=\"mini\" placeholder=\"请输入答案（多选多个答案用英文逗号分隔）\" autocomplete=\"off\" />\n            </el-form-item>\n          </el-col>\n\n          <el-col v-if=\"form.type == 0 || form.type == 1 || form.type == 3\" :xs=\"24\">\n            <span class=\"search-title\">题目内容:</span>\n            <el-form-item prop=\"content\" style=\"margin-bottom:0\">\n              <div class=\"content-item\" v-for=\"(item,index) in content\" :key=\"index\">\n                <el-input v-model=\"item.value\" size=\"mini\" placeholder=\"选项\" style=\"width:100px;margin-right:10px\" :disabled=\"form.type == 3\" />\n                <el-input v-model=\"item.option\" size=\"mini\" placeholder=\"选项内容\" :disabled=\"form.type == 3\" />\n                <i v-if=\"index == (content.length - 1) && form.type != 3\" class=\"el-icon-circle-plus-outline\" style=\"margin-left:10px\" @click=\"addContent\"></i>\n                <i v-if=\"index != 0 && form.type != 3\" class=\"el-icon-remove-outline\" style=\"margin-left:10px\" @click=\"minusContent(index)\"></i>\n              </div>\n            </el-form-item>\n          </el-col>\n\n          <el-col style=\"margin-top:20px\" :xs=\"24\"><span class=\"search-title\">备注:</span>\n            <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\n              <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n        <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { editTestItem, getTestItemById } from '../../../api/api'\n\nexport default {\n  props: ['updateVisible', 'updateId', 'testId'],\n  data() {\n    return {\n      content: [{ value: \"A\", option: \"\" }],\n      keyword: [{ value: \"\", option: \"\" }],\n      form: {\n        testId: \"\",\n        title: \"\",\n        sort: \"\",\n        type: \"\",\n        score: \"\",\n        keyword: \"\",\n        answer: \"\",\n        content: \"\",\n        remark: \"\",\n      },\n      rules: {\n        title: [{ required: true, message: '请输入题目', trigger: 'blur' }],\n        sort: [{ required: true, message: '请输入序号', trigger: 'blur' }],\n        score: [{ required: true, message: '请输入分数', trigger: 'blur' }],\n        answer: [{ required: true, message: '请输入答案', trigger: 'blur' }],\n        type: [{ required: true, message: '请选择类型', trigger: 'blur' }],\n      }\n    }\n  },\n  methods: {\n    addContent() {\n      const code = String.fromCharCode(65 + this.content.length)\n      this.content.push({ value: code, option: \"\" })\n    },\n    minusContent(index) {\n      this.content.splice(index, 1)\n    },\n    addKeyword() {\n      this.keyword.push({ value: \"\", option: \"\" })\n    },\n    minusKeyword(index) {\n      this.keyword.splice(index, 1)\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (!valid) return false\n\n        if (this.form.type === '0' || this.form.type === '1') {\n          for (const item of this.content) {\n            if (!item.option) {\n              this.$message({ message: '请完善选项内容', type: 'warning' })\n              return\n            }\n          }\n          this.form.content = JSON.stringify(this.content)\n        } else if (this.form.type === '3') {\n          this.form.content = JSON.stringify([\n            { value: 'A', option: '对' },\n            { value: 'B', option: '错' }\n          ])\n        } else {\n          this.form.content = \"\"\n        }\n\n        if (this.form.type === '4') {\n          for (const item of this.keyword) {\n            if (!item.value || !item.option) {\n              this.$message({ message: '请完善得分点信息', type: 'warning' })\n              return\n            }\n          }\n          this.form.keyword = JSON.stringify(this.keyword)\n        } else {\n          this.form.keyword = \"\"\n        }\n\n        this.form.testId = this.testId\n        editTestItem(this.form).then(res => {\n          if (res.code === 1000) {\n            this.$notify.success({ title: '成功', message: \"保存成功\" })\n            this.handleClose()\n          } else {\n            this.$notify.error({ title: '错误', message: res.message })\n          }\n        })\n      })\n    },\n    handleClose() {\n      this.content = [{ value: \"A\", option: \"\" }]\n      this.keyword = [{ value: \"\", option: \"\" }]\n      this.$emit(\"updateFalse\")\n    }\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getTestItemById({ id: newVal }).then(res => {\n          if (res.code === 1000) {\n            this.form = res.data\n            this.form.type = String(res.data.type)\n            this.content = res.data.content ? JSON.parse(res.data.content) : [{ value: \"A\", option: \"\" }]\n            this.keyword = res.data.keyword ? JSON.parse(res.data.keyword) : [{ value: \"\", option: \"\" }]\n          } else {\n            this.$notify.error({ title: '错误', message: res.message })\n          }\n        })\n      }\n    },\n    'form.type'(newType) {\n      if (newType === '3') {\n        this.content = [\n          { value: 'A', option: '对' },\n          { value: 'B', option: '错' }\n        ]\n      } else if (newType === '0' || newType === '1') {\n        this.content = [{ value: 'A', option: '' }]\n      } else {\n        this.content = []\n      }\n    }\n  }\n}\n</script>\n\n\n<style   scoped>\n  .content-item {\n      display: flex;\n      align-items: center;\n  }\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}