{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { login, getUser, sendEmailCode, loginWithEmail } from '../../../api/api';\nimport { setLock } from '@/utils/lock';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      loginType: 'account',\n      // 登录方式切换\n      emailInfo: {\n        email: '',\n        code: ''\n      },\n      isSending: false,\n      countdown: 60,\n      timer: null,\n      sentEmail: '' // 记录发送验证码时的邮箱\n    };\n  },\n  mounted() {\n    this.initParticles();\n  },\n  created() {\n    if (this.$route.query.passwordChanged) {\n      this.$notify.success({\n        title: '提示',\n        message: '密码修改成功，请使用新密码登录',\n        duration: 5000\n      });\n      const query = {\n        ...this.$route.query\n      };\n      delete query.passwordChanged;\n      this.$router.replace({\n        ...this.$route,\n        query\n      });\n    }\n  },\n  methods: {\n    sendCode() {\n      if (!this.emailInfo.email) {\n        this.$message({\n          message: '请输入邮箱',\n          type: 'warning'\n        });\n        return;\n      }\n\n      // 记录发送验证码的邮箱\n      this.sentEmail = this.emailInfo.email;\n      const loadingInstance = this.$loading({\n        lock: true,\n        text: '正在发送验证码...',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      sendEmailCode(this.emailInfo.email).then(() => {\n        loadingInstance.close();\n        this.$message.success('验证码发送成功');\n        this.isSending = true;\n        this.countdown = 60;\n        this.timer = setInterval(() => {\n          this.countdown--;\n          if (this.countdown <= 0) {\n            clearInterval(this.timer);\n            this.isSending = false;\n          }\n        }, 1000);\n      }).catch(() => {\n        loadingInstance.close();\n        this.$message.error('验证码发送失败');\n      });\n    },\n    emailLogin() {\n      if (!this.emailInfo.email) {\n        this.$message.warning('请输入邮箱');\n        return;\n      }\n      if (!this.emailInfo.code) {\n        this.$message.warning('请输入验证码');\n        return;\n      }\n      if (!this.sentEmail) {\n        this.$message.warning('请先发送验证码');\n        return;\n      }\n      if (this.emailInfo.email !== this.sentEmail) {\n        this.$message.warning('邮箱与发送验证码的邮箱不一致，请重新发送验证码');\n        return;\n      }\n      const loadingInstance = this.$loading({\n        lock: true,\n        text: '正在登录...',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      console.log('请求登录参数:', {\n        email: this.emailInfo.email,\n        code: this.emailInfo.code\n      });\n      loginWithEmail(this.emailInfo.email, this.emailInfo.code).then(res => {\n        loadingInstance.close();\n        console.log('登录接口返回:', res);\n        if (res.code === 1000) {\n          this.$message.success('登录成功');\n          const token = res.data.token;\n          localStorage.setItem('user_token', token);\n          this.$store.commit('user/setToken', token);\n          this.getUserInfo().then(() => {\n            setLock(false);\n            this.$router.push(this.$route.query.redirect || '/index');\n          });\n        } else {\n          this.$message.error(res.message || '登录失败，请检查验证码');\n        }\n      }).catch(err => {\n        loadingInstance.close();\n        console.error('登录失败错误:', err);\n        this.$message.error(err.response?.data?.message || '登录失败，请稍后重试');\n      });\n    },\n    login() {\n      if (!this.username) {\n        this.$message({\n          message: '请输入用户名',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.password) {\n        this.$message({\n          message: '请输入密码',\n          type: 'warning'\n        });\n        return;\n      }\n      var params = {\n        username: this.username,\n        password: this.password\n      };\n      const loadingInstance = this.$loading({\n        lock: true,\n        text: '正在登录...',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      login(params).then(res => {\n        loadingInstance.close();\n        if (res.code == 1000) {\n          this.$message({\n            message: '登录成功',\n            type: 'success'\n          });\n          var token = res.data.token;\n          this.$store.commit('user/setToken', token);\n          this.getUserInfo().then(() => {\n            setLock(false);\n            const redirect = this.$route.query.redirect || '/index';\n            this.$router.push(redirect);\n          });\n        } else {\n          this.$message.error(res.message);\n        }\n      }).catch(error => {\n        loadingInstance.close();\n        this.$message.error('登录失败，请稍后重试');\n      });\n    },\n    getUserInfo() {\n      return new Promise((resolve, reject) => {\n        getUser().then(res => {\n          if (res.code == 1000) {\n            this.$store.commit('user/setUser', JSON.stringify(res.data));\n            resolve();\n          } else {\n            reject(res.message);\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    initParticles() {\n      const canvas = document.getElementById('particle-canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      const particles = [];\n      const particleCount = 80;\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399'];\n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 1,\n          speedX: Math.random() * 0.3 - 0.15,\n          speedY: Math.random() * 0.3 - 0.15,\n          color: colors[Math.floor(Math.random() * colors.length)]\n        });\n      }\n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        particles.forEach(particle => {\n          ctx.beginPath();\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          particle.x += particle.speedX;\n          particle.y += particle.speedY;\n          if (particle.x < 0 || particle.x > canvas.width) {\n            particle.speedX *= -1;\n          }\n          if (particle.y < 0 || particle.y > canvas.height) {\n            particle.speedY *= -1;\n          }\n          particles.forEach(other => {\n            const distance = Math.sqrt(Math.pow(particle.x - other.x, 2) + Math.pow(particle.y - other.y, 2));\n            if (distance < 120) {\n              ctx.beginPath();\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance / 120})`;\n              ctx.lineWidth = 0.3;\n              ctx.moveTo(particle.x, particle.y);\n              ctx.lineTo(other.x, other.y);\n              ctx.stroke();\n            }\n          });\n        });\n        requestAnimationFrame(animate);\n      };\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["login","getUser","sendEmailCode","loginWithEmail","setLock","data","username","password","loginType","emailInfo","email","code","isSending","countdown","timer","sentEmail","mounted","initParticles","created","$route","query","passwordChanged","$notify","success","title","message","duration","$router","replace","methods","sendCode","$message","type","loadingInstance","$loading","lock","text","spinner","background","then","close","setInterval","clearInterval","catch","error","emailLogin","warning","console","log","res","token","localStorage","setItem","$store","commit","getUserInfo","push","redirect","err","response","params","Promise","resolve","reject","JSON","stringify","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","particleCount","colors","i","x","Math","random","y","size","speedX","speedY","color","floor","length","animate","clearRect","forEach","particle","beginPath","arc","PI","fillStyle","fill","other","distance","sqrt","pow","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame"],"sources":["src/views/system/login/login.vue"],"sourcesContent":["<template>\r\n<div class=\"login-container\">\r\n    <!-- 粒子背景画布 -->\r\n    <canvas id=\"particle-canvas\"></canvas>\r\n    \r\n    <!-- 左侧内容区域 - 增强版 -->\r\n    <div class=\"left-content\">\r\n      <div class=\"logo-area\" style=\"padding-top: 30px;\">\r\n        <img style=\"width:300px; padding-left:0px; margin-top:20px;\" src=\"@/assets/image/systemlogo.png\" />\r\n        <div class=\"platform-role\">教师 · 管理中枢</div>\r\n      </div>\r\n      \r\n      <div class=\"feature-list\">\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-data\"></i>\r\n          <span>学情数据分析</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-notebook-2\"></i>\r\n          <span>课程内容管理</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-check\"></i>\r\n          <span>作业批改系统</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-chat-line-round\"></i>\r\n          <span>师生互动平台</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"quote-area\">\r\n        <p class=\"quote-text\">\"教育不是灌输，而是点燃火焰\"</p>\r\n        <p class=\"quote-author\">—— 苏格拉底 ——</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 右侧登录卡片 -->\r\n    <div class=\"login-card\">\r\n      <h2 class=\"slogan-en\">TEACH WITH INTELLIGENCE</h2>\r\n      <p class=\"slogan-cn\">智能教育管理平台，赋能高效教学</p>\r\n      \r\n      <div class=\"divider\"></div>\r\n      \r\n      <p class=\"sub-slogan\">精准掌握每位学生的学习轨迹<br>用数据驱动个性化教学方案</p>\r\n      \r\n      <div class=\"login-form\">\r\n        <!-- 登录方式切换 -->\r\n        <div class=\"login-type-switch\">\r\n          <span\r\n            :class=\"['login-type-option', loginType === 'account' ? 'active' : '']\"\r\n            @click=\"loginType = 'account'\"\r\n          >\r\n            账号密码登录\r\n          </span>\r\n          <span\r\n            :class=\"['login-type-option', loginType === 'email' ? 'active' : '']\"\r\n            @click=\"loginType = 'email'\"\r\n          >\r\n            邮箱验证码登录\r\n          </span>\r\n        </div>\r\n\r\n        <!-- 账号密码登录表单 -->\r\n        <div v-if=\"loginType === 'account'\">\r\n          <el-input\r\n            v-model=\"username\"\r\n            placeholder=\"工号/用户名\"\r\n            prefix-icon=\"el-icon-user\"\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n          \r\n          <el-input\r\n            v-model=\"password\"\r\n            placeholder=\"密码\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n          \r\n          <el-button \r\n            type=\"primary\" \r\n            class=\"login-btn\"\r\n            @click=\"login\"\r\n          >\r\n            登 录\r\n          </el-button>\r\n        </div>\r\n\r\n        <!-- 邮箱验证码登录表单 -->\r\n        <div v-else>\r\n          <el-input\r\n            v-model=\"emailInfo.email\"\r\n            placeholder=\"请输入邮箱\"\r\n            prefix-icon=\"el-icon-message\"\r\n            class=\"custom-input\"\r\n          ></el-input>\r\n          \r\n          <div style=\"display: flex;\">\r\n            <el-input\r\n              v-model=\"emailInfo.code\"\r\n              placeholder=\"请输入验证码\"\r\n              prefix-icon=\"el-icon-key\"\r\n              class=\"custom-input\"\r\n              style=\"flex: 1; margin-right: 10px;\"\r\n            ></el-input>\r\n            <el-button \r\n              :disabled=\"isSending\"\r\n              @click=\"sendCode\"\r\n              style=\"width: 120px;\"\r\n            >\r\n              {{ isSending ? countdown + 's 后重发' : '获取验证码' }}\r\n            </el-button>\r\n          </div>\r\n          \r\n          <el-button \r\n            type=\"primary\" \r\n            class=\"login-btn\"\r\n            @click=\"emailLogin\"\r\n          >\r\n            登 录\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"footer\">\r\n        <p>—— 让科技赋能每一份教育热忱 ——</p>\r\n        <p class=\"en-footer\">Where Innovation Meets Education</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { login, getUser, sendEmailCode, loginWithEmail } from '../../../api/api'\r\nimport { setLock } from '@/utils/lock'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      loginType: 'account', // 登录方式切换\r\n      emailInfo: {\r\n        email: '',\r\n        code: ''\r\n      },\r\n      isSending: false,\r\n      countdown: 60,\r\n      timer: null,\r\n      sentEmail: '' // 记录发送验证码时的邮箱\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initParticles()\r\n  },\r\n  created() {\r\n    if (this.$route.query.passwordChanged) {\r\n      this.$notify.success({\r\n        title: '提示',\r\n        message: '密码修改成功，请使用新密码登录',\r\n        duration: 5000\r\n      });\r\n\r\n      const query = { ...this.$route.query }\r\n      delete query.passwordChanged\r\n      this.$router.replace({ ...this.$route, query })\r\n    }\r\n  },\r\n  methods: {\r\n    sendCode() {\r\n      if (!this.emailInfo.email) {\r\n        this.$message({\r\n          message: '请输入邮箱',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n\r\n      // 记录发送验证码的邮箱\r\n      this.sentEmail = this.emailInfo.email;\r\n\r\n      const loadingInstance = this.$loading({\r\n        lock: true,\r\n        text: '正在发送验证码...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      });\r\n\r\n      sendEmailCode(this.emailInfo.email).then(() => {\r\n        loadingInstance.close();\r\n        this.$message.success('验证码发送成功');\r\n        this.isSending = true;\r\n        this.countdown = 60;\r\n        this.timer = setInterval(() => {\r\n          this.countdown--;\r\n          if (this.countdown <= 0) {\r\n            clearInterval(this.timer);\r\n            this.isSending = false;\r\n          }\r\n        }, 1000);\r\n      }).catch(() => {\r\n        loadingInstance.close();\r\n        this.$message.error('验证码发送失败');\r\n      });\r\n    },\r\n\r\nemailLogin() {\r\n  if (!this.emailInfo.email) {\r\n    this.$message.warning('请输入邮箱');\r\n    return;\r\n  }\r\n  if (!this.emailInfo.code) {\r\n    this.$message.warning('请输入验证码');\r\n    return;\r\n  }\r\n  if (!this.sentEmail) {\r\n    this.$message.warning('请先发送验证码');\r\n    return;\r\n  }\r\n  if (this.emailInfo.email !== this.sentEmail) {\r\n    this.$message.warning('邮箱与发送验证码的邮箱不一致，请重新发送验证码');\r\n    return;\r\n  }\r\n\r\n  const loadingInstance = this.$loading({\r\n    lock: true,\r\n    text: '正在登录...',\r\n    spinner: 'el-icon-loading',\r\n    background: 'rgba(0, 0, 0, 0.7)'\r\n  });\r\n\r\n  console.log('请求登录参数:', {\r\n    email: this.emailInfo.email,\r\n    code: this.emailInfo.code\r\n  });\r\n\r\n  loginWithEmail(this.emailInfo.email, this.emailInfo.code)\r\n    .then(res => {\r\n      loadingInstance.close();\r\n      console.log('登录接口返回:', res);\r\n      if (res.code === 1000) {\r\n        this.$message.success('登录成功');\r\n        const token = res.data.token;\r\n        localStorage.setItem('user_token', token);\r\n        this.$store.commit('user/setToken', token);\r\n\r\n        this.getUserInfo().then(() => {\r\n          setLock(false);\r\n          this.$router.push(this.$route.query.redirect || '/index');\r\n        });\r\n      } else {\r\n        this.$message.error(res.message || '登录失败，请检查验证码');\r\n      }\r\n    })\r\n    .catch(err => {\r\n      loadingInstance.close();\r\n      console.error('登录失败错误:', err);\r\n      this.$message.error(err.response?.data?.message || '登录失败，请稍后重试');\r\n    });\r\n},\r\n\r\n\r\n    login() {\r\n      if (!this.username) {\r\n        this.$message({\r\n          message: '请输入用户名',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n      if (!this.password) {\r\n        this.$message({\r\n          message: '请输入密码',\r\n          type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n\r\n      var params = {\r\n        username: this.username,\r\n        password: this.password\r\n      };\r\n\r\n      const loadingInstance = this.$loading({\r\n        lock: true,\r\n        text: '正在登录...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      });\r\n\r\n      login(params).then(res => {\r\n        loadingInstance.close();\r\n\r\n        if (res.code == 1000) {\r\n          this.$message({\r\n            message: '登录成功',\r\n            type: 'success'\r\n          });\r\n\r\n          var token = res.data.token;\r\n          this.$store.commit('user/setToken', token);\r\n\r\n          this.getUserInfo().then(() => {\r\n            setLock(false);\r\n            const redirect = this.$route.query.redirect || '/index';\r\n            this.$router.push(redirect);\r\n          });\r\n\r\n        } else {\r\n          this.$message.error(res.message);\r\n        }\r\n      }).catch(error => {\r\n        loadingInstance.close();\r\n        this.$message.error('登录失败，请稍后重试');\r\n      });\r\n    },\r\n\r\n    getUserInfo() {\r\n      return new Promise((resolve, reject) => {\r\n        getUser().then(res => {\r\n          if (res.code == 1000) {\r\n            this.$store.commit('user/setUser', JSON.stringify(res.data));\r\n            resolve();\r\n          } else {\r\n            reject(res.message);\r\n          }\r\n        }).catch(error => {\r\n          reject(error);\r\n        });\r\n      });\r\n    },\r\n\r\n    initParticles() {\r\n      const canvas = document.getElementById('particle-canvas')\r\n      const ctx = canvas.getContext('2d')\r\n      canvas.width = window.innerWidth\r\n      canvas.height = window.innerHeight\r\n\r\n      const particles = []\r\n      const particleCount = 80\r\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399']\r\n\r\n      for (let i = 0; i < particleCount; i++) {\r\n        particles.push({\r\n          x: Math.random() * canvas.width,\r\n          y: Math.random() * canvas.height,\r\n          size: Math.random() * 3 + 1,\r\n          speedX: Math.random() * 0.3 - 0.15,\r\n          speedY: Math.random() * 0.3 - 0.15,\r\n          color: colors[Math.floor(Math.random() * colors.length)]\r\n        })\r\n      }\r\n\r\n      const animate = () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n\r\n        particles.forEach(particle => {\r\n          ctx.beginPath()\r\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2)\r\n          ctx.fillStyle = particle.color\r\n          ctx.fill()\r\n\r\n          particle.x += particle.speedX\r\n          particle.y += particle.speedY\r\n\r\n          if (particle.x < 0 || particle.x > canvas.width) {\r\n            particle.speedX *= -1\r\n          }\r\n          if (particle.y < 0 || particle.y > canvas.height) {\r\n            particle.speedY *= -1\r\n          }\r\n\r\n          particles.forEach(other => {\r\n            const distance = Math.sqrt(\r\n              Math.pow(particle.x - other.x, 2) +\r\n              Math.pow(particle.y - other.y, 2)\r\n            )\r\n            if (distance < 120) {\r\n              ctx.beginPath()\r\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance / 120})`\r\n              ctx.lineWidth = 0.3\r\n              ctx.moveTo(particle.x, particle.y)\r\n              ctx.lineTo(other.x, other.y)\r\n              ctx.stroke()\r\n            }\r\n          })\r\n        })\r\n\r\n        requestAnimationFrame(animate)\r\n      }\r\n\r\n      animate()\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #ffffff;\r\n  overflow: hidden;\r\n  display: flex;\r\n  font-family: 'Microsoft YaHei', sans-serif;\r\n}\r\n\r\n#particle-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n\r\n/* 新增左侧内容区域样式 */\r\n.left-content {\r\n  width: 50%;\r\n  padding: 80px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  z-index: 2;\r\n}\r\n\r\n.logo-area {\r\n  margin-bottom: 80px;\r\n}\r\n\r\n.platform-name {\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  color: #4B0082;\r\n  letter-spacing: 2px;\r\n  margin-bottom: 15px;\r\n  text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.platform-role {\r\n  font-size: 24px;\r\n  color: #6A5ACD;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.feature-list {\r\n  margin: 60px 0;\r\n}\r\n\r\n.feature-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 35px;\r\n  color: #4B0082;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n}\r\n\r\n.feature-item i {\r\n  margin-right: 20px;\r\n  font-size: 28px;\r\n  color: #6A5ACD;\r\n}\r\n\r\n.quote-area {\r\n  color: #555;\r\n  font-style: italic;\r\n  line-height: 1.8;\r\n  margin-top: 60px;\r\n}\r\n\r\n.quote-text {\r\n  font-size: 26px;\r\n  line-height: 1.5;\r\n  margin-bottom: 10px;\r\n  color: #4B0082;\r\n}\r\n\r\n.quote-author {\r\n  text-align: right;\r\n  font-size: 18px;\r\n  color: #9370DB;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 登录卡片样式调整 */\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  width: 450px;\r\n  min-height: 100vh;\r\n  overflow: visible; /* 确保 footer 不被裁剪 */\r\n  padding-bottom: 120px; /* 给 footer 留空间 */\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(5px);\r\n  padding: 100px 50px;\r\n  box-shadow: -5px 0 30px rgba(0, 0, 0, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.slogan-en {\r\n  color: #4B0082;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.slogan-cn {\r\n  color: #6A5ACD;\r\n  font-size: px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.divider {\r\n  width: 50px;\r\n  height: 3px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  margin: 25px 0;\r\n}\r\n\r\n.sub-slogan {\r\n  color: #666;\r\n  line-height: 1.8;\r\n  margin-bottom: 50px;\r\n  font-size: 15px;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 40px;\r\n}\r\n\r\n.custom-input {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.custom-input >>> .el-input__inner {\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  border: 1px solid #E6E6FA;\r\n  padding-left: 45px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.custom-input >>> .el-input__inner:focus {\r\n  border-color: #6A5ACD;\r\n  box-shadow: 0 0 0 2px rgba(106, 90, 205, 0.2);\r\n}\r\n\r\n.custom-input >>> .el-input__prefix {\r\n  color: #6A5ACD;\r\n  left: 15px;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  border: none;\r\n  font-size: 16px;\r\n  letter-spacing: 2px;\r\n  margin-top: 10px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.login-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 15px rgba(106, 90, 205, 0.4);\r\n}\r\n\r\n.footer {\r\n  position: absolute;\r\n  bottom: 40px;\r\n  width: calc(100% - 100px);\r\n  text-align: center;\r\n  color: #6A5ACD;\r\n  font-size: 14px;\r\n}\r\n\r\n.en-footer {\r\n  margin-top: 10px;\r\n  font-style: italic;\r\n  color: #B0C4DE;\r\n}\r\n\r\n/* 登录方式切换样式 */\r\n.login-type-switch {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.login-type-option {\r\n  padding: 8px 20px;\r\n  margin: 0 10px;\r\n  cursor: pointer;\r\n  border-radius: 20px;\r\n  color: #6A5ACD;\r\n  font-size: 14px;\r\n  transition: all 0.3s;\r\n  border: 1px solid #6A5ACD;\r\n  background-color: rgba(106, 90, 205, 0.1);\r\n}\r\n\r\n.login-type-option:hover {\r\n  background-color: rgba(106, 90, 205, 0.2);\r\n}\r\n\r\n.login-type-option.active {\r\n  background-color: #6A5ACD;\r\n  color: white;\r\n  font-weight: bold;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}