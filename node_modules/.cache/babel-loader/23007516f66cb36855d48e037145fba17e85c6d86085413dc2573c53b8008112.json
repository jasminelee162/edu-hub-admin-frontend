{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mixin } from \"../../../minix\";\nimport { editApeChapter, getApeChapterById, getApeTaskList, getApeTaskByTeacherId } from '../../../api/api';\nexport default {\n  mixins: [mixin],\n  data() {\n    return {\n      fileList: [],\n      fileList1: [],\n      formLabelWidth: '80px',\n      form: {\n        taskId: \"\",\n        taskName: \"\",\n        name: \"\",\n        videoName: \"\",\n        video: \"\",\n        coursewareName: \"\",\n        courseware: \"\",\n        remark: \"\"\n      },\n      rules: {\n        taskId: [{\n          required: true,\n          message: '请输入课程id',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入章节名称',\n          trigger: 'blur'\n        }],\n        video: [{\n          required: true,\n          message: '请输入视频',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateVisible', 'updateId', 'taskId', 'type', 'flag'],\n  methods: {\n    handleAvatorSuccess(res) {\n      let _this = this;\n      if (res.code == 1000) {\n        _this.$message({\n          type: 'success',\n          message: '上传成功!'\n        });\n        this.fileList.push({\n          name: res.data,\n          url: this.$store.state.configure.HOST + res.message\n        });\n        this.form.video = res.message;\n        this.form.videoName = res.data;\n      } else {\n        _this.$notify.error({\n          title: '错误',\n          message: res.message\n        });\n      }\n    },\n    handleRemove(file, fileList) {\n      this.form.video = \"\";\n      this.fileList = [];\n    },\n    handleFileSuccess(res) {\n      let _this = this;\n      if (res.code == 1000) {\n        _this.$message({\n          type: 'success',\n          message: '上传成功!'\n        });\n        this.fileList1.push({\n          name: res.data,\n          url: this.$store.state.configure.HOST + res.message\n        });\n        this.form.courseware = res.message;\n        this.form.coursewareName = res.data;\n      } else {\n        _this.$notify.error({\n          title: '错误',\n          message: res.message\n        });\n      }\n    },\n    handleFileRemove(file, fileList) {\n      this.form.courseware = \"\";\n      this.fileList1 = [];\n    },\n    getApeTaskList() {\n      getApeTaskList().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    getApeTaskByTeacherId() {\n      getApeTaskByTeacherId().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          editApeChapter(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.fileList = [];\n      this.fileList1 = [];\n      this.$emit(\"updateFalse\");\n    }\n  },\n  created() {},\n  mounted() {\n    if (this.flag == 2) {\n      this.getApeTaskByTeacherId();\n    } else {\n      this.getApeTaskList();\n    }\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getApeChapterById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            this.form = res.data;\n            this.fileList.push({\n              name: this.form.videoName,\n              url: this.$store.state.configure.HOST + this.form.video\n            });\n            if (this.form.coursewareName) {\n              this.fileList1.push({\n                name: this.form.coursewareName,\n                url: this.$store.state.configure.HOST + this.form.courseware\n              });\n            }\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    },\n    updateVisible(newVal) {\n      if (newVal) {\n        if (this.taskId) {\n          this.form.taskId = this.taskId;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["mixin","editApeChapter","getApeChapterById","getApeTaskList","getApeTaskByTeacherId","mixins","data","fileList","fileList1","formLabelWidth","form","taskId","taskName","name","videoName","video","coursewareName","courseware","remark","rules","required","message","trigger","props","methods","handleAvatorSuccess","res","_this","code","$message","type","push","url","$store","state","configure","HOST","$notify","error","title","handleRemove","file","handleFileSuccess","handleFileRemove","then","task","submit","$refs","validate","valid","success","handleClose","$emit","created","mounted","flag","watch","updateId","newVal","id","updateVisible"],"sources":["src/components/system/chapter/updateChapter.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <el-dialog title=\"编辑章节\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateVisible\" :before-close=\"handleClose\">\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                所属课程:\r\n                </span>\r\n                <div style=\"width:100%\">\r\n                    <el-form-item prop=\"taskId\" style=\"margin-bottom:0\">\r\n                        <el-select :disabled=\"type == 0 ? true:false\" clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.taskId\" placeholder=\"请选择\">\r\n                            <el-option v-for=\"(item,index) in task\" :key=\"index\"\r\n                                :label=\"item.name\"\r\n                                :value=\"item.id\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                章节名称:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n                <el-form-item prop=\"name\" style=\"margin-bottom:0\">\r\n                    <el-input v-model=\"form.name\" size=\"mini\" placeholder=\"请输入章节名称\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                视频:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n                <el-form-item prop=\"video\" style=\"margin-bottom:0\">\r\n                    <el-upload\r\n                        :file-list=\"fileList\"\r\n                        ref=\"upload\"\r\n                        :action=\"uploadVideoUrl()\"\r\n                        accept=\"video/*\"\r\n                        :multiple=\"false\"\r\n                        :limit=\"1\"\r\n                        :on-exceed=\"handleExceed\"\r\n                        :on-success=\"handleAvatorSuccess\"\r\n                        :on-remove=\"handleRemove\">\r\n                        <el-button size=\"mini\" type=\"primary\">点击上传</el-button>\r\n                    </el-upload>\r\n                </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                课件:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n                <el-form-item prop=\"courseware\" style=\"margin-bottom:0\">\r\n                    <el-upload\r\n                        :file-list=\"fileList1\"\r\n                        ref=\"upload\"\r\n                        :action=\"uploadFileUrl()\"\r\n                        :multiple=\"false\"\r\n                        :limit=\"1\"\r\n                        :on-exceed=\"handleExceed\"\r\n                        :on-success=\"handleFileSuccess\"\r\n                        :on-remove=\"handleFileRemove\">\r\n                        <el-button size=\"mini\" type=\"primary\">点击上传</el-button>\r\n                    </el-upload>\r\n                </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col style=\"margin-top:30px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                备注:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n                <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\r\n                    <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\"></el-input>\r\n                </el-form-item>\r\n            </div>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\r\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  import {mixin} from \"../../../minix\";\r\n  import {editApeChapter,getApeChapterById,getApeTaskList,getApeTaskByTeacherId} from '../../../api/api'\r\n  export default {\r\n    mixins: [mixin],\r\n    data() {\r\n      return{\r\n        fileList: [],\r\n        fileList1: [],\r\n        formLabelWidth: '80px',\r\n        form: {\r\n          taskId: \"\",\r\n          taskName: \"\",\r\n          name: \"\",\r\n          videoName: \"\",\r\n          video: \"\",\r\n          coursewareName: \"\",\r\n          courseware: \"\",\r\n          remark: \"\",\r\n        },\r\n        rules: {\r\n          taskId: [\r\n            { required: true, message: '请输入课程id', trigger: 'blur' },\r\n          ],\r\n          name: [\r\n            { required: true, message: '请输入章节名称', trigger: 'blur' },\r\n          ],\r\n          video: [\r\n            { required: true, message: '请输入视频', trigger: 'blur' },\r\n          ],\r\n        },\r\n      }\r\n    },\r\n    props: ['updateVisible','updateId','taskId','type','flag'],\r\n    methods: {\r\n      handleAvatorSuccess(res) {\r\n        let _this = this;\r\n        if(res.code == 1000){\r\n            _this.$message({\r\n              type: 'success',\r\n              message: '上传成功!'\r\n            });\r\n            this.fileList.push({name:res.data,url:this.$store.state.configure.HOST + res.message})\r\n            this.form.video = res.message\r\n            this.form.videoName = res.data\r\n        }else{\r\n          _this.$notify.error({\r\n            title: '错误',\r\n            message: res.message\r\n          });\r\n        }\r\n      },\r\n      handleRemove(file, fileList) {\r\n        this.form.video = \"\"\r\n        this.fileList = []\r\n      },\r\n      handleFileSuccess(res) {\r\n        let _this = this;\r\n        if(res.code == 1000){\r\n            _this.$message({\r\n              type: 'success',\r\n              message: '上传成功!'\r\n            });\r\n            this.fileList1.push({name:res.data,url:this.$store.state.configure.HOST + res.message})\r\n            this.form.courseware = res.message\r\n            this.form.coursewareName = res.data\r\n        }else{\r\n          _this.$notify.error({\r\n            title: '错误',\r\n            message: res.message\r\n          });\r\n        }\r\n      },\r\n      handleFileRemove(file, fileList) {\r\n        this.form.courseware = \"\"\r\n        this.fileList1 = []\r\n      },\r\n      getApeTaskList() {\r\n          getApeTaskList().then(res => {\r\n              if(res.code == 1000) {\r\n                this.task = res.data;\r\n              } else {\r\n                this.$notify.error({\r\n                  title: '错误',\r\n                  message: res.message\r\n                });\r\n              }\r\n          })\r\n      },\r\n      getApeTaskByTeacherId() {\r\n        getApeTaskByTeacherId().then(res => {\r\n              if(res.code == 1000) {\r\n                this.task = res.data;\r\n              } else {\r\n                this.$notify.error({\r\n                  title: '错误',\r\n                  message: res.message\r\n                });\r\n              }\r\n          })\r\n      },\r\n      submit() {\r\n        this.$refs[\"ruleForm\"].validate((valid) => {\r\n          if (valid) {\r\n            editApeChapter(this.form).then(res => {\r\n              if(res.code == 1000) {\r\n                this.$notify.success({\r\n                  title: '成功',\r\n                  message: \"保存成功\"\r\n                });\r\n                this.handleClose();\r\n              } else {\r\n                this.$notify.error({\r\n                  title: '错误',\r\n                  message: res.message\r\n                });\r\n              }\r\n            })\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      handleClose() {\r\n        this.fileList = []\r\n        this.fileList1 = []\r\n        this.$emit(\"updateFalse\")\r\n      },\r\n     \r\n    },\r\n    created() {\r\n     \r\n    },\r\n    mounted() {\r\n      if(this.flag == 2) {\r\n        this.getApeTaskByTeacherId()\r\n      } else {\r\n        this.getApeTaskList()\r\n      }\r\n    },\r\n    watch: {\r\n      updateId(newVal) {\r\n        if(newVal) {\r\n          getApeChapterById({id:newVal}).then(res => {\r\n            if(res.code == 1000) {\r\n              this.form = res.data\r\n              this.fileList.push({name:this.form.videoName,url:this.$store.state.configure.HOST + this.form.video})\r\n              if (this.form.coursewareName) {\r\n                this.fileList1.push({name:this.form.coursewareName,url:this.$store.state.configure.HOST + this.form.courseware})\r\n              }\r\n            } else {\r\n              this.$notify.error({\r\n                title: '错误',\r\n                message: res.message\r\n              });\r\n            }\r\n          })\r\n        }\r\n      },\r\n      updateVisible(newVal) {\r\n        if(newVal) {\r\n          if(this.taskId) {\r\n            this.form.taskId = this.taskId\r\n          }\r\n        }\r\n      }\r\n    }\r\n }\r\n</script>\r\n\r\n<style scoped>\r\n  .el-col {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      margin-top: 12px\r\n  }\r\n  .search-title {\r\n      font-family: '黑体';\r\n      float: right;\r\n      white-space: nowrap;\r\n      font-size: 14px;\r\n      width: 84px;\r\n      text-align: right;\r\n  }\r\n  .el-tree {\r\n      border: 1px solid #BDC1C9;\r\n  }\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}