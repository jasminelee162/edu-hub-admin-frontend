{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { uploadTemplate, getTemplates, deleteTemplate, getTemplateContent } from '../../../api/api';\nimport { renderAsync } from 'docx-preview';\nexport default {\n  data() {\n    return {\n      loading: true,\n      selected: [],\n      search: {\n        name: \"\",\n        dateRange: [],\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      tableData: [],\n      previewDialogVisible: false,\n      previewFileType: '',\n      previewFileBlob: null,\n      previewDocxHtml: ''\n    };\n  },\n  methods: {\n    // 表格头部样式\n    tableHeaderStyle() {\n      return {\n        'color': '#4A2B90',\n        'background-color': '#ECE9F4',\n        'font-weight': 'bold',\n        'border-bottom': '1px solid #7B68EE'\n      };\n    },\n    // 表格行样式\n    tableRowStyle() {\n      return {\n        'color': '#5F4B8B',\n        'font-size': '14px',\n        'border-bottom': '1px solid #F0EEF7'\n      };\n    },\n    // 上传前校验\n    beforeUpload(file) {\n      const isLt10M = file.size / 1024 / 1024 < 10;\n      if (!isLt10M) {\n        this.$message.error('上传文件大小不能超过10MB!');\n        return false;\n      }\n\n      // 检查文件类型\n      const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'image/jpeg', 'image/png'];\n      if (!allowedTypes.includes(file.type)) {\n        this.$message.error('只支持上传PDF、Word、Excel、PPT、JPG和PNG文件!');\n        return false;\n      }\n      return true;\n    },\n    // 文件上传方法（完整实现）\n    uploadFile({\n      file,\n      onProgress,\n      onSuccess,\n      onError\n    }) {\n      const formData = new FormData();\n      formData.append('file', file); // ✅ 关键点：必须是 file\n\n      uploadTemplate(formData, {\n        // headers: { 'Content-Type': 'multipart/form-data' },\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          onProgress({\n            percent: percentCompleted\n          }); // 支持进度条\n        }\n      }).then(res => {\n        if (res.code === 1000) {\n          this.$notify.success({\n            title: '成功',\n            message: '上传成功'\n          });\n          this.query();\n          onSuccess(res); // ✅ 必须回调成功\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '上传失败'\n          });\n          onError(new Error(res.message || '上传失败')); // ✅ 回调失败\n        }\n      }).catch(error => {\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '上传失败'\n        });\n        onError(error); // ✅ 回调失败\n      });\n    },\n    // 查看内容 在线预览docx\n    viewContent(id) {\n      this.loading = true;\n      getTemplateContent({\n        id\n      }).then(res => {\n        this.loading = false;\n        if (res.code !== 1000) {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '获取内容失败'\n          });\n          return;\n        }\n        const template = this.tableData.find(item => item.id === id);\n        const data = res.data;\n        const fileType = (data.fileType || template?.fileType || '').toLowerCase().trim();\n        if (!data.fileContent) {\n          this.$message.error('文件内容为空');\n          return;\n        }\n        try {\n          const mimeType = this.getMimeType(fileType);\n          const blob = this.base64ToBlob(data.fileContent, mimeType);\n          this.previewFileType = fileType;\n          this.previewFileBlob = blob;\n          if (fileType === 'docx') {\n            const container = document.createElement('div');\n            renderAsync(blob, container, null).then(() => {\n              this.previewDocxHtml = container.innerHTML;\n              this.previewDialogVisible = true;\n            }).catch(err => {\n              console.error('DOCX 渲染失败', err);\n              this.$message.error('DOCX 文件预览失败');\n            });\n          } else {\n            this.previewDialogVisible = true;\n          }\n        } catch (e) {\n          console.error('预览出错:', e);\n          this.$notify.error({\n            title: '错误',\n            message: '文件处理失败: ' + e.message\n          });\n        }\n      }).catch(error => {\n        this.loading = false;\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '获取内容失败'\n        });\n      });\n    },\n    downloadBlob(blob) {\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'download';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n    },\n    //文件二进制转化\n    base64ToBlob(base64Data, mimeType = '') {\n      // 移除可能存在的Base64前缀\n      const base64WithoutPrefix = base64Data.replace(/^data:\\w+\\/\\w+;base64,/, '');\n      const byteCharacters = atob(base64WithoutPrefix);\n      const byteArrays = [];\n      for (let offset = 0; offset < byteCharacters.length; offset += 512) {\n        const slice = byteCharacters.slice(offset, offset + 512);\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n          byteNumbers[i] = slice.charCodeAt(i);\n        }\n        byteArrays.push(new Uint8Array(byteNumbers));\n      }\n      return new Blob(byteArrays, {\n        type: mimeType\n      });\n    },\n    getMimeType(fileType) {\n      const map = {\n        pdf: 'application/pdf',\n        jpg: 'image/jpeg',\n        jpeg: 'image/jpeg',\n        png: 'image/png',\n        txt: 'text/plain',\n        doc: 'application/msword',\n        docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        ppt: 'application/vnd.ms-powerpoint',\n        pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n        xls: 'application/vnd.ms-excel',\n        xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        gif: 'image/gif',\n        svg: 'image/svg+xml',\n        mp4: 'video/mp4',\n        webm: 'video/webm'\n      };\n      return map[fileType] || 'application/octet-stream';\n    },\n    //pptx excel docx预览\n    showDocx(fileContentBase64) {\n      const blob = this.base64ToBlob(fileContentBase64, 'application/vnd.openxmlformats-officedocument.wordprocessingml.document');\n      const container = document.createElement('div');\n      container.style.cssText = `\n        width: 100%;\n        height: 90vh;\n        margin: 0 auto;\n        overflow: auto;\n        padding: 20px;\n        box-shadow: 0 0 10px rgba(0,0,0,0.1);\n      `;\n\n      // 创建新窗口\n      const win = window.open('', '_blank');\n      win.document.title = '文档预览';\n      win.document.body.style.margin = '0';\n      win.document.body.appendChild(container);\n\n      // 添加加载状态\n      container.innerHTML = '<div style=\"text-align:center;padding:50px\">正在加载文档...</div>';\n      renderAsync(blob, container, null, {\n        className: \"docx-viewer\",\n        // 添加自定义class\n        inWrapper: true,\n        // 启用包裹容器\n        ignoreWidth: false,\n        ignoreHeight: false,\n        ignoreFonts: false\n      }).catch(error => {\n        console.error('DOCX渲染失败:', error);\n        container.innerHTML = '<div style=\"color:red\">文档预览失败，请下载后查看</div>';\n      });\n    },\n    // 下载文件\n    downloadFile(id) {\n      this.loading = true;\n      getTemplateContent({\n        id\n      }).then(res => {\n        this.loading = false;\n        if (res.code === 1000) {\n          const template = this.tableData.find(item => item.id === id);\n          const base64 = res.data.fileContent;\n          const mimeType = this.getMimeType(template.fileType);\n          const blob = this.base64ToBlob(base64, mimeType);\n          const url = URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = template.name || 'download';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          URL.revokeObjectURL(url);\n          this.$notify.success({\n            title: '成功',\n            message: '文件下载已开始',\n            duration: 2000\n          });\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '下载失败'\n          });\n        }\n      }).catch(error => {\n        this.loading = false;\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '下载失败'\n        });\n      });\n    },\n    // 搜索\n    searchPage() {\n      this.search.pageNumber = 1;\n      this.query();\n    },\n    // 查询数据\n    query() {\n      this.loading = true;\n      const params = {\n        ...this.search,\n        startDate: this.search.dateRange ? this.search.dateRange[0] : '',\n        endDate: this.search.dateRange ? this.search.dateRange[1] : ''\n      };\n      delete params.dateRange;\n      getTemplates(params).then(res => {\n        this.loading = false;\n        if (res.code === 1000) {\n          this.tableData = res.data.records || [];\n          this.total = res.data.total || 0;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '获取数据失败'\n          });\n        }\n      }).catch(error => {\n        this.loading = false;\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '获取数据失败'\n        });\n      });\n    },\n    // 重置搜索\n    refresh() {\n      this.search.name = \"\";\n      this.search.dateRange = [];\n      this.query();\n    },\n    // 分页变化\n    handleCurrentChange(val) {\n      this.search.pageNumber = val;\n      this.query();\n    },\n    // 每页条数变化\n    handleSizeChange(val) {\n      this.search.pageSize = val;\n      this.query();\n    },\n    // 选择变化\n    handleSelectionChange(val) {\n      this.selected = val.map(item => item.id);\n    },\n    // 批量删除\n    deleteDataBtn() {\n      if (this.selected.length === 0) {\n        this.$message.warning('请至少选择一条数据');\n        return;\n      }\n      this.$confirm(`确定删除选中的 ${this.selected.length} 条数据?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        customClass: 'tech-message-box',\n        beforeClose: (action, instance, done) => {\n          if (action === 'confirm') {\n            instance.confirmButtonLoading = true;\n            this.deleteData(this.selected) // 直接传递数组\n            .finally(() => {\n              instance.confirmButtonLoading = false;\n              done();\n            });\n          } else {\n            done();\n          }\n        }\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n    // 删除数据\n    deleteData(ids) {\n      // 确保ids是数组格式\n      const idsArray = Array.isArray(ids) ? ids : [ids];\n      return deleteTemplate(idsArray).then(res => {\n        if (res.code === 1000) {\n          this.$message({\n            type: 'success',\n            message: '删除成功!',\n            customClass: 'tech-message',\n            duration: 2000\n          });\n          this.search.pageNumber = 1;\n          this.query();\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '删除失败'\n          });\n        }\n      }).catch(error => {\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '删除失败'\n        });\n      });\n    }\n  },\n  mounted() {\n    this.query();\n  }\n};","map":{"version":3,"names":["uploadTemplate","getTemplates","deleteTemplate","getTemplateContent","renderAsync","data","loading","selected","search","name","dateRange","pageNumber","pageSize","total","tableData","previewDialogVisible","previewFileType","previewFileBlob","previewDocxHtml","methods","tableHeaderStyle","tableRowStyle","beforeUpload","file","isLt10M","size","$message","error","allowedTypes","includes","type","uploadFile","onProgress","onSuccess","onError","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","percent","then","res","code","$notify","success","title","message","query","Error","catch","viewContent","id","template","find","item","fileType","toLowerCase","trim","fileContent","mimeType","getMimeType","blob","base64ToBlob","container","document","createElement","innerHTML","err","console","e","downloadBlob","url","URL","createObjectURL","link","href","download","body","appendChild","click","removeChild","revokeObjectURL","base64Data","base64WithoutPrefix","replace","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","push","Uint8Array","Blob","map","pdf","jpg","jpeg","png","txt","doc","docx","ppt","pptx","xls","xlsx","gif","svg","mp4","webm","showDocx","fileContentBase64","style","cssText","win","window","open","margin","className","inWrapper","ignoreWidth","ignoreHeight","ignoreFonts","downloadFile","base64","duration","searchPage","params","startDate","endDate","records","refresh","handleCurrentChange","val","handleSizeChange","handleSelectionChange","deleteDataBtn","warning","$confirm","confirmButtonText","cancelButtonText","customClass","beforeClose","action","instance","done","confirmButtonLoading","deleteData","finally","info","ids","idsArray","isArray","mounted"],"sources":["src/views/system/template/template.vue"],"sourcesContent":["<template>\r\n  <!-- 完整模板部分保持不变 -->\r\n  <div class=\"template-management\">\r\n    <!-- 搜索区域 -->\r\n    <div class=\"search-table\">\r\n      <!-- 搜索表单 -->\r\n      <div class=\"search\">\r\n        <el-row :gutter=\"15\" style=\"padding:15px\">\r\n          <!-- 资料名称搜索 -->\r\n          <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"8\">\r\n            <div class=\"search-item\">\r\n              <span class=\"search-title\">\r\n                <i class=\"el-icon-document\"></i> 资料名称:\r\n              </span>\r\n              <el-input\r\n                size=\"small\"\r\n                placeholder=\"请输入资料名称\"\r\n                v-model=\"search.name\"\r\n                class=\"tech-input\">\r\n                <i slot=\"prefix\" class=\"el-icon-edit-outline\"></i>\r\n              </el-input>\r\n            </div>\r\n          </el-col>\r\n          \r\n          <!-- 创建时间搜索 -->\r\n          <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"8\">\r\n            <div class=\"search-item\">\r\n              <span class=\"search-title\">\r\n                <i class=\"el-icon-date\"></i> 创建时间:\r\n              </span>\r\n              <el-date-picker\r\n                size=\"small\"\r\n                v-model=\"search.dateRange\"\r\n                type=\"daterange\"\r\n                range-separator=\"至\"\r\n                start-placeholder=\"开始日期\"\r\n                end-placeholder=\"结束日期\"\r\n                value-format=\"yyyy-MM-dd\"\r\n                class=\"tech-date-picker\">\r\n              </el-date-picker>\r\n            </div>\r\n          </el-col>\r\n          \r\n          <!-- 操作按钮 -->\r\n          <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"8\">\r\n            <div class=\"search-actions\">\r\n              <el-button \r\n                size=\"small\" \r\n                icon=\"el-icon-search\" \r\n                type=\"primary\" \r\n                @click=\"searchPage\"\r\n                class=\"search-btn\">\r\n                查询\r\n              </el-button>\r\n              <el-button \r\n                size=\"small\" \r\n                icon=\"el-icon-refresh\" \r\n                @click=\"refresh\"\r\n                class=\"reset-btn\">\r\n                重置\r\n              </el-button>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n      </div>\r\n      \r\n      <!-- 表格区域 -->\r\n      <div class=\"table\">\r\n        <!-- 操作栏 -->\r\n        <div class=\"action-bar\">\r\n        <el-upload\r\n          class=\"upload-btn\"\r\n          action=\"\"\r\n          :show-file-list=\"false\"\r\n          :before-upload=\"beforeUpload\"\r\n          :http-request=\"uploadFile\">\r\n          <el-button \r\n            type=\"primary\" \r\n            size=\"small\" \r\n            icon=\"el-icon-upload\"\r\n            class=\"action-btn upload-btn\">\r\n            上传资料\r\n          </el-button>\r\n        </el-upload>\r\n          <el-button \r\n            type=\"danger\" \r\n            size=\"small\" \r\n            icon=\"el-icon-delete\" \r\n            :disabled=\"selected.length <= 0\"\r\n            @click=\"deleteDataBtn\"\r\n            class=\"action-btn delete-btn\">\r\n            删除\r\n          </el-button>\r\n        </div>\r\n        \r\n        <!-- 数据表格 -->\r\n        <el-table\r\n          v-loading=\"loading\"\r\n          :data=\"tableData\"\r\n          :header-cell-style=\"tableHeaderStyle\"\r\n          :row-style=\"tableRowStyle\"\r\n          @selection-change=\"handleSelectionChange\"\r\n          stripe\r\n          class=\"tech-table\">\r\n          <!-- 选择列 -->\r\n          <el-table-column\r\n            type=\"selection\"\r\n            width=\"55\"\r\n            align=\"center\">\r\n          </el-table-column>\r\n          \r\n          <!-- 资料名称列 -->\r\n          <el-table-column\r\n            prop=\"name\"\r\n            label=\"资料名称\"\r\n            width=\"200\">\r\n            <template #default=\"{row}\">\r\n              <div class=\"name-cell\">\r\n                <i class=\"el-icon-document\" style=\"color:#7B68EE; margin-right:8px\"></i>\r\n                <span>{{ row.name }}</span>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          \r\n          <!-- 文件类型列 -->\r\n          <el-table-column\r\n            prop=\"fileType\"\r\n            label=\"文件类型\"\r\n            width=\"120\">\r\n            <template #default=\"{row}\">\r\n              <div class=\"type-cell\">\r\n                <i class=\"el-icon-files\" style=\"color:#9370DB; margin-right:8px\"></i>\r\n                <span>{{ row.fileType }}</span>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          \r\n          <!-- 创建时间列 -->\r\n          <el-table-column\r\n            prop=\"createdAt\"\r\n            label=\"创建时间\"\r\n            width=\"180\">\r\n            <template #default=\"{row}\">\r\n              <div class=\"time-cell\">\r\n                <i class=\"el-icon-time\" style=\"color:#A5A4BF; margin-right:8px\"></i>\r\n                <span>{{ row.createdAt }}</span>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          \r\n          <!-- 分享权限列 -->\r\n          <el-table-column\r\n            prop=\"sharePermission\"\r\n            label=\"分享权限\"\r\n            width=\"120\">\r\n            <template #default=\"{row}\">\r\n              <div class=\"permission-cell\">\r\n                <el-tag v-if=\"row.sharePermission === 'VIEW'\" type=\"success\" effect=\"dark\">\r\n                  <i class=\"el-icon-view\"></i> 可查看\r\n                </el-tag>\r\n                <el-tag v-if=\"row.sharePermission === 'EDIT'\" type=\"warning\" effect=\"dark\">\r\n                  <i class=\"el-icon-edit\"></i> 可编辑\r\n                </el-tag>\r\n                <el-tag v-if=\"row.sharePermission === 'NONE'\" type=\"danger\" effect=\"dark\">\r\n                  <i class=\"el-icon-close\"></i> 不可见\r\n                </el-tag>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n          \r\n          <!-- 操作列 -->\r\n          <el-table-column\r\n            label=\"操作\"\r\n            width=\"300\">\r\n            <template #default=\"{row}\">\r\n              <div class=\"action-buttons\">\r\n                <el-button \r\n                  size=\"mini\" \r\n                  type=\"primary\" \r\n                  @click=\"viewContent(row.id)\"\r\n                  class=\"action-btn view-btn\">\r\n                  <i class=\"el-icon-view\"></i> 查看\r\n                </el-button>\r\n                \r\n                <el-button \r\n                  size=\"mini\" \r\n                  type=\"success\" \r\n                  @click=\"downloadFile(row.id)\"\r\n                  class=\"action-btn download-btn\">\r\n                  <i class=\"el-icon-download\"></i> 下载\r\n                </el-button>\r\n                \r\n                <el-popconfirm\r\n                  title=\"确认删除此资料？\"\r\n                  @confirm=\"deleteData(row.id)\"\r\n                  confirm-button-text=\"确认\"\r\n                  cancel-button-text=\"取消\"\r\n                  icon=\"el-icon-warning\"\r\n                  icon-color=\"#7B68EE\">\r\n                  <el-button \r\n                    size=\"mini\"\r\n                    type=\"danger\"\r\n                    slot=\"reference\"\r\n                    class=\"action-btn delete-btn\">\r\n                    <i class=\"el-icon-delete\"></i> 删除\r\n                  </el-button>\r\n                </el-popconfirm>\r\n              </div>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        \r\n        <!-- 分页 -->\r\n        <el-pagination\r\n          background\r\n          layout=\"total, sizes, prev, pager, next, jumper\"\r\n          :page-sizes=\"[10, 20, 50, 100]\"\r\n          :page-size=\"search.pageSize\"\r\n          :current-page=\"search.pageNumber\"\r\n          @size-change=\"handleSizeChange\"\r\n          @current-change=\"handleCurrentChange\"\r\n          :total=\"total\"\r\n          class=\"tech-pagination\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n    <el-dialog\r\n  :visible.sync=\"previewDialogVisible\"\r\n  title=\"文件预览\"\r\n  width=\"80%\"\r\n  top=\"5vh\"\r\n  :close-on-click-modal=\"false\"\r\n  append-to-body\r\n>\r\n  <!-- 预览内容区 -->\r\n  <div v-if=\"previewFileType === 'docx'\" v-html=\"previewDocxHtml\"></div>\r\n\r\n  <div v-else-if=\"['jpg', 'jpeg', 'png', 'gif'].includes(previewFileType)\">\r\n    <img :src=\"URL.createObjectURL(previewFileBlob)\" style=\"max-width: 100%\" />\r\n  </div>\r\n\r\n  <div v-else-if=\"previewFileType === 'pdf'\">\r\n    <iframe :src=\"URL.createObjectURL(previewFileBlob)\" width=\"100%\" height=\"600px\" style=\"border:none;\"></iframe>\r\n  </div>\r\n\r\n  <div v-else>\r\n    <el-alert\r\n      title=\"暂不支持该文件类型在线预览，请下载查看\"\r\n      type=\"warning\"\r\n      show-icon>\r\n    </el-alert>\r\n    <el-button type=\"primary\" @click=\"downloadBlob(previewFileBlob)\">立即下载</el-button>\r\n  </div>\r\n\r\n  <template #footer>\r\n    <el-button @click=\"previewDialogVisible = false\">关闭</el-button>\r\n  </template>\r\n</el-dialog>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { uploadTemplate, getTemplates, deleteTemplate, getTemplateContent } from '../../../api/api'\r\nimport { renderAsync } from 'docx-preview'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loading: true,\r\n      selected: [],\r\n      search: {\r\n        name: \"\",\r\n        dateRange: [],\r\n        pageNumber: 1,\r\n        pageSize: 10\r\n      },\r\n      total: 0,\r\n      tableData: [],\r\n      previewDialogVisible: false,\r\n      previewFileType: '',\r\n      previewFileBlob: null,\r\n      previewDocxHtml: '',\r\n    }\r\n  },\r\n  methods: {\r\n    // 表格头部样式\r\n    tableHeaderStyle() {\r\n      return {\r\n        'color': '#4A2B90',\r\n        'background-color': '#ECE9F4',\r\n        'font-weight': 'bold',\r\n        'border-bottom': '1px solid #7B68EE'\r\n      }\r\n    },\r\n    \r\n    // 表格行样式\r\n    tableRowStyle() {\r\n      return {\r\n        'color': '#5F4B8B',\r\n        'font-size': '14px',\r\n        'border-bottom': '1px solid #F0EEF7'\r\n      }\r\n    },\r\n    \r\n    // 上传前校验\r\n    beforeUpload(file) {\r\n      const isLt10M = file.size / 1024 / 1024 < 10\r\n      if (!isLt10M) {\r\n        this.$message.error('上传文件大小不能超过10MB!')\r\n        return false\r\n      }\r\n      \r\n      // 检查文件类型\r\n      const allowedTypes = [\r\n        'application/pdf',\r\n        'application/msword',\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        'application/vnd.ms-powerpoint',\r\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n        'image/jpeg',\r\n        'image/png'\r\n      ]\r\n      \r\n      if (!allowedTypes.includes(file.type)) {\r\n        this.$message.error('只支持上传PDF、Word、Excel、PPT、JPG和PNG文件!')\r\n        return false\r\n      }\r\n      \r\n      return true\r\n    },\r\n    \r\n    // 文件上传方法（完整实现）\r\n    uploadFile({ file, onProgress, onSuccess, onError }) {\r\n      const formData = new FormData();\r\n      formData.append('file', file); // ✅ 关键点：必须是 file\r\n\r\n      uploadTemplate(formData, {\r\n        // headers: { 'Content-Type': 'multipart/form-data' },\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          onProgress({ percent: percentCompleted }); // 支持进度条\r\n        }\r\n      }).then(res => {\r\n        if (res.code === 1000) {\r\n          this.$notify.success({ title: '成功', message: '上传成功' });\r\n          this.query();\r\n          onSuccess(res); // ✅ 必须回调成功\r\n        } else {\r\n          this.$notify.error({ title: '错误', message: res.message || '上传失败' });\r\n          onError(new Error(res.message || '上传失败')); // ✅ 回调失败\r\n        }\r\n      }).catch(error => {\r\n        this.$notify.error({ title: '错误', message: error.message || '上传失败' });\r\n        onError(error); // ✅ 回调失败\r\n      });\r\n    },\r\n    \r\n    // 查看内容 在线预览docx\r\n    viewContent(id) {\r\n      this.loading = true;\r\n      getTemplateContent({ id }).then(res => {\r\n        this.loading = false;\r\n\r\n        if (res.code !== 1000) {\r\n          this.$notify.error({ title: '错误', message: res.message || '获取内容失败' });\r\n          return;\r\n        }\r\n\r\n        const template = this.tableData.find(item => item.id === id);\r\n        const data = res.data;\r\n        const fileType = (data.fileType || template?.fileType || '').toLowerCase().trim();\r\n\r\n        if (!data.fileContent) {\r\n          this.$message.error('文件内容为空');\r\n          return;\r\n        }\r\n\r\n        try {\r\n          const mimeType = this.getMimeType(fileType);\r\n          const blob = this.base64ToBlob(data.fileContent, mimeType);\r\n\r\n          this.previewFileType = fileType;\r\n          this.previewFileBlob = blob;\r\n\r\n          if (fileType === 'docx') {\r\n            const container = document.createElement('div');\r\n            renderAsync(blob, container, null).then(() => {\r\n              this.previewDocxHtml = container.innerHTML;\r\n              this.previewDialogVisible = true;\r\n            }).catch(err => {\r\n              console.error('DOCX 渲染失败', err);\r\n              this.$message.error('DOCX 文件预览失败');\r\n            });\r\n          } else {\r\n            this.previewDialogVisible = true;\r\n          }\r\n\r\n        } catch (e) {\r\n          console.error('预览出错:', e);\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: '文件处理失败: ' + e.message\r\n          });\r\n        }\r\n\r\n      }).catch(error => {\r\n        this.loading = false;\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: error.message || '获取内容失败'\r\n        });\r\n      });\r\n    },\r\n\r\n    downloadBlob(blob) {\r\n          const url = URL.createObjectURL(blob);\r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.download = 'download';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          URL.revokeObjectURL(url);\r\n    },\r\n\r\n\r\n    //文件二进制转化\r\n    base64ToBlob(base64Data, mimeType = '') {\r\n        // 移除可能存在的Base64前缀\r\n      const base64WithoutPrefix = base64Data.replace(/^data:\\w+\\/\\w+;base64,/, '');\r\n      const byteCharacters = atob(base64WithoutPrefix);\r\n      const byteArrays = [];\r\n\r\n      for (let offset = 0; offset < byteCharacters.length; offset += 512) {\r\n        const slice = byteCharacters.slice(offset, offset + 512);\r\n        const byteNumbers = new Array(slice.length);\r\n        for (let i = 0; i < slice.length; i++) {\r\n          byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n        byteArrays.push(new Uint8Array(byteNumbers));\r\n      }\r\n\r\n      return new Blob(byteArrays, { type: mimeType });\r\n    },\r\n\r\n    getMimeType(fileType) {\r\n      const map = {\r\n        pdf: 'application/pdf',\r\n        jpg: 'image/jpeg',\r\n        jpeg: 'image/jpeg',\r\n        png: 'image/png',\r\n        txt: 'text/plain',\r\n        doc: 'application/msword',\r\n        docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n        ppt: 'application/vnd.ms-powerpoint',\r\n        pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n        xls: 'application/vnd.ms-excel',\r\n        xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        gif: 'image/gif',\r\n        svg: 'image/svg+xml',\r\n        mp4: 'video/mp4',\r\n        webm: 'video/webm'\r\n      };\r\n      return map[fileType] || 'application/octet-stream';\r\n    },\r\n\r\n\r\n    //pptx excel docx预览\r\n    showDocx(fileContentBase64) {\r\n      const blob = this.base64ToBlob(\r\n        fileContentBase64, \r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n      );\r\n      \r\n      const container = document.createElement('div');\r\n      container.style.cssText = `\r\n        width: 100%;\r\n        height: 90vh;\r\n        margin: 0 auto;\r\n        overflow: auto;\r\n        padding: 20px;\r\n        box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n      `;\r\n      \r\n      // 创建新窗口\r\n      const win = window.open('', '_blank');\r\n      win.document.title = '文档预览';\r\n      win.document.body.style.margin = '0';\r\n      win.document.body.appendChild(container);\r\n      \r\n      // 添加加载状态\r\n      container.innerHTML = '<div style=\"text-align:center;padding:50px\">正在加载文档...</div>';\r\n      \r\n      renderAsync(blob, container, null, {\r\n        className: \"docx-viewer\", // 添加自定义class\r\n        inWrapper: true,         // 启用包裹容器\r\n        ignoreWidth: false,\r\n        ignoreHeight: false,\r\n        ignoreFonts: false\r\n      }).catch(error => {\r\n        console.error('DOCX渲染失败:', error);\r\n        container.innerHTML = '<div style=\"color:red\">文档预览失败，请下载后查看</div>';\r\n      });\r\n    },\r\n\r\n\r\n    \r\n    // 下载文件\r\n    downloadFile(id) {\r\n      this.loading = true;\r\n      getTemplateContent({ id }).then(res => {\r\n        this.loading = false;\r\n        if (res.code === 1000) {\r\n          const template = this.tableData.find(item => item.id === id);\r\n          const base64 = res.data.fileContent;\r\n          const mimeType = this.getMimeType(template.fileType);\r\n          const blob = this.base64ToBlob(base64, mimeType);\r\n          const url = URL.createObjectURL(blob);\r\n          \r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.download = template.name || 'download';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          URL.revokeObjectURL(url);\r\n          \r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '文件下载已开始',\r\n            duration: 2000\r\n          });\r\n        } else {\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: res.message || '下载失败'\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        this.loading = false;\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: error.message || '下载失败'\r\n        });\r\n      });\r\n    },\r\n\r\n    \r\n    // 搜索\r\n    searchPage() {\r\n      this.search.pageNumber = 1\r\n      this.query()\r\n    },\r\n    \r\n    // 查询数据\r\n    query() {\r\n      this.loading = true\r\n      const params = {\r\n        ...this.search,\r\n        startDate: this.search.dateRange ? this.search.dateRange[0] : '',\r\n        endDate: this.search.dateRange ? this.search.dateRange[1] : ''\r\n      }\r\n      delete params.dateRange\r\n      \r\n      getTemplates(params).then(res => {\r\n        this.loading = false\r\n        if (res.code === 1000) {\r\n          this.tableData = res.data.records || []\r\n          this.total = res.data.total || 0\r\n        } else {\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: res.message || '获取数据失败'\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        this.loading = false\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: error.message || '获取数据失败'\r\n        })\r\n      })\r\n    },\r\n    \r\n    // 重置搜索\r\n    refresh() {\r\n      this.search.name = \"\"\r\n      this.search.dateRange = []\r\n      this.query()\r\n    },\r\n    \r\n    // 分页变化\r\n    handleCurrentChange(val) {\r\n      this.search.pageNumber = val\r\n      this.query()\r\n    },\r\n    \r\n    // 每页条数变化\r\n    handleSizeChange(val) {\r\n      this.search.pageSize = val\r\n      this.query()\r\n    },\r\n    \r\n    // 选择变化\r\n    handleSelectionChange(val) {\r\n      this.selected = val.map(item => item.id)\r\n    },\r\n    \r\n    // 批量删除\r\n    deleteDataBtn() {\r\n      if (this.selected.length === 0) {\r\n        this.$message.warning('请至少选择一条数据')\r\n        return\r\n      }\r\n      \r\n      this.$confirm(`确定删除选中的 ${this.selected.length} 条数据?`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        customClass: 'tech-message-box',\r\n        beforeClose: (action, instance, done) => {\r\n          if (action === 'confirm') {\r\n            instance.confirmButtonLoading = true\r\n            this.deleteData(this.selected)  // 直接传递数组\r\n              .finally(() => {\r\n                instance.confirmButtonLoading = false\r\n                done()\r\n              })\r\n          } else {\r\n            done()\r\n          }\r\n        }\r\n      }).catch(() => {\r\n        this.$message.info('已取消删除')\r\n      })\r\n    },\r\n    \r\n    // 删除数据\r\n    deleteData(ids) {\r\n      // 确保ids是数组格式\r\n      const idsArray = Array.isArray(ids) ? ids : [ids];\r\n      \r\n      return deleteTemplate(idsArray).then(res => {\r\n        if (res.code === 1000) {\r\n          this.$message({\r\n            type: 'success',\r\n            message: '删除成功!',\r\n            customClass: 'tech-message',\r\n            duration: 2000\r\n          })\r\n          this.search.pageNumber = 1\r\n          this.query()\r\n        } else {\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: res.message || '删除失败'\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: error.message || '删除失败'\r\n        })\r\n      })\r\n    },\r\n  },\r\n\r\n  \r\n  mounted() {\r\n    this.query()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.template-management {\r\n  padding: 20px;\r\n  background-color: #F8F7FC;\r\n}\r\n\r\n.search-table {\r\n  width: 100%;\r\n}\r\n\r\n.search {\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 12px rgba(123, 104, 238, 0.1);\r\n}\r\n\r\n.search-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.search-title {\r\n  font-size: 14px;\r\n  color: #4A2B90;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.search-title i {\r\n  margin-right: 6px;\r\n  color: #7B68EE;\r\n}\r\n\r\n.search-actions {\r\n  display: flex;\r\n  align-items: flex-end;\r\n  height: 100%;\r\n}\r\n\r\n.table {\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  box-shadow: 0 2px 12px rgba(123, 104, 238, 0.1);\r\n}\r\n\r\n.action-bar {\r\n  padding: 10px 0 15px 10px;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #F0EEF7;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.name-cell, .type-cell, .time-cell, .permission-cell {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n}\r\n\r\n.action-btn {\r\n  border-radius: 15px;\r\n  padding: 6px 10px;\r\n  font-size: 12px;\r\n  min-width: 60px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.action-btn i {\r\n  margin-right: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.upload-btn {\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 全局样式 */\r\n.tech-input .el-input__inner {\r\n  border-radius: 20px;\r\n  border: 1px solid #D8D8E5;\r\n  color: #5F4B8B;\r\n  background-color: #F9F8FD;\r\n  padding-left: 30px;\r\n}\r\n\r\n.tech-input .el-input__prefix {\r\n  left: 5px;\r\n  color: #7B68EE;\r\n}\r\n\r\n.tech-date-picker .el-input__inner {\r\n  border-radius: 20px;\r\n  border: 1px solid #D8D8E5;\r\n  color: #5F4B8B;\r\n  background-color: #F9F8FD;\r\n}\r\n\r\n.tech-date-picker .el-range-separator {\r\n  color: #5F4B8B;\r\n}\r\n\r\n.search-btn {\r\n  background: linear-gradient(135deg, #7B68EE, #9370DB);\r\n  border: none;\r\n  border-radius: 20px;\r\n  color: white;\r\n  padding: 7px 15px;\r\n}\r\n\r\n.reset-btn {\r\n  border-radius: 20px;\r\n  color: #7B68EE;\r\n  border: 1px solid #D8D8E5;\r\n  padding: 7px 15px;\r\n}\r\n\r\n.action-btn.upload-btn {\r\n  background: linear-gradient(135deg, #7B68EE, #9370DB);\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.action-btn.view-btn {\r\n  background: linear-gradient(135deg, #409EFF, #3A8BDF);\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.action-btn.download-btn {\r\n  background: linear-gradient(135deg, #67C23A, #85CE61);\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.action-btn.delete-btn {\r\n  background: linear-gradient(135deg, #F56C6C, #F78989);\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.tech-table {\r\n  border-radius: 8px;\r\n  border: 1px solid #ECE9F4;\r\n}\r\n\r\n.tech-table .el-table__body tr:hover>td {\r\n  background-color: #F5F2FF !important;\r\n}\r\n\r\n.tech-pagination .el-pagination.is-background .el-pager li:not(.disabled).active {\r\n  background-color: #7B68EE;\r\n  color: white;\r\n  border-radius: 50%;\r\n}\r\n\r\n.tech-message-box {\r\n  border-radius: 12px;\r\n  border: 1px solid #7B68EE;\r\n}\r\n\r\n.tech-message-box .el-message-box__title {\r\n  color: #4A2B90;\r\n  font-weight: bold;\r\n}\r\n\r\n.tech-message {\r\n  border-radius: 20px;\r\n  background-color: #F5F2FF;\r\n  border: none;\r\n  box-shadow: 0 2px 12px 0 rgba(123, 104, 238, 0.2);\r\n}\r\n\r\n.tech-message .el-message__content {\r\n  color: #4A2B90;\r\n}\r\n\r\n.el-popconfirm__action {\r\n  text-align: center;\r\n}\r\n\r\n.el-popconfirm__action button {\r\n  border-radius: 15px;\r\n  padding: 6px 12px;\r\n}\r\n\r\n.el-popconfirm__action button:first-child {\r\n  background: linear-gradient(135deg, #7B68EE, #9370DB);\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.el-popconfirm__action button:last-child {\r\n  color: #7B68EE;\r\n  border: 1px solid #D8D8E5;\r\n}\r\n\r\n.el-tag {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  padding: 0 8px;\r\n  height: 24px;\r\n  line-height: 24px;\r\n}\r\n\r\n.el-tag i {\r\n  margin-right: 4px;\r\n}\r\n\r\n.content-dialog {\r\n  border-radius: 12px;\r\n  border: 1px solid #7B68EE;\r\n  max-width: 80%;\r\n}\r\n\r\n.content-dialog .el-message-box__header {\r\n  background-color: #F5F2FF;\r\n  border-bottom: 1px solid #ECE9F4;\r\n}\r\n\r\n.content-dialog .el-message-box__title {\r\n  color: #4A2B90;\r\n  font-weight: bold;\r\n}\r\n\r\n.content-dialog .el-message-box__content {\r\n  max-height: 60vh;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}