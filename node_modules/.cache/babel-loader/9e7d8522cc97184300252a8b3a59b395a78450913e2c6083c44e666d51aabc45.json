{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { editHomework, getHomeworkById } from '../../../api/api';\nexport default {\n  data() {\n    return {\n      formLabelWidth: '80px',\n      form: {\n        chapterId: '',\n        chapterName: '',\n        title: '',\n        sort: '',\n        answer: '',\n        type: '0',\n        content: '',\n        score: '',\n        remark: ''\n      },\n      content: [{\n        value: '',\n        option: ''\n      }],\n      multiAnswer: [],\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入题目',\n          trigger: 'blur'\n        }],\n        sort: [{\n          required: true,\n          message: '请输入序号',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入分数',\n          trigger: 'blur'\n        }],\n        answer: [{\n          required: true,\n          message: '请输入答案',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择类型',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateVisible', 'updateId', 'chapterId'],\n  methods: {\n    addContent() {\n      const charCode = 65 + this.content.length;\n      this.content.push({\n        value: String.fromCharCode(charCode),\n        option: ''\n      });\n    },\n    minusContent(index) {\n      this.content.splice(index, 1);\n    },\n    submit() {\n      this.$refs['ruleForm'].validate(valid => {\n        if (!valid) return;\n        if (this.form.type == 0 || this.form.type == 1) {\n          for (let item of this.content) {\n            if (!item.value || !item.option) {\n              this.$message.warning('请完善选项及内容');\n              return;\n            }\n          }\n          this.form.content = JSON.stringify(this.content);\n        } else {\n          this.form.content = '';\n        }\n        if (this.form.type == 1) {\n          this.form.answer = this.multiAnswer.join(',');\n        }\n        editHomework(this.form).then(res => {\n          if (res.code === 1000) {\n            this.$notify.success({\n              title: '成功',\n              message: '保存成功'\n            });\n            this.handleClose();\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      });\n    },\n    handleClose() {\n      this.content = [{\n        value: '',\n        option: ''\n      }];\n      this.multiAnswer = [];\n      this.$emit('updateFalse');\n    }\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getHomeworkById({\n          id: newVal\n        }).then(res => {\n          if (res.code === 1000) {\n            this.form = res.data;\n            this.form.type = String(res.data.type);\n            this.content = this.form.content ? JSON.parse(this.form.content) : [{\n              value: '',\n              option: ''\n            }];\n            if (this.form.type == 1) {\n              this.multiAnswer = this.form.answer ? this.form.answer.split(',') : [];\n            }\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["editHomework","getHomeworkById","data","formLabelWidth","form","chapterId","chapterName","title","sort","answer","type","content","score","remark","value","option","multiAnswer","rules","required","message","trigger","props","methods","addContent","charCode","length","push","String","fromCharCode","minusContent","index","splice","submit","$refs","validate","valid","item","$message","warning","JSON","stringify","join","then","res","code","$notify","success","handleClose","error","$emit","watch","updateId","newVal","id","parse","split"],"sources":["src/components/system/homework/updateHomework.vue"],"sourcesContent":["<template>\n<div>\n  <el-dialog title=\"新增作业\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateVisible\" :before-close=\"handleClose\">\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n      <el-row :gutter=\"10\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n          <span class=\"search-title\">题目:</span>\n          <div style=\"width:100%\">\n            <el-form-item prop=\"title\" style=\"margin-bottom:0\">\n              <el-input v-model=\"form.title\" size=\"mini\" placeholder=\"请输入题目\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n          </div>\n        </el-col>\n\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n          <span class=\"search-title\">序号:</span>\n          <div style=\"width:100%\">\n            <el-form-item prop=\"sort\" style=\"margin-bottom:0\">\n              <el-input-number size=\"mini\" v-model=\"form.sort\" :min=\"1\" label=\"请输入序号\"></el-input-number>\n            </el-form-item>\n          </div>\n        </el-col>\n\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n          <span class=\"search-title\">类型:</span>\n          <div style=\"width:100%\">\n            <el-form-item prop=\"type\" style=\"margin-bottom:0\">\n              <el-select clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.type\" placeholder=\"请选择\">\n                <el-option label=\"单选\" value=\"0\"></el-option>\n                <el-option label=\"多选\" value=\"1\"></el-option>\n                <el-option label=\"填空\" value=\"2\"></el-option>\n                <el-option label=\"判断\" value=\"3\"></el-option>\n              </el-select>\n            </el-form-item>\n          </div>\n        </el-col>\n\n        <el-col v-if=\"form.type == 0 || form.type == 1\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n          <span class=\"search-title\">题目内容:</span>\n          <div style=\"width:100%\">\n            <el-form-item prop=\"content\" style=\"margin-bottom:0\">\n              <div class=\"content-item\" v-for=\"(item,index) in content\" :key=\"index\">\n                <div style=\"width:100px;margin-right:10px\">\n                  <el-input v-model=\"item.value\" size=\"mini\" placeholder=\"选项\" autocomplete=\"off\"></el-input>\n                </div>\n                <el-input v-model=\"item.option\" size=\"mini\" placeholder=\"选项内容\" autocomplete=\"off\"></el-input>\n                <div v-if=\"index == (content.length - 1)\" @click=\"addContent\" style=\"margin-left:10px\"><i class=\"el-icon-circle-plus-outline\"></i></div>\n                <div @click=\"minusContent(index)\" style=\"margin-left:10px\" v-if=\"index != 0\"><i class=\"el-icon-remove-outline\"></i></div>\n              </div>\n            </el-form-item>\n          </div>\n        </el-col>\n\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n          <span class=\"search-title\">答案:</span>\n          <div style=\"width:100%\">\n            <el-form-item prop=\"answer\" style=\"margin-bottom:0\">\n              <el-radio-group v-if=\"form.type == 0\" v-model=\"form.answer\" size=\"mini\">\n                <el-radio-button v-for=\"(item, index) in content\" :key=\"index\" :label=\"item.value\">{{ item.value }}</el-radio-button>\n              </el-radio-group>\n              <el-checkbox-group v-else-if=\"form.type == 1\" v-model=\"multiAnswer\" size=\"mini\">\n                <el-checkbox-button v-for=\"(item, index) in content\" :key=\"index\" :label=\"item.value\">{{ item.value }}</el-checkbox-button>\n              </el-checkbox-group>\n              <el-radio-group v-else-if=\"form.type == 3\" v-model=\"form.answer\" size=\"mini\">\n                <el-radio-button label=\"true\">正确</el-radio-button>\n                <el-radio-button label=\"false\">错误</el-radio-button>\n              </el-radio-group>\n              <el-input v-else type=\"textarea\" v-model=\"form.answer\" size=\"mini\" placeholder=\"请输入答案\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n          </div>\n        </el-col>\n\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n          <span class=\"search-title\">分数:</span>\n          <div style=\"width:100%\">\n            <el-form-item prop=\"score\" style=\"margin-bottom:0\">\n              <el-input-number size=\"mini\" v-model=\"form.score\" :min=\"1\" label=\"请输入分数\"></el-input-number>\n            </el-form-item>\n          </div>\n        </el-col>\n\n        <el-col style=\"margin-top:20px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n          <span class=\"search-title\">备注:</span>\n          <div style=\"width:100%\">\n            <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\n              <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\"></el-input>\n            </el-form-item>\n          </div>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n    </div>\n  </el-dialog>\n</div>\n</template>\n\n<script>\nimport { editHomework, getHomeworkById } from '../../../api/api'\nexport default {\n  data() {\n    return {\n      formLabelWidth: '80px',\n      form: {\n        chapterId: '',\n        chapterName: '',\n        title: '',\n        sort: '',\n        answer: '',\n        type: '0',\n        content: '',\n        score: '',\n        remark: '',\n      },\n      content: [\n        {\n          value: '',\n          option: ''\n        }\n      ],\n      multiAnswer: [],\n      rules: {\n        title: [{ required: true, message: '请输入题目', trigger: 'blur' }],\n        sort: [{ required: true, message: '请输入序号', trigger: 'blur' }],\n        score: [{ required: true, message: '请输入分数', trigger: 'blur' }],\n        answer: [{ required: true, message: '请输入答案', trigger: 'blur' }],\n        type: [{ required: true, message: '请选择类型', trigger: 'blur' }],\n      },\n    }\n  },\n  props: ['updateVisible', 'updateId', 'chapterId'],\n  methods: {\n    addContent() {\n      const charCode = 65 + this.content.length\n      this.content.push({ value: String.fromCharCode(charCode), option: '' })\n    },\n    minusContent(index) {\n      this.content.splice(index, 1)\n    },\n    submit() {\n      this.$refs['ruleForm'].validate((valid) => {\n        if (!valid) return\n\n        if (this.form.type == 0 || this.form.type == 1) {\n          for (let item of this.content) {\n            if (!item.value || !item.option) {\n              this.$message.warning('请完善选项及内容')\n              return\n            }\n          }\n          this.form.content = JSON.stringify(this.content)\n        } else {\n          this.form.content = ''\n        }\n\n        if (this.form.type == 1) {\n          this.form.answer = this.multiAnswer.join(',')\n        }\n\n        editHomework(this.form).then(res => {\n          if (res.code === 1000) {\n            this.$notify.success({ title: '成功', message: '保存成功' })\n            this.handleClose()\n          } else {\n            this.$notify.error({ title: '错误', message: res.message })\n          }\n        })\n      })\n    },\n    handleClose() {\n      this.content = [{ value: '', option: '' }]\n      this.multiAnswer = []\n      this.$emit('updateFalse')\n    },\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getHomeworkById({ id: newVal }).then(res => {\n          if (res.code === 1000) {\n            this.form = res.data\n            this.form.type = String(res.data.type)\n            this.content = this.form.content ? JSON.parse(this.form.content) : [{ value: '', option: '' }]\n            if (this.form.type == 1) {\n              this.multiAnswer = this.form.answer ? this.form.answer.split(',') : []\n            }\n          } else {\n            this.$notify.error({ title: '错误', message: res.message })\n          }\n        })\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .content-item {\n      display: flex;\n      align-items: center;\n  }\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}