{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { editTestItem, getTestItemById } from '../../../api/api';\nexport default {\n  data() {\n    return {\n      formLabelWidth: '80px',\n      content: [{\n        value: \"\",\n        option: \"\"\n      }],\n      keyword: [{\n        value: \"\",\n        option: \"\"\n      }],\n      form: {\n        testId: \"\",\n        title: \"\",\n        sort: \"\",\n        type: \"\",\n        score: \"\",\n        keyword: \"\",\n        answer: \"\",\n        content: \"\",\n        remark: \"\"\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入题目',\n          trigger: 'blur'\n        }],\n        sort: [{\n          required: true,\n          message: '请输入序号',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入分数',\n          trigger: 'blur'\n        }],\n        answer: [{\n          required: true,\n          message: '请输入答案',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择类型',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateVisible', 'updateId', 'testId'],\n  methods: {\n    addContent() {\n      var param = {\n        value: \"\",\n        option: \"\"\n      };\n      this.content.push(param);\n    },\n    minusContent(index) {\n      this.content.splice(index, 1);\n    },\n    addKeyword() {\n      var param = {\n        value: \"\",\n        option: \"\"\n      };\n      this.keyword.push(param);\n    },\n    minusKeyword(index) {\n      this.keyword.splice(index, 1);\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          if (this.form.type == 0 || this.form.type == 1) {\n            for (let index = 0; index < this.content.length; index++) {\n              const element = this.content[index];\n              if (!element.value) {\n                this.$message({\n                  message: '请完善选项',\n                  type: 'warning'\n                });\n                return;\n              }\n              if (!element.option) {\n                this.$message({\n                  message: '请完善选项内容',\n                  type: 'warning'\n                });\n                return;\n              }\n            }\n            this.form.content = JSON.stringify(this.content);\n          } else {\n            this.form.content = \"\";\n          }\n          if (this.form.type == 4) {\n            for (let index = 0; index < this.keyword.length; index++) {\n              const element = this.keyword[index];\n              if (!element.value) {\n                this.$message({\n                  message: '请完善得分点分数',\n                  type: 'warning'\n                });\n                return;\n              }\n              if (!element.option) {\n                this.$message({\n                  message: '请完善得分点关键词',\n                  type: 'warning'\n                });\n                return;\n              }\n            }\n            this.form.keyword = JSON.stringify(this.keyword);\n          } else {\n            this.form.keyword = \"\";\n          }\n          this.form.testId = this.testId;\n          editTestItem(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.content = [{\n        value: \"\",\n        option: \"\"\n      }], this.keyword = [{\n        value: \"\",\n        option: \"\"\n      }], this.$emit(\"updateFalse\");\n    }\n  },\n  created() {},\n  mounted() {},\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getTestItemById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            this.form = res.data;\n            this.form.type = res.data.type + \"\";\n            if (this.form.content) {\n              this.content = JSON.parse(this.form.content);\n            }\n            if (this.form.keyword) {\n              this.keyword = JSON.parse(this.form.keyword);\n            }\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["editTestItem","getTestItemById","data","formLabelWidth","content","value","option","keyword","form","testId","title","sort","type","score","answer","remark","rules","required","message","trigger","props","methods","addContent","param","push","minusContent","index","splice","addKeyword","minusKeyword","submit","$refs","validate","valid","length","element","$message","JSON","stringify","then","res","code","$notify","success","handleClose","error","$emit","created","mounted","watch","updateId","newVal","id","parse"],"sources":["src/components/system/testP/updateTestItem.vue"],"sourcesContent":["<template>\n<div>\n  <el-dialog title=\"编辑考试题目\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateVisible\" :before-close=\"handleClose\">\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n      <el-row :gutter=\"10\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                题目:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"title\" style=\"margin-bottom:0\">\n                      <el-input v-model=\"form.title\" size=\"mini\" placeholder=\"请输入题目\" autocomplete=\"off\"></el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                序号:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"sort\" style=\"margin-bottom:0\">\n                      <el-input type=\"number\" v-model=\"form.sort\" size=\"mini\" placeholder=\"请输入序号\" autocomplete=\"off\"></el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                类型:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"type\" style=\"margin-bottom:0\">\n                        <el-select clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.type\" placeholder=\"请选择\">\n                          <el-option\n                            label=\"单选\"\n                            value=\"0\">\n                          </el-option>\n                          <el-option\n                            label=\"多选\"\n                            value=\"1\">\n                          </el-option>\n                          <el-option\n                            label=\"填空\"\n                            value=\"2\">\n                          </el-option>\n                          <el-option\n                            label=\"判断\"\n                            value=\"3\">\n                          </el-option>\n                          <el-option\n                            label=\"问答\"\n                            value=\"4\">\n                          </el-option>\n                          <el-option\n                            label=\"计算(需人工阅卷)\"\n                            value=\"5\">\n                          </el-option>\n                        </el-select>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                分数:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"score\" style=\"margin-bottom:0\">\n                      <el-input type=\"number\" v-model=\"form.score\" size=\"mini\" placeholder=\"请输入分数\" autocomplete=\"off\"></el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col v-if=\"form.type == 4\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                得分点:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"content\" style=\"margin-bottom:0\">\n                      <div class=\"content-item\" v-for=\"(item,index) in keyword\" :key=\"index\">\n                        <div style=\"width:100px;margin-right:10px\">\n                          <el-input v-model=\"item.value\" size=\"mini\" placeholder=\"分数\" autocomplete=\"off\"></el-input>\n                        </div>\n                        <el-input v-model=\"item.option\" size=\"mini\" placeholder=\"关键词\" autocomplete=\"off\"></el-input>\n                        <div v-if=\"index == (keyword.length - 1)\" @click=\"addKeyword\" style=\"margin-left:10px\"><i class=\"el-icon-circle-plus-outline\"></i></div>\n                        <div @click=\"minusKeyword(index)\" style=\"margin-left:10px\" v-if=\"index != 0\"><i class=\"el-icon-remove-outline\"></i></div>\n                      </div>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                答案:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"answer\" style=\"margin-bottom:0\">\n                      <el-input type=\"textarea\" v-model=\"form.answer\" size=\"mini\" placeholder=\"请输入答案（多选多个答案用英文逗号分隔）\" autocomplete=\"off\"></el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col v-if=\"form.type == 0 || form.type == 1\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                题目内容:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"content\" style=\"margin-bottom:0\">\n                      <div class=\"content-item\" v-for=\"(item,index) in content\" :key=\"index\">\n                        <div style=\"width:100px;margin-right:10px\">\n                          <el-input v-model=\"item.value\" size=\"mini\" placeholder=\"选项\" autocomplete=\"off\"></el-input>\n                        </div>\n                        <el-input v-model=\"item.option\" size=\"mini\" placeholder=\"选项内容\" autocomplete=\"off\"></el-input>\n                        <div v-if=\"index == (content.length - 1)\" @click=\"addContent\" style=\"margin-left:10px\"><i class=\"el-icon-circle-plus-outline\"></i></div>\n                        <div @click=\"minusContent(index)\" style=\"margin-left:10px\" v-if=\"index != 0\"><i class=\"el-icon-remove-outline\"></i></div>\n                      </div>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col style=\"margin-top:20px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                备注:\n                </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\n                      <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\"></el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n    </div>\n  </el-dialog>\n</div>\n</template>\n\n<script>\n  import {editTestItem,getTestItemById} from '../../../api/api'\n  export default {\n    data() {\n      return{\n        formLabelWidth: '80px',\n        content: [\n          {\n            value: \"\",\n            option: \"\"\n          }\n        ],\n        keyword: [\n          {\n            value: \"\",\n            option: \"\"\n          }\n        ],\n        form: {\n          testId: \"\",\n          title: \"\",\n          sort: \"\",\n          type: \"\",\n          score: \"\",\n          keyword: \"\",\n          answer: \"\",\n          content: \"\",\n          remark: \"\",\n        },\n        rules: {\n          title: [\n            { required: true, message: '请输入题目', trigger: 'blur' },\n          ],\n          sort: [\n            { required: true, message: '请输入序号', trigger: 'blur' },\n          ],\n          score: [\n            { required: true, message: '请输入分数', trigger: 'blur' },\n          ],\n          answer: [\n            { required: true, message: '请输入答案', trigger: 'blur' },\n          ],\n          type: [\n            { required: true, message: '请选择类型', trigger: 'blur' },\n          ],\n        },\n      }\n    },\n    props: ['updateVisible','updateId','testId'],\n    methods: {\n      addContent() {\n        var param = {\n          value: \"\",\n          option: \"\"\n        }\n        this.content.push(param)\n      },\n      minusContent(index) {\n        this.content.splice(index,1)\n      },\n      addKeyword() {\n        var param = {\n          value: \"\",\n          option: \"\"\n        }\n        this.keyword.push(param)\n      },\n      minusKeyword(index) {\n        this.keyword.splice(index,1)\n      },\n      submit() {\n        this.$refs[\"ruleForm\"].validate((valid) => {\n          if (valid) {\n            if (this.form.type == 0 || this.form.type == 1) {\n              for (let index = 0; index < this.content.length; index++) {\n                const element = this.content[index];\n                if (!element.value) {\n                  this.$message({\n                    message: '请完善选项',\n                    type: 'warning'\n                  });\n                  return\n                }\n                if (!element.option) {\n                  this.$message({\n                    message: '请完善选项内容',\n                    type: 'warning'\n                  });\n                  return\n                }\n              }\n              this.form.content = JSON.stringify(this.content)\n            } else {\n              this.form.content = \"\"\n            }\n            if (this.form.type == 4) {\n              for (let index = 0; index < this.keyword.length; index++) {\n                const element = this.keyword[index];\n                if (!element.value) {\n                  this.$message({\n                    message: '请完善得分点分数',\n                    type: 'warning'\n                  });\n                  return\n                }\n                if (!element.option) {\n                  this.$message({\n                    message: '请完善得分点关键词',\n                    type: 'warning'\n                  });\n                  return\n                }\n              }\n              this.form.keyword = JSON.stringify(this.keyword)\n            } else {\n              this.form.keyword = \"\"\n            }\n            this.form.testId = this.testId\n            editTestItem(this.form).then(res => {\n              if(res.code == 1000) {\n                this.$notify.success({\n                  title: '成功',\n                  message: \"保存成功\"\n                });\n                this.handleClose();\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n            })\n          } else {\n            return false;\n          }\n        });\n      },\n      handleClose() {\n        this.content = [\n          {\n            value: \"\",\n            option: \"\"\n          }\n        ],\n        this.keyword = [\n          {\n            value: \"\",\n            option: \"\"\n          }\n        ],\n        this.$emit(\"updateFalse\")\n      },\n\n    },\n    created() {\n\n    },\n    mounted() {\n\n    },\n    watch: {\n      updateId(newVal) {\n        if(newVal) {\n          getTestItemById({id:newVal}).then(res => {\n            if(res.code == 1000) {\n              this.form = res.data\n              this.form.type = res.data.type + \"\"\n              if (this.form.content) {\n                this.content = JSON.parse(this.form.content)\n              }\n              if (this.form.keyword) {\n                this.keyword = JSON.parse(this.form.keyword)\n              }\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          })\n        }\n\n      }\n    }\n }\n</script>\n\n<style   scoped>\n  .content-item {\n      display: flex;\n      align-items: center;\n  }\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}