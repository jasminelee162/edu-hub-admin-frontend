{"ast":null,"code":"import { mixin } from '../../../minix/index';\nimport { editArticle, getArticleById, getTaskList, getTaskByTeacherId } from '../../../api/api';\nimport hljs from 'highlight.js';\nimport 'highlight.js/styles/atom-one-dark.css'; // 你也可以换其他主题\nexport default {\n  mixins: [mixin],\n  data() {\n    return {\n      editorOption: {\n        placeholder: \"请输入文字内容\",\n        modules: {\n          toolbar: {\n            container: [[\"bold\", \"italic\", \"underline\", \"strike\"], [\"blockquote\", \"code-block\"], [{\n              header: 1\n            }, {\n              header: 2\n            }], [{\n              list: \"ordered\"\n            }, {\n              list: \"bullet\"\n            }], [{\n              script: \"sub\"\n            }, {\n              script: \"super\"\n            }], [{\n              indent: \"-1\"\n            }, {\n              indent: \"+1\"\n            }], [{\n              direction: \"rtl\"\n            }], [{\n              size: [\"small\", false, \"large\", \"huge\"]\n            }], [{\n              header: [1, 2, 3, 4, 5, 6, false]\n            }], [{\n              color: []\n            }, {\n              background: []\n            }], [{\n              font: []\n            }], [{\n              align: []\n            }], [\"clean\"], [\"image\"]],\n            handlers: {\n              'image': function (value) {\n                if (value) {\n                  // 触发上传插件\n                  document.querySelector('.Quill-uploader .el-upload__input').click();\n                } else {\n                  this.quill.format('image', false);\n                }\n              }\n            }\n          },\n          syntax: {\n            highlight: text => {\n              return hljs.highlightAuto(text).value; // 这里就是代码高亮需要配置的地方 \n            }\n          }\n        }\n      },\n      formLabelWidth: '80px',\n      form: {\n        taskId: \"\",\n        title: \"\",\n        articleDesc: \"\",\n        content: \"\",\n        state: \"\",\n        remark: \"\",\n        taskName: \"\"\n      },\n      task: [],\n      rules: {\n        taskId: [{\n          required: true,\n          message: '请选择课程',\n          trigger: 'blur'\n        }],\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        articleDesc: [{\n          required: true,\n          message: '请输入摘要',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          message: '请输入笔记内容',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateVisible', 'updateId', 'taskId', 'type', 'flag'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          this.form.state = 2;\n          editArticle(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleQillSuccess(res) {\n      let _this = this;\n      if (res.code == 1000) {\n        _this.$notify({\n          title: '上传成功',\n          type: 'success'\n        });\n        let imgurl = this.$store.state.configure.HOST + res.message;\n        let quill = this.$refs.myQuillEditor.quill;\n        let position = quill.getSelection().index;\n        quill.insertEmbed(position, 'image', imgurl);\n        quill.setSelection(position + 1);\n      } else {\n        _this.$notify({\n          title: '上传失败',\n          type: 'error'\n        });\n      }\n    },\n    handleClose() {\n      this.$emit(\"updateFalse\");\n    },\n    getTaskList() {\n      getTaskList().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    getTaskByTeacherId() {\n      getTaskByTeacherId().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    }\n  },\n  created() {},\n  mounted() {\n    if (this.flag == 2) {\n      this.getTaskByTeacherId();\n    } else {\n      this.getTaskList();\n    }\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getArticleById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            this.form = res.data;\n            this.form.state = res.data.state + \"\";\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    },\n    updateVisible(newVal) {\n      if (newVal) {\n        if (this.taskId) {\n          this.form.taskId = this.taskId;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["mixin","editArticle","getArticleById","getTaskList","getTaskByTeacherId","hljs","mixins","data","editorOption","placeholder","modules","toolbar","container","header","list","script","indent","direction","size","color","background","font","align","handlers","image","value","document","querySelector","click","quill","format","syntax","highlight","text","highlightAuto","formLabelWidth","form","taskId","title","articleDesc","content","state","remark","taskName","task","rules","required","message","trigger","props","methods","submit","$refs","validate","valid","then","res","code","$notify","success","handleClose","error","handleQillSuccess","_this","type","imgurl","$store","configure","HOST","myQuillEditor","position","getSelection","index","insertEmbed","setSelection","$emit","created","mounted","flag","watch","updateId","newVal","id","updateVisible"],"sources":["src/components/system/article/updateArticle.vue"],"sourcesContent":["<template>\n<div>\n  <el-dialog title=\"编辑笔记\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateVisible\" :before-close=\"handleClose\" class=\"custom-dialog\">\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n      <el-row :gutter=\"10\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                <i class=\"el-icon-notebook-1\"></i> 所属课程:\n            </span>\n                <div style=\"width:100%\">\n                    <el-form-item prop=\"taskId\" style=\"margin-bottom:0\">\n                        <el-select :disabled=\"type == 0 ? true:false\" clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.taskId\" placeholder=\"请选择\" class=\"purple-select\">\n                            <el-option v-for=\"(item,index) in task\" :key=\"index\"\n                                :label=\"item.name\"\n                                :value=\"item.id\">\n                            </el-option>\n                        </el-select>\n                    </el-form-item>\n                </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                <i class=\"el-icon-edit-outline\"></i> 标题:\n            </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"title\" style=\"margin-bottom:0\">\n                      <el-input v-model=\"form.title\" size=\"mini\" placeholder=\"请输入标题\" autocomplete=\"off\" class=\"purple-input\">\n                        <i slot=\"prefix\" class=\"el-icon-edit\"></i>\n                      </el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col style=\"margin-top:25px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                <i class=\"el-icon-document\"></i> 摘要:\n            </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"articleDesc\" style=\"margin-bottom:0\">\n                      <el-input type=\"textarea\" v-model=\"form.articleDesc\" size=\"mini\" placeholder=\"请输入摘要\" autocomplete=\"off\" class=\"purple-textarea\">\n                      </el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col style=\"margin-top:25px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                <i class=\"el-icon-tickets\"></i> 内容:\n            </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"content\" style=\"margin-bottom:0\">\n                    <quill-editor ref=\"myQuillEditor\" :options=\"editorOption\"\n                    v-model=\"form.content\" class=\"purple-editor\"/>\n                    <el-upload class=\"Quill-uploader\" :show-file-list=\"false\" accept=\"image/*\" v-show=\"0\" ref=\"updateUpload\" :multiple=\"false\" :action=\"uploadImageUrl()\"\n                        :on-success=\"handleQillSuccess\">\n                    </el-upload>\n                  </el-form-item>\n                </div>\n        </el-col>\n        <el-col style=\"margin-top:25px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                <i class=\"el-icon-collection-tag\"></i> 备注:\n            </span>\n                <div style=\"width:100%\">\n                  <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\n                      <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\" class=\"purple-textarea\">\n                      </el-input>\n                  </el-form-item>\n                </div>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\" class=\"purple-btn\">\n        <i class=\"el-icon-check\"></i> 确 定\n      </el-button>\n      <el-button size=\"mini\" @click=\"handleClose\" class=\"gray-btn\">\n        <i class=\"el-icon-close\"></i> 取 消\n      </el-button>\n    </div>\n  </el-dialog>\n</div>\n</template>\n\n<script>\n  import { mixin } from '../../../minix/index';\n  import {editArticle,getArticleById,getTaskList,getTaskByTeacherId} from '../../../api/api'\n  import hljs from 'highlight.js'\n  import 'highlight.js/styles/atom-one-dark.css' // 你也可以换其他主题\n  export default {\n    mixins: [mixin],\n    data() {\n      return{\n        editorOption: {\n          placeholder: \"请输入文字内容\",\n          modules: { \n            toolbar: {\n                container: [\n                    [\"bold\", \"italic\", \"underline\", \"strike\"], \n                    [\"blockquote\", \"code-block\"], \n                    [{ header: 1 }, { header: 2 }], \n                    [{ list: \"ordered\" }, { list: \"bullet\" }], \n                    [{ script: \"sub\" }, { script: \"super\" }], \n                    [{ indent: \"-1\" }, { indent: \"+1\" }], \n                    [{ direction: \"rtl\" }], \n                    [{ size: [\"small\", false, \"large\", \"huge\"] }], \n                    [{ header: [1, 2, 3, 4, 5, 6, false] }], \n                    [{ color: [] }, { background: [] }], \n                    [{ font: [] }], [{ align: [] }], \n                    [\"clean\"], [\"image\"]\n                ],\n                handlers: {\n                    'image': function ( value ) {\n                        if ( value ) {\n                            // 触发上传插件\n                            document.querySelector('.Quill-uploader .el-upload__input').click()\n                        } else {\n                            this.quill.format( 'image', false );\n                        }\n                    }\n                }\n            },\n            syntax: { \n                highlight: text => { \n                    return hljs.highlightAuto(text).value; // 这里就是代码高亮需要配置的地方 \n                }\n            }\n          }\n        },\n        formLabelWidth: '80px',\n        form: {\n          taskId: \"\",\n          title: \"\",\n          articleDesc: \"\",\n          content: \"\",\n          state: \"\",\n          remark: \"\",\n          taskName: \"\",\n        },\n        task: [],\n        rules: { \n          taskId: [\n            { required: true, message: '请选择课程', trigger: 'blur' },\n          ],\n          title: [\n            { required: true, message: '请输入标题', trigger: 'blur' },\n          ],\n          articleDesc: [\n            { required: true, message: '请输入摘要', trigger: 'blur' },\n          ],\n          content: [\n            { required: true, message: '请输入笔记内容', trigger: 'blur' },\n          ],\n        },\n      }\n    },\n    props: ['updateVisible','updateId','taskId','type','flag'],\n    methods: {\n      submit() {\n        this.$refs[\"ruleForm\"].validate((valid) => {\n          if (valid) {\n            this.form.state = 2\n            editArticle(this.form).then(res => {\n              if(res.code == 1000) {\n                this.$notify.success({\n                  title: '成功',\n                  message: \"保存成功\"\n                });\n                this.handleClose();\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n            })\n          } else {\n            return false;\n          }\n        });\n      },\n      handleQillSuccess(res){\n          let _this = this;\n          if(res.code == 1000){\n              _this.$notify({\n                  title: '上传成功',\n                  type: 'success'\n              });\n              let imgurl = this.$store.state.configure.HOST + res.message\n              let quill = this.$refs.myQuillEditor.quill\n              let position = quill.getSelection().index\n              quill.insertEmbed(position, 'image', imgurl)\n              quill.setSelection(position + 1)\n          }else{\n              _this.$notify({\n                  title: '上传失败',\n                  type: 'error'\n              });\n          }\n      },\n      handleClose() {\n        this.$emit(\"updateFalse\")\n      },\n      getTaskList() {\n          getTaskList().then(res => {\n              if(res.code == 1000) {\n                this.task = res.data;\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n          })\n      },\n      getTaskByTeacherId() {\n        getTaskByTeacherId().then(res => {\n              if(res.code == 1000) {\n                this.task = res.data;\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n          })\n      },\n    },\n    created() {\n     \n    },\n    mounted() {\n      if(this.flag == 2) {\n        this.getTaskByTeacherId()\n      } else {\n        this.getTaskList()\n      }\n    },\n    watch: {\n      updateId(newVal) {\n        if(newVal) {\n          getArticleById({id:newVal}).then(res => {\n            if(res.code == 1000) {\n              this.form = res.data\n              this.form.state = res.data.state + \"\"\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          })\n        }\n      },\n      updateVisible(newVal) {\n        if(newVal) {\n          if(this.taskId) {\n            this.form.taskId = this.taskId\n          }\n        }\n      }\n    }\n }\n</script>\n\n<style scoped>\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n      color: #5F4B8B;\n  }\n  .search-title i {\n      margin-right: 6px;\n      color: #7B68EE;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>\n\n<style>\n  /* 全局样式 */\n  .custom-dialog .el-dialog__header {\n      background: linear-gradient(135deg, #7B68EE, #9370DB);\n      padding: 15px 20px;\n  }\n  \n  .custom-dialog .el-dialog__title {\n      color: white;\n      font-weight: bold;\n  }\n  \n  .custom-dialog .el-dialog__headerbtn .el-dialog__close {\n      color: white;\n  }\n  \n  .purple-select .el-input__inner {\n      border-color: #D8D8E5;\n      color: #5F4B8B;\n      background-color: #F9F8FD;\n  }\n  \n  .purple-select .el-input__inner:focus {\n      border-color: #7B68EE;\n  }\n  \n  .purple-input .el-input__inner {\n      border-color: #D8D8E5;\n      color: #5F4B8B;\n      background-color: #F9F8FD;\n      padding-left: 30px;\n  }\n  \n  .purple-input .el-input__prefix {\n      left: 5px;\n      color: #7B68EE;\n  }\n  \n  .purple-textarea .el-textarea__inner {\n      border-color: #D8D8E5;\n      color: #5F4B8B;\n      background-color: #F9F8FD;\n      min-height: 80px !important;\n  }\n  \n  .purple-editor .ql-toolbar {\n      border-color: #D8D8E5 !important;\n      background-color: #F5F2FF;\n  }\n  \n  .purple-editor .ql-container {\n      border-color: #D8D8E5 !important;\n      height: 200px;\n  }\n  \n  .purple-btn {\n      background: linear-gradient(135deg, #7B68EE, #9370DB);\n      border: none;\n      color: white;\n      border-radius: 15px;\n      padding: 7px 15px;\n  }\n  \n  .purple-btn i {\n      margin-right: 5px;\n  }\n  \n  .gray-btn {\n      border-color: #D8D8E5;\n      color: #5F4B8B;\n      border-radius: 15px;\n      padding: 7px 15px;\n  }\n  \n  .gray-btn i {\n      margin-right: 5px;\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}