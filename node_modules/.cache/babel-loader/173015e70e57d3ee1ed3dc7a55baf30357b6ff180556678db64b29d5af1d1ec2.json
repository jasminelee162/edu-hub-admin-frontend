{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { login, getUser, sendEmailCode, loginWithEmail } from '../../../api/api';\nimport { setLock } from '@/utils/lock';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      loginType: 'account',\n      // account / email\n      email: '',\n      emailCode: '',\n      countdown: 0,\n      isCountingDown: false\n    };\n  },\n  mounted() {\n    this.initParticles();\n  },\n  created() {\n    if (this.$route.query.passwordChanged) {\n      this.$notify.success({\n        title: '提示',\n        message: '密码修改成功，请使用新密码登录',\n        duration: 5000\n      });\n      const query = {\n        ...this.$route.query\n      };\n      delete query.passwordChanged;\n      this.$router.replace({\n        ...this.$route,\n        query\n      });\n    }\n  },\n  methods: {\n    //============ 登录类型切换 ============\n    handleLoginTypeChange() {\n      this.username = '';\n      this.password = '';\n      this.email = '';\n      this.emailCode = '';\n    },\n    //============ 账号密码登录 ============\n    async login() {\n      if (!this.username) {\n        this.$message.warning('请输入用户名');\n        return;\n      }\n      if (!this.password) {\n        this.$message.warning('请输入密码');\n        return;\n      }\n      const loading = this.$loading({\n        lock: true,\n        text: '正在登录...',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      try {\n        const res = await login({\n          username: this.username,\n          password: this.password\n        });\n        if (res.code === 1000) {\n          this.$store.commit('user/setToken', res.data.token);\n          await this.getUserInfo();\n          setLock(false);\n          this.$router.push(this.$route.query.redirect || '/index');\n          this.$message.success('登录成功');\n        } else {\n          this.$message.error(res.message || '登录失败');\n        }\n      } catch (error) {\n        console.error('登录错误:', error);\n        this.$message.error(error.response?.data?.message || '登录失败，请稍后重试');\n      } finally {\n        loading.close();\n      }\n    },\n    //============ 邮箱验证码登录 ============\n    async emailLogin() {\n      if (!this.email) {\n        this.$message.warning('请输入邮箱');\n        return;\n      }\n      if (!this.emailCode) {\n        this.$message.warning('请输入验证码');\n        return;\n      }\n      const loading = this.$loading({\n        lock: true,\n        text: '正在登录...',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      try {\n        const res = await loginWithEmail(this.email, this.emailCode);\n        if (res.code === 1000) {\n          this.$store.commit('user/setToken', res.data.token);\n          await this.getUserInfo();\n          setLock(false);\n          this.$router.push(this.$route.query.redirect || '/index');\n          this.$message.success('登录成功');\n        } else {\n          this.$message.error(res.message || '邮箱或验证码错误');\n        }\n      } catch (error) {\n        console.error('登录错误:', error);\n        this.$message.error(error.response?.data?.message || '登录失败，请稍后重试');\n      } finally {\n        loading.close();\n      }\n    },\n    //============ 发送验证码 ============\n    async sendVerificationCode() {\n      if (!this.email) {\n        this.$message.warning('请输入邮箱');\n        return;\n      }\n      this.startCountdown();\n      const loading = this.$loading({\n        lock: false,\n        text: '发送中...',\n        spinner: 'el-icon-loading',\n        background: 'transparent'\n      });\n      try {\n        const res = await sendEmailCode(this.email);\n        if (res.code === 1000) {\n          this.$message.success('验证码已发送');\n        } else {\n          this.$message.error(res.message || '发送失败');\n          this.resetCountdown();\n        }\n      } catch (error) {\n        console.error('发送错误:', error);\n        this.$message.error(error.response?.data?.message || '发送失败');\n        this.resetCountdown();\n      } finally {\n        loading.close();\n      }\n    },\n    //============ 工具方法 ============\n    startCountdown() {\n      this.isCountingDown = true;\n      this.countdown = 60;\n      const timer = setInterval(() => {\n        this.countdown--;\n        if (this.countdown <= 0) {\n          clearInterval(timer);\n          this.isCountingDown = false;\n        }\n      }, 1000);\n    },\n    resetCountdown() {\n      this.isCountingDown = false;\n      this.countdown = 0;\n    },\n    async getUserInfo() {\n      try {\n        const res = await getUser();\n        if (res.code === 1000) {\n          this.$store.commit('user/setUser', JSON.stringify(res.data));\n        } else {\n          throw new Error(res.message || '获取用户信息失败');\n        }\n      } catch (error) {\n        console.error('获取用户信息错误:', error);\n        throw error;\n      }\n    },\n    initParticles() {\n      const canvas = document.getElementById('particle-canvas');\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      const particles = [];\n      for (let i = 0; i < 80; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 1,\n          speedX: Math.random() * 0.3 - 0.15,\n          speedY: Math.random() * 0.3 - 0.15,\n          color: ['#6A5ACD', '#483D8B', '#4B0082', '#663399'][Math.floor(Math.random() * 4)]\n        });\n      }\n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        particles.forEach(p => {\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\n          ctx.fillStyle = p.color;\n          ctx.fill();\n          p.x += p.speedX;\n          p.y += p.speedY;\n          if (p.x < 0 || p.x > canvas.width) p.speedX *= -1;\n          if (p.y < 0 || p.y > canvas.height) p.speedY *= -1;\n          particles.forEach(o => {\n            const dist = Math.sqrt((p.x - o.x) ** 2 + (p.y - o.y) ** 2);\n            if (dist < 120) {\n              ctx.beginPath();\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - dist / 120})`;\n              ctx.lineWidth = 0.3;\n              ctx.moveTo(p.x, p.y);\n              ctx.lineTo(o.x, o.y);\n              ctx.stroke();\n            }\n          });\n        });\n        requestAnimationFrame(animate);\n      };\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["login","getUser","sendEmailCode","loginWithEmail","setLock","data","username","password","loginType","email","emailCode","countdown","isCountingDown","mounted","initParticles","created","$route","query","passwordChanged","$notify","success","title","message","duration","$router","replace","methods","handleLoginTypeChange","$message","warning","loading","$loading","lock","text","spinner","background","res","code","$store","commit","token","getUserInfo","push","redirect","error","console","response","close","emailLogin","sendVerificationCode","startCountdown","resetCountdown","timer","setInterval","clearInterval","JSON","stringify","Error","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","i","x","Math","random","y","size","speedX","speedY","color","floor","animate","clearRect","forEach","p","beginPath","arc","PI","fillStyle","fill","o","dist","sqrt","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame"],"sources":["src/views/system/login/login.vue"],"sourcesContent":["<template>\r\n<div class=\"login-container\">\r\n    <!-- 粒子背景画布 -->\r\n    <canvas id=\"particle-canvas\"></canvas>\r\n    \r\n    <!-- 左侧内容区域 - 增强版 -->\r\n    <div class=\"left-content\">\r\n      <div class=\"logo-area\" style=\"padding-top: 30px;\">\r\n        <img style=\"width:300px; padding-left:0px; margin-top:20px;\" src=\"@/assets/image/systemlogo.png\" />\r\n        <div class=\"platform-role\">教师 · 管理中枢</div>\r\n      </div>\r\n      \r\n      <div class=\"feature-list\">\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-data\"></i>\r\n          <span>学情数据分析</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-notebook-2\"></i>\r\n          <span>课程内容管理</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-check\"></i>\r\n          <span>作业批改系统</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-chat-line-round\"></i>\r\n          <span>师生互动平台</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"quote-area\">\r\n        <p class=\"quote-text\">\"教育不是灌输，而是点燃火焰\"</p>\r\n        <p class=\"quote-author\">—— 苏格拉底 ——</p>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 右侧登录卡片 -->\r\n    <div class=\"login-card\">\r\n      <h2 class=\"slogan-en\">TEACH WITH INTELLIGENCE</h2>\r\n      <p class=\"slogan-cn\">智能教育管理平台，赋能高效教学</p>\r\n      \r\n      <div class=\"divider\"></div>\r\n      \r\n      <p class=\"sub-slogan\">精准掌握每位学生的学习轨迹<br>用数据驱动个性化教学方案</p>\r\n      \r\n      <!-- 登录方式切换 -->\r\n      <div class=\"login-tabs\">\r\n        <el-radio-group v-model=\"loginType\" @change=\"handleLoginTypeChange\">\r\n          <el-radio-button label=\"account\">账号登录</el-radio-button>\r\n          <el-radio-button label=\"email\">邮箱登录</el-radio-button>\r\n        </el-radio-group>\r\n      </div>\r\n      \r\n      <!-- 账号登录表单 -->\r\n      <div class=\"login-form\" v-if=\"loginType === 'account'\">\r\n        <el-input\r\n          v-model=\"username\"\r\n          placeholder=\"工号/用户名\"\r\n          prefix-icon=\"el-icon-user\"\r\n          class=\"custom-input\"\r\n        ></el-input>\r\n        \r\n        <el-input\r\n          v-model=\"password\"\r\n          placeholder=\"密码\"\r\n          prefix-icon=\"el-icon-lock\"\r\n          show-password\r\n          class=\"custom-input\"\r\n        ></el-input>\r\n        \r\n        <el-button \r\n          type=\"primary\" \r\n          class=\"login-btn\"\r\n          @click=\"login\"\r\n        >\r\n          登 录\r\n        </el-button>\r\n      </div>\r\n      \r\n      <!-- 邮箱登录表单 -->\r\n      <div class=\"login-form\" v-else>\r\n        <el-input\r\n          v-model=\"email\"\r\n          placeholder=\"请输入邮箱\"\r\n          prefix-icon=\"el-icon-message\"\r\n          class=\"custom-input\"\r\n        ></el-input>\r\n        \r\n        <div class=\"code-input-group\">\r\n          <el-input\r\n            v-model=\"emailCode\"\r\n            placeholder=\"验证码\"\r\n            prefix-icon=\"el-icon-key\"\r\n            class=\"custom-input code-input\"\r\n          ></el-input>\r\n          <el-button \r\n            class=\"send-code-btn\" \r\n            :disabled=\"isCountingDown\"\r\n            @click=\"sendVerificationCode\"\r\n          >\r\n            {{ countdown > 0 ? `${countdown}s后重试` : '获取验证码' }}\r\n          </el-button>\r\n        </div>\r\n        \r\n        <el-button \r\n          type=\"primary\" \r\n          class=\"login-btn\"\r\n          @click=\"emailLogin\"\r\n        >\r\n          邮箱登录\r\n        </el-button>\r\n      </div>\r\n      \r\n      <div class=\"footer\">\r\n        <p>—— 让科技赋能每一份教育热忱 ——</p>\r\n        <p class=\"en-footer\">Where Innovation Meets Education</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { login, getUser, sendEmailCode, loginWithEmail } from '../../../api/api';\r\nimport { setLock } from '@/utils/lock';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: '',\r\n      password: '',\r\n      loginType: 'account', // account / email\r\n      email: '',\r\n      emailCode: '',\r\n      countdown: 0,\r\n      isCountingDown: false,\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initParticles();\r\n  },\r\n  created() {\r\n    if (this.$route.query.passwordChanged) {\r\n      this.$notify.success({\r\n        title: '提示',\r\n        message: '密码修改成功，请使用新密码登录',\r\n        duration: 5000\r\n      });\r\n      const query = { ...this.$route.query };\r\n      delete query.passwordChanged;\r\n      this.$router.replace({ ...this.$route, query });\r\n    }\r\n  },\r\n  methods: {\r\n    //============ 登录类型切换 ============\r\n    handleLoginTypeChange() {\r\n      this.username = '';\r\n      this.password = '';\r\n      this.email = '';\r\n      this.emailCode = '';\r\n    },\r\n\r\n    //============ 账号密码登录 ============\r\n    async login() {\r\n      if (!this.username) {\r\n        this.$message.warning('请输入用户名');\r\n        return;\r\n      }\r\n      if (!this.password) {\r\n        this.$message.warning('请输入密码');\r\n        return;\r\n      }\r\n\r\n      const loading = this.$loading({\r\n        lock: true,\r\n        text: '正在登录...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      });\r\n\r\n      try {\r\n        const res = await login({\r\n          username: this.username,\r\n          password: this.password\r\n        });\r\n        \r\n        if (res.code === 1000) {\r\n          this.$store.commit('user/setToken', res.data.token);\r\n          await this.getUserInfo();\r\n          setLock(false);\r\n          this.$router.push(this.$route.query.redirect || '/index');\r\n          this.$message.success('登录成功');\r\n        } else {\r\n          this.$message.error(res.message || '登录失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('登录错误:', error);\r\n        this.$message.error(error.response?.data?.message || '登录失败，请稍后重试');\r\n      } finally {\r\n        loading.close();\r\n      }\r\n    },\r\n\r\n    //============ 邮箱验证码登录 ============\r\n    async emailLogin() {\r\n      if (!this.email) {\r\n        this.$message.warning('请输入邮箱');\r\n        return;\r\n      }\r\n      if (!this.emailCode) {\r\n        this.$message.warning('请输入验证码');\r\n        return;\r\n      }\r\n\r\n      const loading = this.$loading({\r\n        lock: true,\r\n        text: '正在登录...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      });\r\n\r\n      try {\r\n        const res = await loginWithEmail(this.email, this.emailCode);\r\n        \r\n        if (res.code === 1000) {\r\n          this.$store.commit('user/setToken', res.data.token);\r\n          await this.getUserInfo();\r\n          setLock(false);\r\n          this.$router.push(this.$route.query.redirect || '/index');\r\n          this.$message.success('登录成功');\r\n        } else {\r\n          this.$message.error(res.message || '邮箱或验证码错误');\r\n        }\r\n      } catch (error) {\r\n        console.error('登录错误:', error);\r\n        this.$message.error(error.response?.data?.message || '登录失败，请稍后重试');\r\n      } finally {\r\n        loading.close();\r\n      }\r\n    },\r\n\r\n    //============ 发送验证码 ============\r\n    async sendVerificationCode() {\r\n      if (!this.email) {\r\n        this.$message.warning('请输入邮箱');\r\n        return;\r\n      }\r\n\r\n      this.startCountdown();\r\n      const loading = this.$loading({\r\n        lock: false,\r\n        text: '发送中...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'transparent'\r\n      });\r\n\r\n      try {\r\n        const res = await sendEmailCode(this.email);\r\n        if (res.code === 1000) {\r\n          this.$message.success('验证码已发送');\r\n        } else {\r\n          this.$message.error(res.message || '发送失败');\r\n          this.resetCountdown();\r\n        }\r\n      } catch (error) {\r\n        console.error('发送错误:', error);\r\n        this.$message.error(error.response?.data?.message || '发送失败');\r\n        this.resetCountdown();\r\n      } finally {\r\n        loading.close();\r\n      }\r\n    },\r\n\r\n    //============ 工具方法 ============\r\n    startCountdown() {\r\n      this.isCountingDown = true;\r\n      this.countdown = 60;\r\n      const timer = setInterval(() => {\r\n        this.countdown--;\r\n        if (this.countdown <= 0) {\r\n          clearInterval(timer);\r\n          this.isCountingDown = false;\r\n        }\r\n      }, 1000);\r\n    },\r\n\r\n    resetCountdown() {\r\n      this.isCountingDown = false;\r\n      this.countdown = 0;\r\n    },\r\n\r\n    async getUserInfo() {\r\n      try {\r\n        const res = await getUser();\r\n        if (res.code === 1000) {\r\n          this.$store.commit('user/setUser', JSON.stringify(res.data));\r\n        } else {\r\n          throw new Error(res.message || '获取用户信息失败');\r\n        }\r\n      } catch (error) {\r\n        console.error('获取用户信息错误:', error);\r\n        throw error;\r\n      }\r\n    },\r\n\r\n    initParticles() {\r\n      const canvas = document.getElementById('particle-canvas');\r\n      if (!canvas) return;\r\n      \r\n      const ctx = canvas.getContext('2d');\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n\r\n      const particles = [];\r\n      for (let i = 0; i < 80; i++) {\r\n        particles.push({\r\n          x: Math.random() * canvas.width,\r\n          y: Math.random() * canvas.height,\r\n          size: Math.random() * 3 + 1,\r\n          speedX: Math.random() * 0.3 - 0.15,\r\n          speedY: Math.random() * 0.3 - 0.15,\r\n          color: ['#6A5ACD', '#483D8B', '#4B0082', '#663399'][Math.floor(Math.random() * 4)]\r\n        });\r\n      }\r\n\r\n      const animate = () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n        \r\n        particles.forEach(p => {\r\n          ctx.beginPath();\r\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\r\n          ctx.fillStyle = p.color;\r\n          ctx.fill();\r\n          \r\n          p.x += p.speedX;\r\n          p.y += p.speedY;\r\n          \r\n          if (p.x < 0 || p.x > canvas.width) p.speedX *= -1;\r\n          if (p.y < 0 || p.y > canvas.height) p.speedY *= -1;\r\n          \r\n          particles.forEach(o => {\r\n            const dist = Math.sqrt((p.x - o.x) ** 2 + (p.y - o.y) ** 2);\r\n            if (dist < 120) {\r\n              ctx.beginPath();\r\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - dist/120})`;\r\n              ctx.lineWidth = 0.3;\r\n              ctx.moveTo(p.x, p.y);\r\n              ctx.lineTo(o.x, o.y);\r\n              ctx.stroke();\r\n            }\r\n          });\r\n        });\r\n        \r\n        requestAnimationFrame(animate);\r\n      };\r\n      \r\n      animate();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #ffffff;\r\n  overflow: hidden;\r\n  display: flex;\r\n  font-family: 'Microsoft YaHei', sans-serif;\r\n}\r\n\r\n#particle-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n\r\n/* 新增左侧内容区域样式 */\r\n.left-content {\r\n  width: 50%;\r\n  padding: 80px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  z-index: 2;\r\n}\r\n\r\n.logo-area {\r\n  margin-bottom: 80px;\r\n}\r\n\r\n.platform-name {\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  color: #4B0082;\r\n  letter-spacing: 2px;\r\n  margin-bottom: 15px;\r\n  text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.platform-role {\r\n  font-size: 24px;\r\n  color: #6A5ACD;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.feature-list {\r\n  margin: 60px 0;\r\n}\r\n\r\n.feature-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 35px;\r\n  color: #4B0082;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n}\r\n\r\n.feature-item i {\r\n  margin-right: 20px;\r\n  font-size: 28px;\r\n  color: #6A5ACD;\r\n}\r\n\r\n.quote-area {\r\n  color: #555;\r\n  font-style: italic;\r\n  line-height: 1.8;\r\n  margin-top: 60px;\r\n}\r\n\r\n.quote-text {\r\n  font-size: 26px;\r\n  line-height: 1.5;\r\n  margin-bottom: 10px;\r\n  color: #4B0082;\r\n}\r\n\r\n.quote-author {\r\n  text-align: right;\r\n  font-size: 18px;\r\n  color: #9370DB;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 登录卡片样式调整 */\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  width: 450px;\r\n  min-height: 100vh;\r\n  overflow: visible; /* 确保 footer 不被裁剪 */\r\n  padding-bottom: 120px; /* 给 footer 留空间 */\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(5px);\r\n  padding: 100px 50px;\r\n  box-shadow: -5px 0 30px rgba(0, 0, 0, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.slogan-en {\r\n  color: #4B0082;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.slogan-cn {\r\n  color: #6A5ACD;\r\n  font-size: px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.divider {\r\n  width: 50px;\r\n  height: 3px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  margin: 25px 0;\r\n}\r\n\r\n.sub-slogan {\r\n  color: #666;\r\n  line-height: 1.8;\r\n  margin-bottom: 50px;\r\n  font-size: 15px;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 40px;\r\n}\r\n\r\n.custom-input {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.custom-input >>> .el-input__inner {\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  border: 1px solid #E6E6FA;\r\n  padding-left: 45px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.custom-input >>> .el-input__inner:focus {\r\n  border-color: #6A5ACD;\r\n  box-shadow: 0 0 0 2px rgba(106, 90, 205, 0.2);\r\n}\r\n\r\n.custom-input >>> .el-input__prefix {\r\n  color: #6A5ACD;\r\n  left: 15px;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  border: none;\r\n  font-size: 16px;\r\n  letter-spacing: 2px;\r\n  margin-top: 10px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.login-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 15px rgba(106, 90, 205, 0.4);\r\n}\r\n\r\n.footer {\r\n  position: absolute;\r\n  bottom: 40px;\r\n  width: calc(100% - 100px);\r\n  text-align: center;\r\n  color: #6A5ACD;\r\n  font-size: 14px;\r\n}\r\n\r\n.en-footer {\r\n  margin-top: 10px;\r\n  font-style: italic;\r\n  color: #B0C4DE;\r\n}\r\n\r\n/* 新增样式 */\r\n.login-tabs {\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.login-tabs >>> .el-radio-button__inner {\r\n  border-radius: 20px;\r\n  margin: 0 5px;\r\n  border: 1px solid #E6E6FA;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  color: #6A5ACD;\r\n}\r\n\r\n.login-tabs >>> .el-radio-button__orig-radio:checked + .el-radio-button__inner {\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  border-color: #6A5ACD;\r\n  box-shadow: none;\r\n}\r\n\r\n.code-input-group {\r\n  display: flex;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.code-input {\r\n  flex: 1;\r\n  margin-right: 15px;\r\n}\r\n\r\n.send-code-btn {\r\n  width: 140px;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  background: #E6E6FA;\r\n  color: #6A5ACD;\r\n  border: none;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.send-code-btn:hover {\r\n  background: #D8BFD8;\r\n}\r\n\r\n.send-code-btn:disabled {\r\n  background: #F5F5F5;\r\n  color: #999;\r\n}\r\n</style>"],"mappings":";AA2HA,SAAAA,KAAA,EAAAC,OAAA,EAAAC,aAAA,EAAAC,cAAA;AACA,SAAAC,OAAA;AAEA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,SAAA;MAAA;MACAC,KAAA;MACAC,SAAA;MACAC,SAAA;MACAC,cAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;EACA;EACAC,QAAA;IACA,SAAAC,MAAA,CAAAC,KAAA,CAAAC,eAAA;MACA,KAAAC,OAAA,CAAAC,OAAA;QACAC,KAAA;QACAC,OAAA;QACAC,QAAA;MACA;MACA,MAAAN,KAAA;QAAA,QAAAD,MAAA,CAAAC;MAAA;MACA,OAAAA,KAAA,CAAAC,eAAA;MACA,KAAAM,OAAA,CAAAC,OAAA;QAAA,QAAAT,MAAA;QAAAC;MAAA;IACA;EACA;EACAS,OAAA;IACA;IACAC,sBAAA;MACA,KAAArB,QAAA;MACA,KAAAC,QAAA;MACA,KAAAE,KAAA;MACA,KAAAC,SAAA;IACA;IAEA;IACA,MAAAV,MAAA;MACA,UAAAM,QAAA;QACA,KAAAsB,QAAA,CAAAC,OAAA;QACA;MACA;MACA,UAAAtB,QAAA;QACA,KAAAqB,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,MAAAC,OAAA,QAAAC,QAAA;QACAC,IAAA;QACAC,IAAA;QACAC,OAAA;QACAC,UAAA;MACA;MAEA;QACA,MAAAC,GAAA,SAAApC,KAAA;UACAM,QAAA,OAAAA,QAAA;UACAC,QAAA,OAAAA;QACA;QAEA,IAAA6B,GAAA,CAAAC,IAAA;UACA,KAAAC,MAAA,CAAAC,MAAA,kBAAAH,GAAA,CAAA/B,IAAA,CAAAmC,KAAA;UACA,WAAAC,WAAA;UACArC,OAAA;UACA,KAAAoB,OAAA,CAAAkB,IAAA,MAAA1B,MAAA,CAAAC,KAAA,CAAA0B,QAAA;UACA,KAAAf,QAAA,CAAAR,OAAA;QACA;UACA,KAAAQ,QAAA,CAAAgB,KAAA,CAAAR,GAAA,CAAAd,OAAA;QACA;MACA,SAAAsB,KAAA;QACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;QACA,KAAAhB,QAAA,CAAAgB,KAAA,CAAAA,KAAA,CAAAE,QAAA,EAAAzC,IAAA,EAAAiB,OAAA;MACA;QACAQ,OAAA,CAAAiB,KAAA;MACA;IACA;IAEA;IACA,MAAAC,WAAA;MACA,UAAAvC,KAAA;QACA,KAAAmB,QAAA,CAAAC,OAAA;QACA;MACA;MACA,UAAAnB,SAAA;QACA,KAAAkB,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,MAAAC,OAAA,QAAAC,QAAA;QACAC,IAAA;QACAC,IAAA;QACAC,OAAA;QACAC,UAAA;MACA;MAEA;QACA,MAAAC,GAAA,SAAAjC,cAAA,MAAAM,KAAA,OAAAC,SAAA;QAEA,IAAA0B,GAAA,CAAAC,IAAA;UACA,KAAAC,MAAA,CAAAC,MAAA,kBAAAH,GAAA,CAAA/B,IAAA,CAAAmC,KAAA;UACA,WAAAC,WAAA;UACArC,OAAA;UACA,KAAAoB,OAAA,CAAAkB,IAAA,MAAA1B,MAAA,CAAAC,KAAA,CAAA0B,QAAA;UACA,KAAAf,QAAA,CAAAR,OAAA;QACA;UACA,KAAAQ,QAAA,CAAAgB,KAAA,CAAAR,GAAA,CAAAd,OAAA;QACA;MACA,SAAAsB,KAAA;QACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;QACA,KAAAhB,QAAA,CAAAgB,KAAA,CAAAA,KAAA,CAAAE,QAAA,EAAAzC,IAAA,EAAAiB,OAAA;MACA;QACAQ,OAAA,CAAAiB,KAAA;MACA;IACA;IAEA;IACA,MAAAE,qBAAA;MACA,UAAAxC,KAAA;QACA,KAAAmB,QAAA,CAAAC,OAAA;QACA;MACA;MAEA,KAAAqB,cAAA;MACA,MAAApB,OAAA,QAAAC,QAAA;QACAC,IAAA;QACAC,IAAA;QACAC,OAAA;QACAC,UAAA;MACA;MAEA;QACA,MAAAC,GAAA,SAAAlC,aAAA,MAAAO,KAAA;QACA,IAAA2B,GAAA,CAAAC,IAAA;UACA,KAAAT,QAAA,CAAAR,OAAA;QACA;UACA,KAAAQ,QAAA,CAAAgB,KAAA,CAAAR,GAAA,CAAAd,OAAA;UACA,KAAA6B,cAAA;QACA;MACA,SAAAP,KAAA;QACAC,OAAA,CAAAD,KAAA,UAAAA,KAAA;QACA,KAAAhB,QAAA,CAAAgB,KAAA,CAAAA,KAAA,CAAAE,QAAA,EAAAzC,IAAA,EAAAiB,OAAA;QACA,KAAA6B,cAAA;MACA;QACArB,OAAA,CAAAiB,KAAA;MACA;IACA;IAEA;IACAG,eAAA;MACA,KAAAtC,cAAA;MACA,KAAAD,SAAA;MACA,MAAAyC,KAAA,GAAAC,WAAA;QACA,KAAA1C,SAAA;QACA,SAAAA,SAAA;UACA2C,aAAA,CAAAF,KAAA;UACA,KAAAxC,cAAA;QACA;MACA;IACA;IAEAuC,eAAA;MACA,KAAAvC,cAAA;MACA,KAAAD,SAAA;IACA;IAEA,MAAA8B,YAAA;MACA;QACA,MAAAL,GAAA,SAAAnC,OAAA;QACA,IAAAmC,GAAA,CAAAC,IAAA;UACA,KAAAC,MAAA,CAAAC,MAAA,iBAAAgB,IAAA,CAAAC,SAAA,CAAApB,GAAA,CAAA/B,IAAA;QACA;UACA,UAAAoD,KAAA,CAAArB,GAAA,CAAAd,OAAA;QACA;MACA,SAAAsB,KAAA;QACAC,OAAA,CAAAD,KAAA,cAAAA,KAAA;QACA,MAAAA,KAAA;MACA;IACA;IAEA9B,cAAA;MACA,MAAA4C,MAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,KAAAF,MAAA;MAEA,MAAAG,GAAA,GAAAH,MAAA,CAAAI,UAAA;MACAJ,MAAA,CAAAK,KAAA,GAAAC,MAAA,CAAAC,UAAA;MACAP,MAAA,CAAAQ,MAAA,GAAAF,MAAA,CAAAG,WAAA;MAEA,MAAAC,SAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,OAAAA,CAAA;QACAD,SAAA,CAAA1B,IAAA;UACA4B,CAAA,EAAAC,IAAA,CAAAC,MAAA,KAAAd,MAAA,CAAAK,KAAA;UACAU,CAAA,EAAAF,IAAA,CAAAC,MAAA,KAAAd,MAAA,CAAAQ,MAAA;UACAQ,IAAA,EAAAH,IAAA,CAAAC,MAAA;UACAG,MAAA,EAAAJ,IAAA,CAAAC,MAAA;UACAI,MAAA,EAAAL,IAAA,CAAAC,MAAA;UACAK,KAAA,+CAAAN,IAAA,CAAAO,KAAA,CAAAP,IAAA,CAAAC,MAAA;QACA;MACA;MAEA,MAAAO,OAAA,GAAAA,CAAA;QACAlB,GAAA,CAAAmB,SAAA,OAAAtB,MAAA,CAAAK,KAAA,EAAAL,MAAA,CAAAQ,MAAA;QAEAE,SAAA,CAAAa,OAAA,CAAAC,CAAA;UACArB,GAAA,CAAAsB,SAAA;UACAtB,GAAA,CAAAuB,GAAA,CAAAF,CAAA,CAAAZ,CAAA,EAAAY,CAAA,CAAAT,CAAA,EAAAS,CAAA,CAAAR,IAAA,KAAAH,IAAA,CAAAc,EAAA;UACAxB,GAAA,CAAAyB,SAAA,GAAAJ,CAAA,CAAAL,KAAA;UACAhB,GAAA,CAAA0B,IAAA;UAEAL,CAAA,CAAAZ,CAAA,IAAAY,CAAA,CAAAP,MAAA;UACAO,CAAA,CAAAT,CAAA,IAAAS,CAAA,CAAAN,MAAA;UAEA,IAAAM,CAAA,CAAAZ,CAAA,QAAAY,CAAA,CAAAZ,CAAA,GAAAZ,MAAA,CAAAK,KAAA,EAAAmB,CAAA,CAAAP,MAAA;UACA,IAAAO,CAAA,CAAAT,CAAA,QAAAS,CAAA,CAAAT,CAAA,GAAAf,MAAA,CAAAQ,MAAA,EAAAgB,CAAA,CAAAN,MAAA;UAEAR,SAAA,CAAAa,OAAA,CAAAO,CAAA;YACA,MAAAC,IAAA,GAAAlB,IAAA,CAAAmB,IAAA,EAAAR,CAAA,CAAAZ,CAAA,GAAAkB,CAAA,CAAAlB,CAAA,UAAAY,CAAA,CAAAT,CAAA,GAAAe,CAAA,CAAAf,CAAA;YACA,IAAAgB,IAAA;cACA5B,GAAA,CAAAsB,SAAA;cACAtB,GAAA,CAAA8B,WAAA,6BAAAF,IAAA;cACA5B,GAAA,CAAA+B,SAAA;cACA/B,GAAA,CAAAgC,MAAA,CAAAX,CAAA,CAAAZ,CAAA,EAAAY,CAAA,CAAAT,CAAA;cACAZ,GAAA,CAAAiC,MAAA,CAAAN,CAAA,CAAAlB,CAAA,EAAAkB,CAAA,CAAAf,CAAA;cACAZ,GAAA,CAAAkC,MAAA;YACA;UACA;QACA;QAEAC,qBAAA,CAAAjB,OAAA;MACA;MAEAA,OAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}