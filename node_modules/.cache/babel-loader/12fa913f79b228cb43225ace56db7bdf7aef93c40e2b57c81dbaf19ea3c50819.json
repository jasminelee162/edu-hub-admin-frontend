{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { login, getUser } from '../../../api/api';\nimport { setLock } from '@/utils/lock';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    };\n  },\n  mounted() {\n    this.initParticles();\n  },\n  created() {\n    // 检查是否是密码修改后的跳转\n    if (this.$route.query.passwordChanged) {\n      this.$notify.success({\n        title: '提示',\n        message: '密码修改成功，请使用新密码登录',\n        duration: 5000\n      });\n\n      // 清除query参数避免刷新后重复显示\n      const query = {\n        ...this.$route.query\n      };\n      delete query.passwordChanged;\n      this.$router.replace({\n        ...this.$route,\n        query\n      });\n    }\n  },\n  methods: {\n    login() {\n      if (!this.username) {\n        this.$message({\n          message: '请输入用户名',\n          type: 'warning'\n        });\n        return;\n      }\n      if (!this.password) {\n        this.$message({\n          message: '请输入密码',\n          type: 'warning'\n        });\n        return;\n      }\n      var params = {\n        username: this.username,\n        password: this.password\n      };\n      this.$loading({\n        lock: true,\n        text: '正在登录...',\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n      login(params).then(res => {\n        this.$loading().close();\n        if (res.code == 1000) {\n          this.$message({\n            message: '登录成功',\n            type: 'success'\n          });\n          var token = res.data.token;\n          this.$store.commit('user/setToken', token);\n          this.getUserInfo().then(() => {\n            setLock(false);\n\n            // 获取redirect参数，默认跳转到首页\n            const redirect = this.$route.query.redirect || '/index';\n            this.$router.push(redirect);\n          });\n        } else {\n          this.$message.error(res.message);\n        }\n      }).catch(error => {\n        this.$loading().close();\n        this.$message.error('登录失败，请稍后重试');\n      });\n    },\n    getUserInfo() {\n      return new Promise((resolve, reject) => {\n        getUser().then(res => {\n          if (res.code == 1000) {\n            this.$store.commit('user/setUser', JSON.stringify(res.data));\n            resolve();\n          } else {\n            reject(res.message);\n          }\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    initParticles() {\n      const canvas = document.getElementById('particle-canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n\n      // 深紫色系粒子配置 - 更专业的色调\n      const particles = [];\n      const particleCount = 80;\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399'];\n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 1,\n          // 稍小的粒子\n          speedX: Math.random() * 0.3 - 0.15,\n          // 更慢的速度\n          speedY: Math.random() * 0.3 - 0.15,\n          color: colors[Math.floor(Math.random() * colors.length)]\n        });\n      }\n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        particles.forEach(particle => {\n          ctx.beginPath();\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2);\n          ctx.fillStyle = particle.color;\n          ctx.fill();\n          particle.x += particle.speedX;\n          particle.y += particle.speedY;\n          if (particle.x < 0 || particle.x > canvas.width) {\n            particle.speedX *= -1;\n          }\n          if (particle.y < 0 || particle.y > canvas.height) {\n            particle.speedY *= -1;\n          }\n          particles.forEach(other => {\n            const distance = Math.sqrt(Math.pow(particle.x - other.x, 2) + Math.pow(particle.y - other.y, 2));\n            if (distance < 120) {\n              // 更短的连接线\n              ctx.beginPath();\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance / 120})`;\n              ctx.lineWidth = 0.3; // 更细的连接线\n              ctx.moveTo(particle.x, particle.y);\n              ctx.lineTo(other.x, other.y);\n              ctx.stroke();\n            }\n          });\n        });\n        requestAnimationFrame(animate);\n      };\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["login","getUser","setLock","data","username","password","mounted","initParticles","created","$route","query","passwordChanged","$notify","success","title","message","duration","$router","replace","methods","$message","type","params","$loading","lock","text","spinner","background","then","res","close","code","token","$store","commit","getUserInfo","redirect","push","error","catch","Promise","resolve","reject","JSON","stringify","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","particleCount","colors","i","x","Math","random","y","size","speedX","speedY","color","floor","length","animate","clearRect","forEach","particle","beginPath","arc","PI","fillStyle","fill","other","distance","sqrt","pow","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame"],"sources":["src/views/system/login/login.vue"],"sourcesContent":["<template>\n<div class=\"login-container\">\n    <!-- 粒子背景画布 -->\n    <canvas id=\"particle-canvas\"></canvas>\n    \n    <!-- 左侧内容区域 - 增强版 -->\n    <div class=\"left-content\">\n      <div class=\"logo-area\" style=\"padding-top: 30px;\">\n        <img style=\"width:300px; padding-left:0px; margin-top:20px;\" src=\"@/assets/image/systemlogo.png\" />\n        <div class=\"platform-role\">教师 · 管理中枢</div>\n      </div>\n      \n      <div class=\"feature-list\">\n        <div class=\"feature-item\">\n          <i class=\"el-icon-s-data\"></i>\n          <span>学情数据分析</span>\n        </div>\n        <div class=\"feature-item\">\n          <i class=\"el-icon-notebook-2\"></i>\n          <span>课程内容管理</span>\n        </div>\n        <div class=\"feature-item\">\n          <i class=\"el-icon-s-check\"></i>\n          <span>作业批改系统</span>\n        </div>\n        <div class=\"feature-item\">\n          <i class=\"el-icon-chat-line-round\"></i>\n          <span>师生互动平台</span>\n        </div>\n      </div>\n      \n      <div class=\"quote-area\">\n        <p class=\"quote-text\">\"教育不是灌输，而是点燃火焰\"</p>\n        <p class=\"quote-author\">—— 苏格拉底 ——</p>\n      </div>\n    </div>\n    \n    <!-- 右侧登录卡片 -->\n    <div class=\"login-card\">\n      <h2 class=\"slogan-en\">TEACH WITH INTELLIGENCE</h2>\n      <p class=\"slogan-cn\">智能教育管理平台，赋能高效教学</p>\n      \n      <div class=\"divider\"></div>\n      \n      <p class=\"sub-slogan\">精准掌握每位学生的学习轨迹<br>用数据驱动个性化教学方案</p>\n      \n      <div class=\"login-form\">\n        <el-input\n          v-model=\"username\"\n          placeholder=\"工号/用户名\"\n          prefix-icon=\"el-icon-user\"\n          class=\"custom-input\"\n        ></el-input>\n        \n        <el-input\n          v-model=\"password\"\n          placeholder=\"密码\"\n          prefix-icon=\"el-icon-lock\"\n          show-password\n          class=\"custom-input\"\n        ></el-input>\n        \n        <el-button \n          type=\"primary\" \n          class=\"login-btn\"\n          @click=\"login\"\n        >\n          登 录\n        </el-button>\n      </div>\n      \n      <div class=\"footer\">\n        <p>—— 让科技赋能每一份教育热忱 ——</p>\n        <p class=\"en-footer\">Where Innovation Meets Education</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {login,getUser} from '../../../api/api'\nimport { setLock } from '@/utils/lock'\nexport default {\n  data() {\n    return {\n      username: '',\n      password: ''\n    }\n  },\n  mounted() {\n    this.initParticles()\n  },\n  created() {\n    // 检查是否是密码修改后的跳转\n  if (this.$route.query.passwordChanged) {\n    this.$notify.success({\n      title: '提示',\n      message: '密码修改成功，请使用新密码登录',\n      duration: 5000\n    });\n    \n    // 清除query参数避免刷新后重复显示\n    const query = {...this.$route.query};\n    delete query.passwordChanged;\n    this.$router.replace({...this.$route, query});\n  }\n    },\n  methods: {\n              login() {\n        if(!this.username) {\n          this.$message({\n            message: '请输入用户名',\n            type: 'warning'\n          });\n          return;\n        }\n        if(!this.password) {\n          this.$message({\n            message: '请输入密码',\n            type: 'warning'\n          });\n          return;\n        }\n        \n        var params = {\n          username: this.username,\n          password: this.password\n        }\n        \n        this.$loading({\n          lock: true,\n          text: '正在登录...',\n          spinner: 'el-icon-loading',\n          background: 'rgba(0, 0, 0, 0.7)'\n        });\n        \n        login(params).then(res => {\n          this.$loading().close();\n          \n          if(res.code == 1000) {\n            this.$message({\n              message: '登录成功',\n              type: 'success'\n            });\n            \n            var token = res.data.token;\n            this.$store.commit('user/setToken', token);\n            \n            this.getUserInfo().then(() => {\n              setLock(false);\n              \n              // 获取redirect参数，默认跳转到首页\n              const redirect = this.$route.query.redirect || '/index';\n              this.$router.push(redirect);\n            });\n            \n          } else {\n            this.$message.error(res.message);\n          }\n        }).catch(error => {\n          this.$loading().close();\n          this.$message.error('登录失败，请稍后重试');\n        });\n      },\n\n      getUserInfo() {\n        return new Promise((resolve, reject) => {\n          getUser().then(res => {\n            if(res.code == 1000) {\n              this.$store.commit('user/setUser', JSON.stringify(res.data));\n              resolve();\n            } else {\n              reject(res.message);\n            }\n          }).catch(error => {\n            reject(error);\n          });\n        });\n      },\n\n    initParticles() {\n      const canvas = document.getElementById('particle-canvas')\n      const ctx = canvas.getContext('2d')\n      canvas.width = window.innerWidth\n      canvas.height = window.innerHeight\n      \n      // 深紫色系粒子配置 - 更专业的色调\n      const particles = []\n      const particleCount = 80\n      const colors = ['#6A5ACD', '#483D8B', '#4B0082', '#663399']\n      \n      for (let i = 0; i < particleCount; i++) {\n        particles.push({\n          x: Math.random() * canvas.width,\n          y: Math.random() * canvas.height,\n          size: Math.random() * 3 + 1, // 稍小的粒子\n          speedX: Math.random() * 0.3 - 0.15, // 更慢的速度\n          speedY: Math.random() * 0.3 - 0.15,\n          color: colors[Math.floor(Math.random() * colors.length)]\n        })\n      }\n      \n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\n        \n        particles.forEach(particle => {\n          ctx.beginPath()\n          ctx.arc(particle.x, particle.y, particle.size, 0, Math.PI * 2)\n          ctx.fillStyle = particle.color\n          ctx.fill()\n          \n          particle.x += particle.speedX\n          particle.y += particle.speedY\n          \n          if (particle.x < 0 || particle.x > canvas.width) {\n            particle.speedX *= -1\n          }\n          if (particle.y < 0 || particle.y > canvas.height) {\n            particle.speedY *= -1\n          }\n          \n          particles.forEach(other => {\n            const distance = Math.sqrt(\n              Math.pow(particle.x - other.x, 2) + \n              Math.pow(particle.y - other.y, 2)\n            )\n            if (distance < 120) { // 更短的连接线\n              ctx.beginPath()\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - distance/120})`\n              ctx.lineWidth = 0.3 // 更细的连接线\n              ctx.moveTo(particle.x, particle.y)\n              ctx.lineTo(other.x, other.y)\n              ctx.stroke()\n            }\n          })\n        })\n        \n        requestAnimationFrame(animate)\n      }\n      \n      animate()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.login-container {\n  position: relative;\n  width: 100vw;\n  height: 100vh;\n  background: #ffffff;\n  overflow: hidden;\n  display: flex;\n  font-family: 'Microsoft YaHei', sans-serif;\n}\n\n#particle-canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: 1;\n}\n\n/* 新增左侧内容区域样式 */\n.left-content {\n  width: 50%;\n  padding: 80px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  z-index: 2;\n}\n\n.logo-area {\n  margin-bottom: 80px;\n}\n\n.platform-name {\n  font-size: 36px;\n  font-weight: bold;\n  color: #4B0082;\n  letter-spacing: 2px;\n  margin-bottom: 15px;\n  text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\n}\n\n.platform-role {\n  font-size: 24px;\n  color: #6A5ACD;\n  font-weight: 600;\n  letter-spacing: 1px;\n}\n\n.feature-list {\n  margin: 60px 0;\n}\n\n.feature-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 35px;\n  color: #4B0082;\n  font-size: 22px;\n  font-weight: 500;\n}\n\n.feature-item i {\n  margin-right: 20px;\n  font-size: 28px;\n  color: #6A5ACD;\n}\n\n.quote-area {\n  color: #555;\n  font-style: italic;\n  line-height: 1.8;\n  margin-top: 60px;\n}\n\n.quote-text {\n  font-size: 26px;\n  line-height: 1.5;\n  margin-bottom: 10px;\n  color: #4B0082;\n}\n\n.quote-author {\n  text-align: right;\n  font-size: 18px;\n  color: #9370DB;\n  font-weight: 500;\n}\n\n/* 登录卡片样式调整 */\n.login-card {\n  position: relative;\n  z-index: 2;\n  width: 450px;\n  min-height: 100vh;\n  overflow: visible; /* 确保 footer 不被裁剪 */\n  padding-bottom: 120px; /* 给 footer 留空间 */\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(5px);\n  padding: 100px 50px;\n  box-shadow: -5px 0 30px rgba(0, 0, 0, 0.05);\n  box-sizing: border-box;\n}\n\n.slogan-en {\n  color: #4B0082;\n  font-size: 20px;\n  line-height: 1.4;\n  margin-bottom: 15px;\n}\n\n.slogan-cn {\n  color: #6A5ACD;\n  font-size: px;\n  margin-bottom: 30px;\n}\n\n.divider {\n  width: 50px;\n  height: 3px;\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\n  margin: 25px 0;\n}\n\n.sub-slogan {\n  color: #666;\n  line-height: 1.8;\n  margin-bottom: 50px;\n  font-size: 15px;\n}\n\n.login-form {\n  margin-top: 40px;\n}\n\n.custom-input {\n  margin-bottom: 25px;\n}\n\n.custom-input >>> .el-input__inner {\n  height: 50px;\n  border-radius: 25px;\n  border: 1px solid #E6E6FA;\n  padding-left: 45px;\n  background: rgba(255, 255, 255, 0.9);\n  transition: all 0.3s;\n}\n\n.custom-input >>> .el-input__inner:focus {\n  border-color: #6A5ACD;\n  box-shadow: 0 0 0 2px rgba(106, 90, 205, 0.2);\n}\n\n.custom-input >>> .el-input__prefix {\n  color: #6A5ACD;\n  left: 15px;\n}\n\n.login-btn {\n  width: 100%;\n  height: 50px;\n  border-radius: 25px;\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\n  border: none;\n  font-size: 16px;\n  letter-spacing: 2px;\n  margin-top: 10px;\n  transition: all 0.3s;\n}\n\n.login-btn:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 5px 15px rgba(106, 90, 205, 0.4);\n}\n\n.footer {\n  position: absolute;\n  bottom: 40px;\n  width: calc(100% - 100px);\n  text-align: center;\n  color: #6A5ACD;\n  font-size: 14px;\n}\n\n.en-footer {\n  margin-top: 10px;\n  font-style: italic;\n  color: #B0C4DE;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}