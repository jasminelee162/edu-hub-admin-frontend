{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mixin } from \"../../../minix\";\nimport { editChapter, getChapterById, getTaskList, getTaskByTeacherId } from '../../../api/api';\nexport default {\n  mixins: [mixin],\n  data() {\n    return {\n      fileList: [],\n      fileList1: [],\n      formLabelWidth: '80px',\n      form: {\n        taskId: \"\",\n        taskName: \"\",\n        name: \"\",\n        videoName: \"\",\n        video: \"\",\n        coursewareName: \"\",\n        courseware: \"\",\n        remark: \"\"\n      },\n      rules: {\n        taskId: [{\n          required: true,\n          message: '请输入课程id',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '请输入章节名称',\n          trigger: 'blur'\n        }],\n        video: [{\n          required: true,\n          message: '请输入视频',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateVisible', 'updateId', 'taskId', 'type', 'flag'],\n  methods: {\n    handleAvatorSuccess(res) {\n      let _this = this;\n      if (res.code == 1000) {\n        _this.$message({\n          type: 'success',\n          message: '上传成功!'\n        });\n        this.fileList.push({\n          name: res.data,\n          url: this.$store.state.configure.HOST + res.message\n        });\n        this.form.video = res.message;\n        this.form.videoName = res.data;\n      } else {\n        _this.$notify.error({\n          title: '错误',\n          message: res.message\n        });\n      }\n    },\n    handleRemove(file, fileList) {\n      this.form.video = \"\";\n      this.fileList = [];\n    },\n    handleFileSuccess(res) {\n      let _this = this;\n      if (res.code == 1000) {\n        _this.$message({\n          type: 'success',\n          message: '上传成功!'\n        });\n        this.fileList1.push({\n          name: res.data,\n          url: this.$store.state.configure.HOST + res.message\n        });\n        this.form.courseware = res.message;\n        this.form.coursewareName = res.data;\n      } else {\n        _this.$notify.error({\n          title: '错误',\n          message: res.message\n        });\n      }\n    },\n    handleFileRemove(file, fileList) {\n      this.form.courseware = \"\";\n      this.fileList1 = [];\n    },\n    getTaskList() {\n      getTaskList().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    getTaskByTeacherId() {\n      getTaskByTeacherId().then(res => {\n        if (res.code == 1000) {\n          this.task = res.data;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          editChapter(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.fileList = [];\n      this.fileList1 = [];\n      this.$emit(\"updateFalse\");\n    }\n  },\n  created() {},\n  mounted() {\n    if (this.flag == 2) {\n      this.getTaskByTeacherId();\n    } else {\n      this.getTaskList();\n    }\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getChapterById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            this.form = res.data;\n            this.fileList.push({\n              name: this.form.videoName,\n              url: this.$store.state.configure.HOST + this.form.video\n            });\n            if (this.form.coursewareName) {\n              this.fileList1.push({\n                name: this.form.coursewareName,\n                url: this.$store.state.configure.HOST + this.form.courseware\n              });\n            }\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    },\n    updateVisible(newVal) {\n      if (newVal) {\n        if (this.taskId) {\n          this.form.taskId = this.taskId;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["mixin","editChapter","getChapterById","getTaskList","getTaskByTeacherId","mixins","data","fileList","fileList1","formLabelWidth","form","taskId","taskName","name","videoName","video","coursewareName","courseware","remark","rules","required","message","trigger","props","methods","handleAvatorSuccess","res","_this","code","$message","type","push","url","$store","state","configure","HOST","$notify","error","title","handleRemove","file","handleFileSuccess","handleFileRemove","then","task","submit","$refs","validate","valid","success","handleClose","$emit","created","mounted","flag","watch","updateId","newVal","id","updateVisible"],"sources":["src/components/system/chapter/updateChapter.vue"],"sourcesContent":["<template>\n<div>\n  <el-dialog title=\"编辑章节\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateVisible\" :before-close=\"handleClose\">\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n      <el-row :gutter=\"10\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                所属课程:\n                </span>\n                <div style=\"width:100%\">\n                    <el-form-item prop=\"taskId\" style=\"margin-bottom:0\">\n                        <el-select :disabled=\"type == 0 ? true:false\" clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.taskId\" placeholder=\"请选择\">\n                            <el-option v-for=\"(item,index) in task\" :key=\"index\"\n                                :label=\"item.name\"\n                                :value=\"item.id\">\n                            </el-option>\n                        </el-select>\n                    </el-form-item>\n                </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                章节名称:\n                </span>\n            <div style=\"width:100%\">\n                <el-form-item prop=\"name\" style=\"margin-bottom:0\">\n                    <el-input v-model=\"form.name\" size=\"mini\" placeholder=\"请输入章节名称\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n            </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                视频:\n                </span>\n            <div style=\"width:100%\">\n                <el-form-item prop=\"video\" style=\"margin-bottom:0\">\n                    <el-upload\n                        :file-list=\"fileList\"\n                        ref=\"upload\"\n                        :action=\"uploadVideoUrl()\"\n                        accept=\"video/*\"\n                        :multiple=\"false\"\n                        :limit=\"1\"\n                        :on-exceed=\"handleExceed\"\n                        :on-success=\"handleAvatorSuccess\"\n                        :on-remove=\"handleRemove\">\n                        <el-button size=\"mini\" type=\"primary\">点击上传</el-button>\n                    </el-upload>\n                </el-form-item>\n            </div>\n        </el-col>\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                课件:\n                </span>\n            <div style=\"width:100%\">\n                <el-form-item prop=\"courseware\" style=\"margin-bottom:0\">\n                    <el-upload\n                        :file-list=\"fileList1\"\n                        ref=\"upload\"\n                        :action=\"uploadFileUrl()\"\n                        :multiple=\"false\"\n                        :limit=\"1\"\n                        :on-exceed=\"handleExceed\"\n                        :on-success=\"handleFileSuccess\"\n                        :on-remove=\"handleFileRemove\">\n                        <el-button size=\"mini\" type=\"primary\">点击上传</el-button>\n                    </el-upload>\n                </el-form-item>\n            </div>\n        </el-col>\n        <el-col style=\"margin-top:30px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                备注:\n                </span>\n            <div style=\"width:100%\">\n                <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\n                    <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\"></el-input>\n                </el-form-item>\n            </div>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n    </div>\n  </el-dialog>\n</div>\n</template>\n\n<script>\n  import {mixin} from \"../../../minix\";\n  import {editChapter,getChapterById,getTaskList,getTaskByTeacherId} from '../../../api/api'\n  export default {\n    mixins: [mixin],\n    data() {\n      return{\n        fileList: [],\n        fileList1: [],\n        formLabelWidth: '80px',\n        form: {\n          taskId: \"\",\n          taskName: \"\",\n          name: \"\",\n          videoName: \"\",\n          video: \"\",\n          coursewareName: \"\",\n          courseware: \"\",\n          remark: \"\",\n        },\n        rules: {\n          taskId: [\n            { required: true, message: '请输入课程id', trigger: 'blur' },\n          ],\n          name: [\n            { required: true, message: '请输入章节名称', trigger: 'blur' },\n          ],\n          video: [\n            { required: true, message: '请输入视频', trigger: 'blur' },\n          ],\n        },\n      }\n    },\n    props: ['updateVisible','updateId','taskId','type','flag'],\n    methods: {\n      handleAvatorSuccess(res) {\n        let _this = this;\n        if(res.code == 1000){\n            _this.$message({\n              type: 'success',\n              message: '上传成功!'\n            });\n            this.fileList.push({name:res.data,url:this.$store.state.configure.HOST + res.message})\n            this.form.video = res.message\n            this.form.videoName = res.data\n        }else{\n          _this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      },\n      handleRemove(file, fileList) {\n        this.form.video = \"\"\n        this.fileList = []\n      },\n      handleFileSuccess(res) {\n        let _this = this;\n        if(res.code == 1000){\n            _this.$message({\n              type: 'success',\n              message: '上传成功!'\n            });\n            this.fileList1.push({name:res.data,url:this.$store.state.configure.HOST + res.message})\n            this.form.courseware = res.message\n            this.form.coursewareName = res.data\n        }else{\n          _this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      },\n      handleFileRemove(file, fileList) {\n        this.form.courseware = \"\"\n        this.fileList1 = []\n      },\n      getTaskList() {\n          getTaskList().then(res => {\n              if(res.code == 1000) {\n                this.task = res.data;\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n          })\n      },\n      getTaskByTeacherId() {\n        getTaskByTeacherId().then(res => {\n              if(res.code == 1000) {\n                this.task = res.data;\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n          })\n      },\n      submit() {\n        this.$refs[\"ruleForm\"].validate((valid) => {\n          if (valid) {\n            editChapter(this.form).then(res => {\n              if(res.code == 1000) {\n                this.$notify.success({\n                  title: '成功',\n                  message: \"保存成功\"\n                });\n                this.handleClose();\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n            })\n          } else {\n            return false;\n          }\n        });\n      },\n      handleClose() {\n        this.fileList = []\n        this.fileList1 = []\n        this.$emit(\"updateFalse\")\n      },\n     \n    },\n    created() {\n     \n    },\n    mounted() {\n      if(this.flag == 2) {\n        this.getTaskByTeacherId()\n      } else {\n        this.getTaskList()\n      }\n    },\n    watch: {\n      updateId(newVal) {\n        if(newVal) {\n          getChapterById({id:newVal}).then(res => {\n            if(res.code == 1000) {\n              this.form = res.data\n              this.fileList.push({name:this.form.videoName,url:this.$store.state.configure.HOST + this.form.video})\n              if (this.form.coursewareName) {\n                this.fileList1.push({name:this.form.coursewareName,url:this.$store.state.configure.HOST + this.form.courseware})\n              }\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          })\n        }\n      },\n      updateVisible(newVal) {\n        if(newVal) {\n          if(this.taskId) {\n            this.form.taskId = this.taskId\n          }\n        }\n      }\n    }\n }\n</script>\n\n<style scoped>\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}