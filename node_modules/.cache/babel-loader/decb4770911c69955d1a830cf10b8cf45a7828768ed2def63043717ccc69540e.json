{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { login, getUser, sendEmailCode as apiSendEmailCode, loginWithEmail } from '../../../api/api';\nimport { setLock } from '@/utils/lock';\nexport default {\n  data() {\n    return {\n      loginType: 'account',\n      // 切换登录方式\n\n      // 账号登录表单数据\n      accountForm: {\n        username: '',\n        password: ''\n      },\n      // 账号登录验证规则\n      accountRules: {\n        username: [{\n          required: true,\n          message: '请输入用户名',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      },\n      // 邮箱登录表单数据\n      emailForm: {\n        email: '',\n        code: ''\n      },\n      // 发送验证码状态\n      isSending: false,\n      countdown: 60,\n      timer: null\n    };\n  },\n  methods: {\n    // 切换登录方式\n    switchLoginType(type) {\n      this.loginType = type;\n      this.clearForm();\n    },\n    clearForm() {\n      this.accountForm.username = '';\n      this.accountForm.password = '';\n      this.emailForm.email = '';\n      this.emailForm.code = '';\n      this.resetCountdown();\n    },\n    // 账号登录\n    handleAccountLogin() {\n      this.$refs.accountFormRef.validate(valid => {\n        if (!valid) return;\n        this.showLoading('正在登录...');\n        login(this.accountForm).then(res => {\n          this.$loading().close();\n          if (res.code === 1000) {\n            this.$message.success('登录成功');\n            this.handleLoginSuccess(res);\n          } else {\n            this.$message.error(res.message || '登录失败');\n          }\n        }).catch(error => {\n          this.$loading().close();\n          console.error('账号登录错误:', error);\n          this.$message.error(error.response?.data?.message || '登录失败');\n        });\n      });\n    },\n    // 邮箱登录\n    handleEmailLogin() {\n      if (!this.validateEmail(this.emailForm.email)) return;\n      if (!this.emailForm.code) {\n        this.$message.warning('请输入验证码');\n        return;\n      }\n      this.showLoading('正在登录...');\n      loginWithEmail(this.emailForm.email, this.emailForm.code).then(res => {\n        this.$loading().close();\n        if (res.code === 1000) {\n          this.$message.success('登录成功');\n          this.handleLoginSuccess(res);\n        } else {\n          this.$message.error(res.message || '登录失败');\n        }\n      }).catch(error => {\n        this.$loading().close();\n        console.error('邮箱登录错误:', error);\n        this.$message.error(error.response?.data?.message || '登录失败');\n      });\n    },\n    // 发送邮箱验证码\n    sendEmailCode() {\n      if (!this.validateEmail(this.emailForm.email)) return;\n      this.isSending = true;\n      this.countdown = 60;\n      this.timer = setInterval(() => {\n        this.countdown--;\n        if (this.countdown <= 0) {\n          clearInterval(this.timer);\n          this.isSending = false;\n        }\n      }, 1000);\n      apiSendEmailCode(this.emailForm.email).then(() => {\n        this.$message.success('验证码发送成功，请查收邮件');\n      }).catch(error => {\n        clearInterval(this.timer);\n        this.isSending = false;\n        this.$message.error(error.response?.data?.message || '验证码发送失败');\n        console.error('发送验证码失败:', error);\n      });\n    },\n    resetCountdown() {\n      clearInterval(this.timer);\n      this.isSending = false;\n      this.countdown = 60;\n    },\n    validateEmail(email) {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        this.$message.warning('请输入有效的邮箱格式');\n        return false;\n      }\n      return true;\n    },\n    showLoading(text) {\n      return this.$loading({\n        lock: true,\n        text,\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n    },\n    handleLoginSuccess(res) {\n      const token = res.data.token;\n      this.$store.commit('user/setToken', token);\n      // 可以使用 localStorage 保存token\n      localStorage.setItem('user_token', token);\n      this.getUserInfo().then(() => {\n        setLock(false);\n        this.$router.push(this.$route.query.redirect || '/index');\n      });\n    },\n    getUserInfo() {\n      return getUser().then(res => {\n        if (res.code === 1000) {\n          this.$store.commit('user/setUser', JSON.stringify(res.data));\n          localStorage.setItem('user_info', JSON.stringify(res.data));\n        }\n      }).catch(error => {\n        console.error('获取用户信息失败', error);\n      });\n    },\n    // 粒子动画相关方法保持不变\n    initParticles() {\n      const canvas = document.getElementById('particle-canvas');\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      const particles = Array.from({\n        length: 80\n      }, () => ({\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        size: Math.random() * 3 + 1,\n        speedX: Math.random() * 0.3 - 0.15,\n        speedY: Math.random() * 0.3 - 0.15,\n        color: ['#6A5ACD', '#483D8B', '#4B0082', '#663399'][Math.floor(Math.random() * 4)]\n      }));\n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        particles.forEach(p => {\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\n          ctx.fillStyle = p.color;\n          ctx.fill();\n          p.x += p.speedX;\n          p.y += p.speedY;\n          if (p.x < 0 || p.x > canvas.width) p.speedX *= -1;\n          if (p.y < 0 || p.y > canvas.height) p.speedY *= -1;\n          particles.forEach(o => {\n            const dist = Math.hypot(p.x - o.x, p.y - o.y);\n            if (dist < 120) {\n              ctx.beginPath();\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - dist / 120})`;\n              ctx.lineWidth = 0.3;\n              ctx.moveTo(p.x, p.y);\n              ctx.lineTo(o.x, o.y);\n              ctx.stroke();\n            }\n          });\n        });\n        requestAnimationFrame(animate);\n      };\n      animate();\n    }\n  },\n  mounted() {\n    this.initParticles();\n  },\n  created() {\n    if (this.$route.query.passwordChanged) {\n      this.$notify.success({\n        title: '提示',\n        message: '密码修改成功，请使用新密码登录',\n        duration: 5000\n      });\n      const query = {\n        ...this.$route.query\n      };\n      delete query.passwordChanged;\n      this.$router.replace({\n        ...this.$route,\n        query\n      });\n    }\n  }\n};","map":{"version":3,"names":["login","getUser","sendEmailCode","apiSendEmailCode","loginWithEmail","setLock","data","loginType","accountForm","username","password","accountRules","required","message","trigger","emailForm","email","code","isSending","countdown","timer","methods","switchLoginType","type","clearForm","resetCountdown","handleAccountLogin","$refs","accountFormRef","validate","valid","showLoading","then","res","$loading","close","$message","success","handleLoginSuccess","error","catch","console","response","handleEmailLogin","validateEmail","warning","setInterval","clearInterval","emailRegex","test","text","lock","spinner","background","token","$store","commit","localStorage","setItem","getUserInfo","$router","push","$route","query","redirect","JSON","stringify","initParticles","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","Array","from","length","x","Math","random","y","size","speedX","speedY","color","floor","animate","clearRect","forEach","p","beginPath","arc","PI","fillStyle","fill","o","dist","hypot","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame","mounted","created","passwordChanged","$notify","title","duration","replace"],"sources":["src/views/system/login/login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <!-- 粒子背景画布 -->\r\n    <canvas id=\"particle-canvas\"></canvas>\r\n\r\n    <!-- 左侧内容区域 - 增强版 -->\r\n    <div class=\"left-content\">\r\n      <div class=\"logo-area\" style=\"padding-top: 30px;\">\r\n        <img style=\"width:300px; padding-left:0px; margin-top:20px;\" src=\"@/assets/image/systemlogo.png\" />\r\n        <div class=\"platform-role\">教师 · 管理中枢</div>\r\n      </div>\r\n\r\n      <div class=\"feature-list\">\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-data\"></i>\r\n          <span>学情数据分析</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-notebook-2\"></i>\r\n          <span>课程内容管理</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-check\"></i>\r\n          <span>作业批改系统</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-chat-line-round\"></i>\r\n          <span>师生互动平台</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"quote-area\">\r\n        <p class=\"quote-text\">\"教育不是灌输，而是点燃火焰\"</p>\r\n        <p class=\"quote-author\">—— 苏格拉底 ——</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 右侧登录卡片 -->\r\n    <div class=\"login-card\">\r\n      <h2 class=\"slogan-en\">TEACH WITH INTELLIGENCE</h2>\r\n      <p class=\"slogan-cn\">智能教育管理平台，赋能高效教学</p>\r\n\r\n      <div class=\"divider\"></div>\r\n\r\n      <p class=\"sub-slogan\">精准掌握每位学生的学习轨迹<br>用数据驱动个性化教学方案</p>\r\n\r\n      <!-- 登录方式切换 -->\r\n      <div class=\"login-tabs\">\r\n        <span\r\n          :class=\"['login-type-option', loginType === 'account' ? 'active' : '']\"\r\n          @click=\"switchLoginType('account')\"\r\n        >\r\n          账号密码登录\r\n        </span>\r\n        <span\r\n          :class=\"['login-type-option', loginType === 'email' ? 'active' : '']\"\r\n          @click=\"switchLoginType('email')\"\r\n        >\r\n          邮箱验证码登录\r\n        </span>\r\n      </div>\r\n\r\n      <!-- 账号登录表单 -->\r\n      <el-form\r\n        v-if=\"loginType === 'account'\"\r\n        :model=\"accountForm\"\r\n        :rules=\"accountRules\"\r\n        ref=\"accountFormRef\"\r\n        class=\"login-form\"\r\n      >\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"accountForm.username\"\r\n            placeholder=\"工号/用户名\"\r\n            prefix-icon=\"el-icon-user\"\r\n            @keyup.enter.native=\"handleAccountLogin\"\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            type=\"password\"\r\n            v-model=\"accountForm.password\"\r\n            placeholder=\"密码\"\r\n            prefix-icon=\"el-icon-lock\"\r\n            show-password\r\n            @keyup.enter.native=\"handleAccountLogin\"\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-button type=\"primary\" class=\"login-btn\" @click=\"handleAccountLogin\">\r\n          登 录\r\n        </el-button>\r\n      </el-form>\r\n\r\n      <!-- 邮箱验证码登录表单 -->\r\n      <el-form v-else :model=\"emailForm\" ref=\"emailFormRef\" class=\"login-form\">\r\n        <el-form-item prop=\"email\">\r\n          <el-input\r\n            v-model=\"emailForm.email\"\r\n            placeholder=\"请输入邮箱\"\r\n            prefix-icon=\"el-icon-message\"\r\n            @keyup.enter.native=\"handleEmailLogin\"\r\n          ></el-input>\r\n        </el-form-item>\r\n\r\n        <el-form-item prop=\"code\" style=\"display:flex; align-items:center;\">\r\n          <el-input\r\n            v-model=\"emailForm.code\"\r\n            placeholder=\"验证码\"\r\n            prefix-icon=\"el-icon-key\"\r\n            style=\"flex: 1; margin-right: 10px;\"\r\n            @keyup.enter.native=\"handleEmailLogin\"\r\n          ></el-input>\r\n          <el-button :disabled=\"isSending\" @click=\"sendEmailCode\" style=\"width:140px;\">\r\n            {{ isSending ? countdown + 's 后重发' : '获取验证码' }}\r\n          </el-button>\r\n        </el-form-item>\r\n\r\n        <el-button type=\"primary\" class=\"login-btn\" @click=\"handleEmailLogin\">\r\n          邮箱登录\r\n        </el-button>\r\n      </el-form>\r\n\r\n      <div class=\"footer\">\r\n        <p>—— 让科技赋能每一份教育热忱 ——</p>\r\n        <p class=\"en-footer\">Where Innovation Meets Education</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { login, getUser, sendEmailCode as apiSendEmailCode, loginWithEmail } from '../../../api/api';\r\nimport { setLock } from '@/utils/lock';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      loginType: 'account', // 切换登录方式\r\n\r\n      // 账号登录表单数据\r\n      accountForm: {\r\n        username: '',\r\n        password: '',\r\n      },\r\n\r\n      // 账号登录验证规则\r\n      accountRules: {\r\n        username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\r\n      },\r\n\r\n      // 邮箱登录表单数据\r\n      emailForm: {\r\n        email: '',\r\n        code: '',\r\n      },\r\n\r\n      // 发送验证码状态\r\n      isSending: false,\r\n      countdown: 60,\r\n      timer: null,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    // 切换登录方式\r\n    switchLoginType(type) {\r\n      this.loginType = type;\r\n      this.clearForm();\r\n    },\r\n\r\n    clearForm() {\r\n      this.accountForm.username = '';\r\n      this.accountForm.password = '';\r\n      this.emailForm.email = '';\r\n      this.emailForm.code = '';\r\n      this.resetCountdown();\r\n    },\r\n\r\n    // 账号登录\r\n    handleAccountLogin() {\r\n      this.$refs.accountFormRef.validate(valid => {\r\n        if (!valid) return;\r\n\r\n        this.showLoading('正在登录...');\r\n        login(this.accountForm)\r\n          .then(res => {\r\n            this.$loading().close();\r\n            if (res.code === 1000) {\r\n              this.$message.success('登录成功');\r\n              this.handleLoginSuccess(res);\r\n            } else {\r\n              this.$message.error(res.message || '登录失败');\r\n            }\r\n          })\r\n          .catch(error => {\r\n            this.$loading().close();\r\n            console.error('账号登录错误:', error);\r\n            this.$message.error(error.response?.data?.message || '登录失败');\r\n          });\r\n      });\r\n    },\r\n\r\n    // 邮箱登录\r\n    handleEmailLogin() {\r\n      if (!this.validateEmail(this.emailForm.email)) return;\r\n      if (!this.emailForm.code) {\r\n        this.$message.warning('请输入验证码');\r\n        return;\r\n      }\r\n\r\n      this.showLoading('正在登录...');\r\n      loginWithEmail(this.emailForm.email, this.emailForm.code)\r\n        .then(res => {\r\n          this.$loading().close();\r\n          if (res.code === 1000) {\r\n            this.$message.success('登录成功');\r\n            this.handleLoginSuccess(res);\r\n          } else {\r\n            this.$message.error(res.message || '登录失败');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$loading().close();\r\n          console.error('邮箱登录错误:', error);\r\n          this.$message.error(error.response?.data?.message || '登录失败');\r\n        });\r\n    },\r\n\r\n    // 发送邮箱验证码\r\n    sendEmailCode() {\r\n      if (!this.validateEmail(this.emailForm.email)) return;\r\n\r\n      this.isSending = true;\r\n      this.countdown = 60;\r\n      this.timer = setInterval(() => {\r\n        this.countdown--;\r\n        if (this.countdown <= 0) {\r\n          clearInterval(this.timer);\r\n          this.isSending = false;\r\n        }\r\n      }, 1000);\r\n\r\n      apiSendEmailCode(this.emailForm.email)\r\n        .then(() => {\r\n          this.$message.success('验证码发送成功，请查收邮件');\r\n        })\r\n        .catch(error => {\r\n          clearInterval(this.timer);\r\n          this.isSending = false;\r\n          this.$message.error(error.response?.data?.message || '验证码发送失败');\r\n          console.error('发送验证码失败:', error);\r\n        });\r\n    },\r\n\r\n    resetCountdown() {\r\n      clearInterval(this.timer);\r\n      this.isSending = false;\r\n      this.countdown = 60;\r\n    },\r\n\r\n    validateEmail(email) {\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(email)) {\r\n        this.$message.warning('请输入有效的邮箱格式');\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    showLoading(text) {\r\n      return this.$loading({\r\n        lock: true,\r\n        text,\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)',\r\n      });\r\n    },\r\n\r\n    handleLoginSuccess(res) {\r\n      const token = res.data.token;\r\n      this.$store.commit('user/setToken', token);\r\n      // 可以使用 localStorage 保存token\r\n      localStorage.setItem('user_token', token);\r\n\r\n      this.getUserInfo().then(() => {\r\n        setLock(false);\r\n        this.$router.push(this.$route.query.redirect || '/index');\r\n      });\r\n    },\r\n\r\n    getUserInfo() {\r\n      return getUser()\r\n        .then(res => {\r\n          if (res.code === 1000) {\r\n            this.$store.commit('user/setUser', JSON.stringify(res.data));\r\n            localStorage.setItem('user_info', JSON.stringify(res.data));\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('获取用户信息失败', error);\r\n        });\r\n    },\r\n\r\n    // 粒子动画相关方法保持不变\r\n    initParticles() {\r\n      const canvas = document.getElementById('particle-canvas');\r\n      if (!canvas) return;\r\n\r\n      const ctx = canvas.getContext('2d');\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n\r\n      const particles = Array.from({ length: 80 }, () => ({\r\n        x: Math.random() * canvas.width,\r\n        y: Math.random() * canvas.height,\r\n        size: Math.random() * 3 + 1,\r\n        speedX: Math.random() * 0.3 - 0.15,\r\n        speedY: Math.random() * 0.3 - 0.15,\r\n        color: ['#6A5ACD', '#483D8B', '#4B0082', '#663399'][Math.floor(Math.random() * 4)]\r\n      }));\r\n\r\n      const animate = () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        particles.forEach(p => {\r\n          ctx.beginPath();\r\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\r\n          ctx.fillStyle = p.color;\r\n          ctx.fill();\r\n\r\n          p.x += p.speedX;\r\n          p.y += p.speedY;\r\n\r\n          if (p.x < 0 || p.x > canvas.width) p.speedX *= -1;\r\n          if (p.y < 0 || p.y > canvas.height) p.speedY *= -1;\r\n\r\n          particles.forEach(o => {\r\n            const dist = Math.hypot(p.x - o.x, p.y - o.y);\r\n            if (dist < 120) {\r\n              ctx.beginPath();\r\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - dist / 120})`;\r\n              ctx.lineWidth = 0.3;\r\n              ctx.moveTo(p.x, p.y);\r\n              ctx.lineTo(o.x, o.y);\r\n              ctx.stroke();\r\n            }\r\n          });\r\n        });\r\n\r\n        requestAnimationFrame(animate);\r\n      };\r\n\r\n      animate();\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.initParticles();\r\n  },\r\n\r\n  created() {\r\n    if (this.$route.query.passwordChanged) {\r\n      this.$notify.success({\r\n        title: '提示',\r\n        message: '密码修改成功，请使用新密码登录',\r\n        duration: 5000,\r\n      });\r\n      const query = { ...this.$route.query };\r\n      delete query.passwordChanged;\r\n      this.$router.replace({ ...this.$route, query });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #ffffff;\r\n  overflow: hidden;\r\n  display: flex;\r\n  font-family: 'Microsoft YaHei', sans-serif;\r\n}\r\n\r\n#particle-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n\r\n/* 新增左侧内容区域样式 */\r\n.left-content {\r\n  width: 50%;\r\n  padding: 80px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  z-index: 2;\r\n}\r\n\r\n.logo-area {\r\n  margin-bottom: 80px;\r\n}\r\n\r\n.platform-name {\r\n  font-size: 36px;\r\n  font-weight: bold;\r\n  color: #4B0082;\r\n  letter-spacing: 2px;\r\n  margin-bottom: 15px;\r\n  text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\r\n}\r\n\r\n.platform-role {\r\n  font-size: 24px;\r\n  color: #6A5ACD;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n}\r\n\r\n.feature-list {\r\n  margin: 60px 0;\r\n}\r\n\r\n.feature-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 35px;\r\n  color: #4B0082;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n}\r\n\r\n.feature-item i {\r\n  margin-right: 20px;\r\n  font-size: 28px;\r\n  color: #6A5ACD;\r\n}\r\n\r\n.quote-area {\r\n  color: #555;\r\n  font-style: italic;\r\n  line-height: 1.8;\r\n  margin-top: 60px;\r\n}\r\n\r\n.quote-text {\r\n  font-size: 26px;\r\n  line-height: 1.5;\r\n  margin-bottom: 10px;\r\n  color: #4B0082;\r\n}\r\n\r\n.quote-author {\r\n  text-align: right;\r\n  font-size: 18px;\r\n  color: #9370DB;\r\n  font-weight: 500;\r\n}\r\n\r\n/* 登录卡片样式调整 */\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  width: 450px;\r\n  min-height: 100vh;\r\n  overflow: visible; /* 确保 footer 不被裁剪 */\r\n  padding-bottom: 120px; /* 给 footer 留空间 */\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(5px);\r\n  padding: 100px 50px;\r\n  box-shadow: -5px 0 30px rgba(0, 0, 0, 0.05);\r\n  box-sizing: border-box;\r\n}\r\n\r\n.slogan-en {\r\n  color: #4B0082;\r\n  font-size: 20px;\r\n  line-height: 1.4;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.slogan-cn {\r\n  color: #6A5ACD;\r\n  font-size: px;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.divider {\r\n  width: 50px;\r\n  height: 3px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  margin: 25px 0;\r\n}\r\n\r\n.sub-slogan {\r\n  color: #666;\r\n  line-height: 1.8;\r\n  margin-bottom: 50px;\r\n  font-size: 15px;\r\n}\r\n\r\n.login-form {\r\n  margin-top: 40px;\r\n}\r\n\r\n.custom-input {\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.custom-input >>> .el-input__inner {\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  border: 1px solid #E6E6FA;\r\n  padding-left: 45px;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  transition: all 0.3s;\r\n}\r\n\r\n.custom-input >>> .el-input__inner:focus {\r\n  border-color: #6A5ACD;\r\n  box-shadow: 0 0 0 2px rgba(106, 90, 205, 0.2);\r\n}\r\n\r\n.custom-input >>> .el-input__prefix {\r\n  color: #6A5ACD;\r\n  left: 15px;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  border: none;\r\n  font-size: 16px;\r\n  letter-spacing: 2px;\r\n  margin-top: 10px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.login-btn:hover {\r\n  transform: translateY(-3px);\r\n  box-shadow: 0 5px 15px rgba(106, 90, 205, 0.4);\r\n}\r\n\r\n.footer {\r\n  position: absolute;\r\n  bottom: 40px;\r\n  width: calc(100% - 100px);\r\n  text-align: center;\r\n  color: #6A5ACD;\r\n  font-size: 14px;\r\n}\r\n\r\n.en-footer {\r\n  margin-top: 10px;\r\n  font-style: italic;\r\n  color: #B0C4DE;\r\n}\r\n\r\n/* 新增样式 */\r\n.login-tabs {\r\n  margin-bottom: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.login-tabs >>> .el-radio-button__inner {\r\n  border-radius: 20px;\r\n  margin: 0 5px;\r\n  border: 1px solid #E6E6FA;\r\n  background: rgba(255, 255, 255, 0.9);\r\n  color: #6A5ACD;\r\n}\r\n\r\n.login-tabs >>> .el-radio-button__orig-radio:checked + .el-radio-button__inner {\r\n  background: linear-gradient(to right, #6A5ACD, #483D8B);\r\n  border-color: #6A5ACD;\r\n  box-shadow: none;\r\n}\r\n\r\n.code-input-group {\r\n  display: flex;\r\n  margin-bottom: 25px;\r\n}\r\n\r\n.code-input {\r\n  flex: 1;\r\n  margin-right: 15px;\r\n}\r\n\r\n.send-code-btn {\r\n  width: 140px;\r\n  height: 50px;\r\n  border-radius: 25px;\r\n  background: #E6E6FA;\r\n  color: #6A5ACD;\r\n  border: none;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.send-code-btn:hover {\r\n  background: #D8BFD8;\r\n}\r\n\r\n.send-code-btn:disabled {\r\n  background: #F5F5F5;\r\n  color: #999;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}