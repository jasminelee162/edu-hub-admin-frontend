{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport { login, getUser, sendEmailCode, loginWithEmail } from '../../../api/api';\nimport { setLock } from '@/utils/lock';\nexport default {\n  data() {\n    return {\n      userInfo: {\n        username: '',\n        password: ''\n      },\n      loginType: 'account',\n      // 切换登录方式\n\n      emailInfo: {\n        email: '',\n        code: ''\n      },\n      isSending: false,\n      countdown: 60,\n      timer: null,\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入用户账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入用户密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  mounted() {\n    this.initParticles();\n  },\n  created() {\n    if (this.$route.query.passwordChanged) {\n      this.$notify.success({\n        title: '提示',\n        message: '密码修改成功，请使用新密码登录',\n        duration: 5000\n      });\n      const query = {\n        ...this.$route.query\n      };\n      delete query.passwordChanged;\n      this.$router.replace({\n        ...this.$route,\n        query\n      });\n    }\n  },\n  methods: {\n    clearForm() {\n      this.userInfo.username = '';\n      this.userInfo.password = '';\n      this.emailInfo.email = '';\n      this.emailInfo.code = '';\n      this.isSending = false;\n      this.countdown = 60;\n      if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = null;\n      }\n    },\n    sendCode() {\n      if (!this.emailInfo.email) {\n        this.$message.warning('请输入邮箱');\n        return;\n      }\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(this.emailInfo.email)) {\n        this.$message.warning('请输入有效的邮箱格式');\n        return;\n      }\n      sendEmailCode(this.emailInfo.email).then(() => {\n        this.$message.success('验证码发送成功');\n        this.isSending = true;\n        this.countdown = 60;\n        this.timer = setInterval(() => {\n          this.countdown--;\n          if (this.countdown <= 0) {\n            clearInterval(this.timer);\n            this.isSending = false;\n            this.timer = null;\n          }\n        }, 1000);\n      }).catch(() => {\n        this.$message.error('验证码发送失败');\n      });\n    },\n    toEmailLogin() {\n      const {\n        email,\n        code\n      } = this.emailInfo;\n      if (!email || !code) {\n        this.$message.warning('请填写邮箱和验证码');\n        return;\n      }\n      loginWithEmail(email, code).then(res => {\n        if (res.code === 1000) {\n          this.$message.success('登录成功');\n          const token = res.data.token;\n          localStorage.setItem('user_token', token);\n          this.getUserInfo().then(() => {\n            setLock(false);\n            this.$router.push(this.$route.query.redirect || '/index');\n          });\n        } else {\n          this.$message.error(res.message);\n        }\n      }).catch(() => {\n        this.$message.error('登录失败');\n      });\n    },\n    toLogin() {\n      this.$refs.ruleForm.validate(valid => {\n        if (valid) {\n          login(this.userInfo).then(res => {\n            if (res.code === 1000) {\n              this.$message.success('登录成功');\n              const token = res.data.token;\n              localStorage.setItem('user_token', token);\n              this.getUserInfo().then(() => {\n                setLock(false);\n                this.$router.push(this.$route.query.redirect || '/index');\n              });\n            } else {\n              this.$message.error(res.message);\n            }\n          }).catch(() => {\n            this.$message.error('登录失败');\n          });\n        }\n      });\n    },\n    getUserInfo() {\n      return getUser().then(res => {\n        if (res.code === 1000) {\n          this.$store.commit('user/setUser', JSON.stringify(res.data));\n          localStorage.setItem('user_info', JSON.stringify(res.data));\n        }\n      });\n    },\n    // 粒子动画初始化\n    initParticles() {\n      const canvas = document.getElementById('particle-canvas');\n      if (!canvas) return;\n      const ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      const particles = Array.from({\n        length: 80\n      }, () => ({\n        x: Math.random() * canvas.width,\n        y: Math.random() * canvas.height,\n        size: Math.random() * 3 + 1,\n        speedX: Math.random() * 0.3 - 0.15,\n        speedY: Math.random() * 0.3 - 0.15,\n        color: ['#6A5ACD', '#483D8B', '#4B0082', '#663399'][Math.floor(Math.random() * 4)]\n      }));\n      const animate = () => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        particles.forEach(p => {\n          ctx.beginPath();\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\n          ctx.fillStyle = p.color;\n          ctx.fill();\n          p.x += p.speedX;\n          p.y += p.speedY;\n          if (p.x < 0 || p.x > canvas.width) p.speedX *= -1;\n          if (p.y < 0 || p.y > canvas.height) p.speedY *= -1;\n          particles.forEach(o => {\n            const dist = Math.hypot(p.x - o.x, p.y - o.y);\n            if (dist < 120) {\n              ctx.beginPath();\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - dist / 120})`;\n              ctx.lineWidth = 0.3;\n              ctx.moveTo(p.x, p.y);\n              ctx.lineTo(o.x, o.y);\n              ctx.stroke();\n            }\n          });\n        });\n        requestAnimationFrame(animate);\n      };\n      animate();\n    }\n  }\n};","map":{"version":3,"names":["login","getUser","sendEmailCode","loginWithEmail","setLock","data","userInfo","username","password","loginType","emailInfo","email","code","isSending","countdown","timer","rules","required","message","trigger","mounted","initParticles","created","$route","query","passwordChanged","$notify","success","title","duration","$router","replace","methods","clearForm","clearInterval","sendCode","$message","warning","emailRegex","test","then","setInterval","catch","error","toEmailLogin","res","token","localStorage","setItem","getUserInfo","push","redirect","toLogin","$refs","ruleForm","validate","valid","$store","commit","JSON","stringify","canvas","document","getElementById","ctx","getContext","width","window","innerWidth","height","innerHeight","particles","Array","from","length","x","Math","random","y","size","speedX","speedY","color","floor","animate","clearRect","forEach","p","beginPath","arc","PI","fillStyle","fill","o","dist","hypot","strokeStyle","lineWidth","moveTo","lineTo","stroke","requestAnimationFrame"],"sources":["src/views/system/login/login.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <!-- 粒子背景画布 -->\r\n    <canvas id=\"particle-canvas\"></canvas>\r\n\r\n    <!-- 左侧内容区域 - 增强版 -->\r\n    <div class=\"left-content\">\r\n      <div class=\"logo-area\" style=\"padding-top: 30px;\">\r\n        <img style=\"width:300px; padding-left:0px; margin-top:20px;\" src=\"@/assets/image/systemlogo.png\" />\r\n        <div class=\"platform-role\">教师 · 管理中枢</div>\r\n      </div>\r\n\r\n      <div class=\"feature-list\">\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-data\"></i>\r\n          <span>学情数据分析</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-notebook-2\"></i>\r\n          <span>课程内容管理</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-s-check\"></i>\r\n          <span>作业批改系统</span>\r\n        </div>\r\n        <div class=\"feature-item\">\r\n          <i class=\"el-icon-chat-line-round\"></i>\r\n          <span>师生互动平台</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"quote-area\">\r\n        <p class=\"quote-text\">\"教育不是灌输，而是点燃火焰\"</p>\r\n        <p class=\"quote-author\">—— 苏格拉底 ——</p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 右侧登录卡片 -->\r\n    <div class=\"login-card\">\r\n      <h2 class=\"slogan-en\">TEACH WITH INTELLIGENCE</h2>\r\n      <p class=\"slogan-cn\">智能教育管理平台，赋能高效教学</p>\r\n\r\n      <div class=\"divider\"></div>\r\n\r\n      <p class=\"sub-slogan\">精准掌握每位学生的学习轨迹<br>用数据驱动个性化教学方案</p>\r\n\r\n      <!-- 登录方式切换 -->\r\n      <div class=\"login-type-switch\">\r\n        <span\r\n          :class=\"['login-type-option', loginType === 'account' ? 'active' : '']\"\r\n          @click=\"loginType = 'account'; clearForm()\"\r\n        >\r\n          账号密码登录\r\n        </span>\r\n        <span\r\n          :class=\"['login-type-option', loginType === 'email' ? 'active' : '']\"\r\n          @click=\"loginType = 'email'; clearForm()\"\r\n        >\r\n          邮箱验证码登录\r\n        </span>\r\n      </div>\r\n\r\n      <!-- 账号密码登录表单 -->\r\n      <el-form v-if=\"loginType === 'account'\" :model=\"userInfo\" :rules=\"rules\" ref=\"ruleForm\" style=\"width: 100%;\">\r\n        <el-form-item prop=\"username\">\r\n          <el-input v-model=\"userInfo.username\" placeholder=\"请输入用户账号\" @keyup.enter.native=\"toLogin\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input type=\"password\" v-model=\"userInfo.password\" placeholder=\"请输入用户密码\" @keyup.enter.native=\"toLogin\"></el-input>\r\n        </el-form-item>\r\n        <div class=\"login-btn\" @click=\"toLogin\"><div>登 录</div></div>\r\n      </el-form>\r\n\r\n      <!-- 邮箱验证码登录表单 -->\r\n      <el-form v-else :model=\"emailInfo\" ref=\"emailForm\" style=\"width: 100%;\">\r\n        <el-form-item>\r\n          <el-input v-model=\"emailInfo.email\" placeholder=\"请输入邮箱\" @keyup.enter.native=\"toEmailLogin\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-input\r\n            v-model=\"emailInfo.code\"\r\n            placeholder=\"请输入验证码\"\r\n            @keyup.enter.native=\"toEmailLogin\"\r\n            style=\"width: 60%; margin-right: 8px;\"\r\n          />\r\n          <el-button :disabled=\"isSending\" @click=\"sendCode\">\r\n            {{ isSending ? countdown + 's 后重发' : '获取验证码' }}\r\n          </el-button>\r\n        </el-form-item>\r\n        <div class=\"login-btn\" @click=\"toEmailLogin\"><div>登 录</div></div>\r\n      </el-form>\r\n\r\n      <div class=\"footer\">\r\n        <p>—— 让科技赋能每一份教育热忱 ——</p>\r\n        <p class=\"en-footer\">Where Innovation Meets Education</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { login, getUser, sendEmailCode, loginWithEmail } from '../../../api/api';\r\nimport { setLock } from '@/utils/lock';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userInfo: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      loginType: 'account', // 切换登录方式\r\n\r\n      emailInfo: {\r\n        email: '',\r\n        code: ''\r\n      },\r\n      isSending: false,\r\n      countdown: 60,\r\n      timer: null,\r\n      rules: {\r\n        username: [{ required: true, message: '请输入用户账号', trigger: 'blur' }],\r\n        password: [{ required: true, message: '请输入用户密码', trigger: 'blur' }]\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.initParticles();\r\n  },\r\n  created() {\r\n    if (this.$route.query.passwordChanged) {\r\n      this.$notify.success({\r\n        title: '提示',\r\n        message: '密码修改成功，请使用新密码登录',\r\n        duration: 5000\r\n      });\r\n      const query = { ...this.$route.query };\r\n      delete query.passwordChanged;\r\n      this.$router.replace({ ...this.$route, query });\r\n    }\r\n  },\r\n  methods: {\r\n    clearForm() {\r\n      this.userInfo.username = '';\r\n      this.userInfo.password = '';\r\n      this.emailInfo.email = '';\r\n      this.emailInfo.code = '';\r\n      this.isSending = false;\r\n      this.countdown = 60;\r\n      if (this.timer) {\r\n        clearInterval(this.timer);\r\n        this.timer = null;\r\n      }\r\n    },\r\n\r\n    sendCode() {\r\n      if (!this.emailInfo.email) {\r\n        this.$message.warning('请输入邮箱');\r\n        return;\r\n      }\r\n\r\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      if (!emailRegex.test(this.emailInfo.email)) {\r\n        this.$message.warning('请输入有效的邮箱格式');\r\n        return;\r\n      }\r\n\r\n      sendEmailCode(this.emailInfo.email)\r\n        .then(() => {\r\n          this.$message.success('验证码发送成功');\r\n          this.isSending = true;\r\n          this.countdown = 60;\r\n          this.timer = setInterval(() => {\r\n            this.countdown--;\r\n            if (this.countdown <= 0) {\r\n              clearInterval(this.timer);\r\n              this.isSending = false;\r\n              this.timer = null;\r\n            }\r\n          }, 1000);\r\n        })\r\n        .catch(() => {\r\n          this.$message.error('验证码发送失败');\r\n        });\r\n    },\r\n\r\n    toEmailLogin() {\r\n      const { email, code } = this.emailInfo;\r\n      if (!email || !code) {\r\n        this.$message.warning('请填写邮箱和验证码');\r\n        return;\r\n      }\r\n\r\n      loginWithEmail(email, code)\r\n        .then((res) => {\r\n          if (res.code === 1000) {\r\n            this.$message.success('登录成功');\r\n            const token = res.data.token;\r\n            localStorage.setItem('user_token', token);\r\n\r\n            this.getUserInfo().then(() => {\r\n              setLock(false);\r\n              this.$router.push(this.$route.query.redirect || '/index');\r\n            });\r\n          } else {\r\n            this.$message.error(res.message);\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.$message.error('登录失败');\r\n        });\r\n    },\r\n\r\n    toLogin() {\r\n      this.$refs.ruleForm.validate((valid) => {\r\n        if (valid) {\r\n          login(this.userInfo)\r\n            .then((res) => {\r\n              if (res.code === 1000) {\r\n                this.$message.success('登录成功');\r\n                const token = res.data.token;\r\n                localStorage.setItem('user_token', token);\r\n\r\n                this.getUserInfo().then(() => {\r\n                  setLock(false);\r\n                  this.$router.push(this.$route.query.redirect || '/index');\r\n                });\r\n              } else {\r\n                this.$message.error(res.message);\r\n              }\r\n            })\r\n            .catch(() => {\r\n              this.$message.error('登录失败');\r\n            });\r\n        }\r\n      });\r\n    },\r\n\r\n    getUserInfo() {\r\n      return getUser().then((res) => {\r\n        if (res.code === 1000) {\r\n          this.$store.commit('user/setUser', JSON.stringify(res.data));\r\n          localStorage.setItem('user_info', JSON.stringify(res.data));\r\n        }\r\n      });\r\n    },\r\n\r\n    // 粒子动画初始化\r\n    initParticles() {\r\n      const canvas = document.getElementById('particle-canvas');\r\n      if (!canvas) return;\r\n\r\n      const ctx = canvas.getContext('2d');\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n\r\n      const particles = Array.from({ length: 80 }, () => ({\r\n        x: Math.random() * canvas.width,\r\n        y: Math.random() * canvas.height,\r\n        size: Math.random() * 3 + 1,\r\n        speedX: Math.random() * 0.3 - 0.15,\r\n        speedY: Math.random() * 0.3 - 0.15,\r\n        color: ['#6A5ACD', '#483D8B', '#4B0082', '#663399'][Math.floor(Math.random() * 4)]\r\n      }));\r\n\r\n      const animate = () => {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        particles.forEach((p) => {\r\n          ctx.beginPath();\r\n          ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\r\n          ctx.fillStyle = p.color;\r\n          ctx.fill();\r\n\r\n          p.x += p.speedX;\r\n          p.y += p.speedY;\r\n\r\n          if (p.x < 0 || p.x > canvas.width) p.speedX *= -1;\r\n          if (p.y < 0 || p.y > canvas.height) p.speedY *= -1;\r\n\r\n          particles.forEach((o) => {\r\n            const dist = Math.hypot(p.x - o.x, p.y - o.y);\r\n            if (dist < 120) {\r\n              ctx.beginPath();\r\n              ctx.strokeStyle = `rgba(106, 90, 205, ${1 - dist / 120})`;\r\n              ctx.lineWidth = 0.3;\r\n              ctx.moveTo(p.x, p.y);\r\n              ctx.lineTo(o.x, o.y);\r\n              ctx.stroke();\r\n            }\r\n          });\r\n        });\r\n\r\n        requestAnimationFrame(animate);\r\n      };\r\n\r\n      animate();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #f5f7fa;\r\n  overflow: hidden;\r\n  display: flex;\r\n  font-family: 'Microsoft YaHei', sans-serif;\r\n}\r\n\r\n/* 粒子背景 */\r\n#particle-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1;\r\n}\r\n\r\n/* 左侧内容区域 */\r\n.left-content {\r\n  width: 50%;\r\n  padding: 80px 60px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background: linear-gradient(135deg, #6a5acd 0%, #483d8b 100%);\r\n  color: #fff;\r\n  z-index: 2;\r\n  box-sizing: border-box;\r\n  border-top-right-radius: 60px;\r\n  border-bottom-right-radius: 60px;\r\n  box-shadow: 6px 0 30px rgb(72 61 139 / 0.3);\r\n}\r\n\r\n.logo-area img {\r\n  width: 280px;\r\n  margin-bottom: 12px;\r\n}\r\n\r\n.platform-role {\r\n  font-size: 22px;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  color: #c4b9ff;\r\n  margin-bottom: 70px;\r\n}\r\n\r\n.feature-list {\r\n  margin-bottom: 50px;\r\n}\r\n\r\n.feature-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 30px;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n  color: #dcd6ff;\r\n  transition: color 0.3s;\r\n}\r\n.feature-item:hover {\r\n  color: #fff;\r\n}\r\n.feature-item i {\r\n  font-size: 28px;\r\n  margin-right: 18px;\r\n  color: #9f8aff;\r\n}\r\n\r\n/* 引用区 */\r\n.quote-area {\r\n  margin-top: auto;\r\n  font-style: italic;\r\n  color: #b8b0ff;\r\n  font-size: 20px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.quote-author {\r\n  text-align: right;\r\n  margin-top: 10px;\r\n  font-weight: 600;\r\n  color: #a89dff;\r\n}\r\n\r\n/* 登录卡片 */\r\n.login-card {\r\n  position: relative;\r\n  z-index: 2;\r\n  width: 460px;\r\n  min-height: 100vh;\r\n  padding: 100px 60px;\r\n  background: #ffffff;\r\n  box-shadow: 0 20px 60px rgba(105, 95, 255, 0.3);\r\n  border-radius: 24px 0 0 24px;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.slogan-en {\r\n  font-weight: 700;\r\n  font-size: 22px;\r\n  color: #5646e6;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.slogan-cn {\r\n  font-size: 16px;\r\n  color: #8f85ff;\r\n  margin-bottom: 28px;\r\n  font-weight: 500;\r\n}\r\n\r\n.divider {\r\n  width: 64px;\r\n  height: 3px;\r\n  background: linear-gradient(to right, #6a5acd, #483d8b);\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.sub-slogan {\r\n  font-size: 14px;\r\n  line-height: 1.6;\r\n  color: #666;\r\n  margin-bottom: 40px;\r\n  user-select: none;\r\n}\r\n\r\n/* 登录方式切换标签 */\r\n.login-type-switch {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 36px;\r\n  font-family: '微软雅黑', sans-serif;\r\n  user-select: none;\r\n}\r\n\r\n.login-type-option {\r\n  flex: 1;\r\n  padding: 12px 0;\r\n  text-align: center;\r\n  font-size: 15px;\r\n  cursor: pointer;\r\n  border-bottom: 3px solid transparent;\r\n  color: #999;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.login-type-option.active {\r\n  color: #6a5acd;\r\n  font-weight: 600;\r\n  border-color: #6a5acd;\r\n}\r\n\r\n.login-type-option:not(.active):hover {\r\n  color: #a49fff;\r\n}\r\n\r\n/* 表单元素整体风格 */\r\n.el-form {\r\n  width: 100%;\r\n}\r\n\r\n.el-input {\r\n  border-radius: 28px !important;\r\n  box-shadow: 0 2px 8px rgb(111 99 255 / 0.18);\r\n}\r\n\r\n.el-input__inner {\r\n  border-radius: 28px !important;\r\n  padding: 12px 20px !important;\r\n  font-size: 15px !important;\r\n  transition: all 0.3s;\r\n  border: 1.8px solid #bbb !important;\r\n}\r\n\r\n.el-input__inner:focus {\r\n  border-color: #6a5acd !important;\r\n  box-shadow: 0 0 10px #8c85ff;\r\n}\r\n\r\n/* 验证码输入与按钮组 */\r\n.el-form-item {\r\n  margin-bottom: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.el-form-item > .el-input {\r\n  flex-grow: 1;\r\n  margin-right: 12px;\r\n}\r\n\r\n/* 发送验证码按钮 */\r\n.el-button {\r\n  min-width: 120px;\r\n  height: 40px;\r\n  padding: 0 25px;\r\n  background: linear-gradient(90deg, #6a5acd, #5646e6);\r\n  border: none;\r\n  border-radius: 28px;\r\n  color: white;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n  box-shadow: 0 8px 12px rgb(112 102 255 / 0.5);\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  user-select: none;\r\n}\r\n\r\n.el-button:hover:not(:disabled) {\r\n  background: linear-gradient(90deg, #5646e6, #4238c9);\r\n  box-shadow: 0 10px 20px rgb(86 70 230 / 0.7);\r\n}\r\n\r\n.el-button:disabled {\r\n  background: #c6c4db !important;\r\n  color: #9a98a9 !important;\r\n  box-shadow: none !important;\r\n  cursor: not-allowed !important;\r\n}\r\n\r\n/* 登录按钮 */\r\n.login-btn {\r\n  margin: 0 auto;\r\n  width: 140px;\r\n  height: 45px;\r\n  background: linear-gradient(90deg, #6a5acd, #5646e6);\r\n  border-radius: 28px;\r\n  color: white;\r\n  font-weight: 700;\r\n  font-size: 18px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  user-select: none;\r\n  box-shadow: 0 10px 20px rgb(105 95 255 / 0.6);\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.login-btn:hover {\r\n  background: linear-gradient(90deg, #5646e6, #4238c9);\r\n  box-shadow: 0 14px 26px rgb(86 70 230 / 0.85);\r\n}\r\n\r\n/* 表单item下提示 */\r\n.el-form-item__error {\r\n  font-size: 13px;\r\n  color: #e55d6a;\r\n  margin-top: 4px;\r\n}\r\n\r\n/* 底部版权 */\r\n.footer {\r\n  margin-top: auto;\r\n  font-size: 13px;\r\n  text-align: center;\r\n  color: #999;\r\n  user-select: none;\r\n  padding-bottom: 12px;\r\n}\r\n.en-footer {\r\n  margin-top: 4px;\r\n  font-style: italic;\r\n  color: #bbb;\r\n}\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}