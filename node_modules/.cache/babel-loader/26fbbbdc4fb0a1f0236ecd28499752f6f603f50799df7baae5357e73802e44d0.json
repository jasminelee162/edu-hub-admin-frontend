{"ast":null,"code":"import { editApeMessage, getApeMessageById } from '../../../api/api';\nexport default {\n  data() {\n    return {\n      form: {\n        userId: \"\",\n        userName: \"\",\n        content: \"\",\n        answer: \"\"\n      },\n      rules: {\n        answer: [{\n          required: true,\n          message: '请输入回复内容',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateVisible', 'updateId'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          editApeMessage(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\",\n                customClass: 'tech-notification'\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message,\n                customClass: 'tech-notification'\n              });\n            }\n          });\n        }\n      });\n    },\n    handleClose() {\n      this.$emit(\"updateFalse\");\n    }\n  },\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getApeMessageById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            this.form = res.data;\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message,\n              customClass: 'tech-notification'\n            });\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["editApeMessage","getApeMessageById","data","form","userId","userName","content","answer","rules","required","message","trigger","props","methods","submit","$refs","validate","valid","then","res","code","$notify","success","title","customClass","handleClose","error","$emit","watch","updateId","newVal","id"],"sources":["src/components/system/message/updateMessage.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-dialog \r\n      title=\"编辑留言\" \r\n      width=\"45%\" \r\n      :destroy-on-close=\"true\" \r\n      :visible.sync=\"updateVisible\" \r\n      :before-close=\"handleClose\"\r\n      class=\"tech-dialog\">\r\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"24\">\r\n            <div class=\"form-item-container\">\r\n              <div class=\"label-with-icon\">\r\n                <i class=\"el-icon-chat-line-round bubble-icon question-icon\"></i>\r\n                <span class=\"tech-form-label\">\r\n                  提问内容:\r\n                </span>\r\n              </div>\r\n              <el-form-item prop=\"content\" class=\"tech-form-item\">\r\n                <el-input \r\n                  disabled\r\n                  type=\"textarea\" \r\n                  v-model=\"form.content\" \r\n                  :rows=\"3\"\r\n                  size=\"small\" \r\n                  placeholder=\"提问内容\" \r\n                  autocomplete=\"off\"\r\n                  class=\"tech-textarea\">\r\n                </el-input>\r\n              </el-form-item>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"24\">\r\n            <div class=\"form-item-container\">\r\n              <div class=\"label-with-icon\">\r\n                <i class=\"el-icon-chat-dot-round bubble-icon reply-icon\"></i>\r\n                <span class=\"tech-form-label\">\r\n                  回复内容:\r\n                </span>\r\n              </div>\r\n              <el-form-item prop=\"answer\" class=\"tech-form-item\">\r\n                <el-input \r\n                  type=\"textarea\" \r\n                  v-model=\"form.answer\" \r\n                  :rows=\"4\"\r\n                  size=\"small\" \r\n                  placeholder=\"请输入回复内容\" \r\n                  autocomplete=\"off\"\r\n                  class=\"tech-textarea\">\r\n                </el-input>\r\n              </el-form-item>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n      </el-form>\r\n      <div slot=\"footer\" class=\"tech-dialog-footer\">\r\n        <el-button \r\n          size=\"small\" \r\n          @click=\"handleClose\"\r\n          class=\"tech-cancel-btn\">\r\n          取 消\r\n        </el-button>\r\n        <el-button \r\n          size=\"small\" \r\n          type=\"primary\" \r\n          @click=\"submit\"\r\n          class=\"tech-confirm-btn\">\r\n          确 定\r\n        </el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {editApeMessage,getApeMessageById} from '../../../api/api'\r\nexport default {\r\n  data() {\r\n    return{\r\n      form: {\r\n        userId: \"\",\r\n        userName: \"\",\r\n        content: \"\",\r\n        answer: \"\",\r\n      },\r\n      rules: {\r\n        answer: [\r\n          { required: true, message: '请输入回复内容', trigger: 'blur' },\r\n        ],\r\n      },\r\n    }\r\n  },\r\n  props: ['updateVisible','updateId'],\r\n  methods: {\r\n    submit() {\r\n      this.$refs[\"ruleForm\"].validate((valid) => {\r\n        if (valid) {\r\n          editApeMessage(this.form).then(res => {\r\n            if(res.code == 1000) {\r\n              this.$notify.success({\r\n                title: '成功',\r\n                message: \"保存成功\",\r\n                customClass: 'tech-notification'\r\n              });\r\n              this.handleClose();\r\n            } else {\r\n              this.$notify.error({\r\n                title: '错误',\r\n                message: res.message,\r\n                customClass: 'tech-notification'\r\n              });\r\n            }\r\n          })\r\n        }\r\n      });\r\n    },\r\n    handleClose() {\r\n      this.$emit(\"updateFalse\")\r\n    },\r\n  },\r\n  watch: {\r\n    updateId(newVal) {\r\n      if(newVal) {\r\n        getApeMessageById({id:newVal}).then(res => {\r\n          if(res.code == 1000) {\r\n            this.form = res.data\r\n          } else {\r\n            this.$notify.error({\r\n              title: '错误',\r\n              message: res.message,\r\n              customClass: 'tech-notification'\r\n            });\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.form-item-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.label-with-icon {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.tech-form-label {\r\n  font-family: 'Microsoft YaHei';\r\n  font-size: 14px;\r\n  color: #4A2B90;\r\n  font-weight: 500;\r\n  margin-left: 8px;\r\n}\r\n\r\n.bubble-icon {\r\n  font-size: 16px;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n}\r\n\r\n.question-icon {\r\n  color: white;\r\n  background-color: #7B68EE;\r\n}\r\n\r\n.reply-icon {\r\n  color: white;\r\n  background-color: #FF6B6B;\r\n}\r\n\r\n.tech-form-item {\r\n  margin-bottom: 0;\r\n}\r\n\r\n.tech-dialog-footer {\r\n  text-align: right;\r\n  padding: 15px 20px 10px;\r\n  border-top: 1px solid #F0EEF7;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 全局对话框样式 */\r\n.tech-dialog {\r\n  border-radius: 12px;\r\n}\r\n\r\n.tech-dialog .el-dialog__header {\r\n  border-bottom: 1px solid #F0EEF7;\r\n  padding: 15px 20px;\r\n}\r\n\r\n.tech-dialog .el-dialog__title {\r\n  color: #4A2B90;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n}\r\n\r\n.tech-dialog .el-dialog__body {\r\n  padding: 20px;\r\n}\r\n\r\n/* 输入框样式 */\r\n.tech-textarea .el-textarea__inner {\r\n  border-radius: 8px;\r\n  border: 1px solid #D8D8E5;\r\n  color: #5F4B8B;\r\n  background-color: #F9F8FD;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.tech-textarea .el-textarea__inner:focus {\r\n  border-color: #7B68EE;\r\n  box-shadow: 0 0 0 2px rgba(123, 104, 238, 0.2);\r\n}\r\n\r\n/* 按钮样式 */\r\n.tech-confirm-btn {\r\n  background: linear-gradient(135deg, #7B68EE, #9370DB);\r\n  border: none;\r\n  border-radius: 20px;\r\n  color: white;\r\n  padding: 8px 20px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.tech-confirm-btn:hover {\r\n  background: linear-gradient(135deg, #6A5ACD, #7B68EE);\r\n  box-shadow: 0 4px 8px rgba(123, 104, 238, 0.3);\r\n}\r\n\r\n.tech-cancel-btn {\r\n  border-radius: 20px;\r\n  color: #7B68EE;\r\n  border: 1px solid #D8D8E5;\r\n  background: #F5F5FA;\r\n  padding: 8px 20px;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.tech-cancel-btn:hover {\r\n  color: #6A5ACD;\r\n  border-color: #C7C7D5;\r\n  background: #EDEDF7;\r\n}\r\n\r\n/* 通知样式 */\r\n.tech-notification {\r\n  border-radius: 8px;\r\n  border-left: 4px solid #7B68EE;\r\n}\r\n</style>"],"mappings":"AA4EA,SAAAA,cAAA,EAAAC,iBAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,MAAA;QACAC,QAAA;QACAC,OAAA;QACAC,MAAA;MACA;MACAC,KAAA;QACAD,MAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,KAAA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAjB,cAAA,MAAAG,IAAA,EAAAe,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;gBACAC,KAAA;gBACAb,OAAA;gBACAc,WAAA;cACA;cACA,KAAAC,WAAA;YACA;cACA,KAAAJ,OAAA,CAAAK,KAAA;gBACAH,KAAA;gBACAb,OAAA,EAAAS,GAAA,CAAAT,OAAA;gBACAc,WAAA;cACA;YACA;UACA;QACA;MACA;IACA;IACAC,YAAA;MACA,KAAAE,KAAA;IACA;EACA;EACAC,KAAA;IACAC,SAAAC,MAAA;MACA,IAAAA,MAAA;QACA7B,iBAAA;UAAA8B,EAAA,EAAAD;QAAA,GAAAZ,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACA,KAAAjB,IAAA,GAAAgB,GAAA,CAAAjB,IAAA;UACA;YACA,KAAAmB,OAAA,CAAAK,KAAA;cACAH,KAAA;cACAb,OAAA,EAAAS,GAAA,CAAAT,OAAA;cACAc,WAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}