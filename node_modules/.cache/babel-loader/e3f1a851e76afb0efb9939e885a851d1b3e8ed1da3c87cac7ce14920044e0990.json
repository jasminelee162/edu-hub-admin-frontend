{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array-buffer.detached.js\";\nimport \"core-js/modules/es.array-buffer.transfer.js\";\nimport \"core-js/modules/es.array-buffer.transfer-to-fixed-length.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { mapState } from 'vuex';\nimport { getLock, setLock } from '@/utils/lock';\nimport { verPassword } from '@/api/api';\nimport elAsside from \"@/components/layout/aside\";\nimport elMain from \"@/components/layout/main\";\nimport elHeader from \"@/components/layout/header\";\nimport { uploadTemplate, getTemplates, deleteTemplate, getTemplateContent } from '@/api/api';\nimport { renderAsync } from 'docx-preview';\nexport default {\n  name: \"index\",\n  data() {\n    return {\n      lock: 0,\n      pass: \"\",\n      loading: true,\n      selected: [],\n      search: {\n        name: \"\",\n        dateRange: [],\n        pageNumber: 1,\n        pageSize: 10\n      },\n      total: 0,\n      tableData: []\n    };\n  },\n  components: {\n    elAsside,\n    elMain,\n    elHeader\n  },\n  computed: {\n    ...mapState({\n      activeMenuArrary: state => state.menu.activeMenuArrary,\n      activeMenu: state => state.menu.activeMenu\n    })\n  },\n  methods: {\n    leftScroll() {\n      var container = document.getElementById('menu');\n      container.scrollLeft -= 100;\n    },\n    rightScroll() {\n      var container = document.getElementById('menu');\n      container.scrollLeft += 100;\n    },\n    openMenu(url) {\n      if (this.activeMenu != url) {\n        this.$router.push({\n          path: url\n        });\n        this.$store.commit('menu/setActiveMenu', url);\n      }\n    },\n    closeMenu(url) {\n      var index = this.activeMenuArrary.length - 1;\n      for (let i = 0; i < this.activeMenuArrary.length; i++) {\n        if (this.activeMenuArrary[i].url == url) {\n          index = i;\n          break;\n        }\n      }\n      if (this.activeMenu == url) {\n        this.$router.push({\n          path: this.activeMenuArrary[index - 1].url\n        });\n        this.$store.commit('menu/setActiveMenu', this.activeMenuArrary[index - 1].url);\n      }\n      this.$store.commit('menu/reduceActiveMenu', index);\n      this.$bus.$emit(\"clearKeepAlive\", url);\n    },\n    unlock() {\n      if (!this.pass) {\n        this.$message({\n          message: '请输入密码验证',\n          type: 'warning'\n        });\n        return;\n      }\n      verPassword({\n        password: this.pass\n      }).then(res => {\n        if (res.code == 1000) {\n          this.$message({\n            message: '验证通过',\n            type: 'success'\n          });\n          this.pass = \"\";\n          this.$bus.$emit('lock', 0);\n        } else {\n          this.$message({\n            message: res.message,\n            type: 'error'\n          });\n        }\n      });\n    },\n    // 表格头部样式\n    tableHeaderStyle() {\n      return {\n        'color': '#4A2B90',\n        'background-color': '#ECE9F4',\n        'font-weight': 'bold',\n        'border-bottom': '1px solid #7B68EE'\n      };\n    },\n    // 表格行样式\n    tableRowStyle() {\n      return {\n        'color': '#5F4B8B',\n        'font-size': '14px',\n        'border-bottom': '1px solid #F0EEF7'\n      };\n    },\n    // 上传前校验\n    beforeUpload(file) {\n      const isLt10M = file.size / 1024 / 1024 < 10;\n      if (!isLt10M) {\n        this.$message.error('上传文件大小不能超过10MB!');\n        return false;\n      }\n      const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation', 'image/jpeg', 'image/png'];\n      if (!allowedTypes.includes(file.type)) {\n        this.$message.error('只支持上传PDF、Word、Excel、PPT、JPG和PNG文件!');\n        return false;\n      }\n      return true;\n    },\n    // 文件上传方法\n    uploadFile({\n      file,\n      onProgress,\n      onSuccess,\n      onError\n    }) {\n      const formData = new FormData();\n      formData.append('file', file);\n      uploadTemplate(formData, {\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          onProgress({\n            percent: percentCompleted\n          });\n        }\n      }).then(res => {\n        if (res.code === 1000) {\n          this.$notify.success({\n            title: '成功',\n            message: '上传成功'\n          });\n          this.query();\n          onSuccess(res);\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '上传失败'\n          });\n          onError(new Error(res.message || '上传失败'));\n        }\n      }).catch(error => {\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '上传失败'\n        });\n        onError(error);\n      });\n    },\n    // 查看内容 在线预览docx\n    viewContent(id) {\n      this.loading = true;\n      getTemplateContent({\n        id\n      }).then(res => {\n        this.loading = false;\n        if (res.code !== 1000) {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '获取内容失败'\n          });\n          return;\n        }\n        const template = this.tableData.find(item => item.id === id);\n        const data = res.data;\n        const fileType = (data.fileType || template?.fileType || '').toString().toLowerCase().replace('.', '').trim();\n        if (!data.fileContent) {\n          this.$message.error('文件内容为空');\n          return;\n        }\n        if (!fileType) {\n          this.$alert('无法识别文件类型，请下载查看', '提示', {\n            confirmButtonText: '下载',\n            callback: () => this.downloadFile(id)\n          });\n          return;\n        }\n        const mimeType = this.getMimeType(fileType);\n        try {\n          const blob = this.base64ToBlob(data.fileContent, mimeType);\n          if (['pdf'].includes(fileType)) {\n            window.open(URL.createObjectURL(blob), '_blank');\n          } else if (['jpg', 'jpeg', 'png', 'gif'].includes(fileType)) {\n            const imgWindow = window.open('', '_blank');\n            imgWindow.document.write(`<img src=\"${URL.createObjectURL(blob)}\" style=\"max-width:100%\"/>`);\n          } else if (fileType === 'docx') {\n            this.showDocx(data.fileContent);\n          } else {\n            this.$alert(`不支持预览 ${fileType} 格式文件`, '提示', {\n              confirmButtonText: '下载',\n              callback: () => this.downloadFile(id)\n            });\n          }\n        } catch (e) {\n          console.error('预览处理出错:', e);\n          this.$notify.error({\n            title: '错误',\n            message: '文件处理失败: ' + e.message\n          });\n        }\n      }).catch(error => {\n        this.loading = false;\n        console.error('请求出错:', error);\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '获取内容失败'\n        });\n      });\n    },\n    //文件二进制转化\n    base64ToBlob(base64Data, mimeType = '') {\n      const base64WithoutPrefix = base64Data.replace(/^data:\\w+\\/\\w+;base64,/, '');\n      const byteCharacters = atob(base64WithoutPrefix);\n      const byteArrays = [];\n      for (let offset = 0; offset < byteCharacters.length; offset += 512) {\n        const slice = byteCharacters.slice(offset, offset + 512);\n        const byteNumbers = new Array(slice.length);\n        for (let i = 0; i < slice.length; i++) {\n          byteNumbers[i] = slice.charCodeAt(i);\n        }\n        byteArrays.push(new Uint8Array(byteNumbers));\n      }\n      return new Blob(byteArrays, {\n        type: mimeType\n      });\n    },\n    getMimeType(fileType) {\n      const map = {\n        pdf: 'application/pdf',\n        jpg: 'image/jpeg',\n        jpeg: 'image/jpeg',\n        png: 'image/png',\n        txt: 'text/plain',\n        doc: 'application/msword',\n        docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        ppt: 'application/vnd.ms-powerpoint',\n        pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n        xls: 'application/vnd.ms-excel',\n        xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        gif: 'image/gif',\n        svg: 'image/svg+xml',\n        mp4: 'video/mp4',\n        webm: 'video/webm'\n      };\n      return map[fileType] || 'application/octet-stream';\n    },\n    //pptx excel docx预览\n    showDocx(fileContentBase64) {\n      const blob = this.base64ToBlob(fileContentBase64, 'application/vnd.openxmlformats-officedocument.wordprocessingml.document');\n      const container = document.createElement('div');\n      container.style.cssText = `\n        width: 100%;\n        height: 90vh;\n        margin: 0 auto;\n        overflow: auto;\n        padding: 20px;\n        box-shadow: 0 0 10px rgba(0,0,0,0.1);\n      `;\n      const win = window.open('', '_blank');\n      win.document.title = '文档预览';\n      win.document.body.style.margin = '0';\n      win.document.body.appendChild(container);\n      container.innerHTML = '<div style=\"text-align:center;padding:50px\">正在加载文档...</div>';\n      renderAsync(blob, container, null, {\n        className: \"docx-viewer\",\n        inWrapper: true,\n        ignoreWidth: false,\n        ignoreHeight: false,\n        ignoreFonts: false\n      }).catch(error => {\n        console.error('DOCX渲染失败:', error);\n        container.innerHTML = '<div style=\"color:red\">文档预览失败，请下载后查看</div>';\n      });\n    },\n    // 下载文件\n    downloadFile(id) {\n      this.loading = true;\n      getTemplateContent({\n        id\n      }).then(res => {\n        this.loading = false;\n        if (res.code === 1000) {\n          const template = this.tableData.find(item => item.id === id);\n          const base64 = res.data.fileContent;\n          const mimeType = this.getMimeType(template.fileType);\n          const blob = this.base64ToBlob(base64, mimeType);\n          const url = URL.createObjectURL(blob);\n          const link = document.createElement('a');\n          link.href = url;\n          link.download = template.name || 'download';\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n          URL.revokeObjectURL(url);\n          this.$notify.success({\n            title: '成功',\n            message: '文件下载已开始',\n            duration: 2000\n          });\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '下载失败'\n          });\n        }\n      }).catch(error => {\n        this.loading = false;\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '下载失败'\n        });\n      });\n    },\n    // 搜索\n    searchPage() {\n      this.search.pageNumber = 1;\n      this.query();\n    },\n    // 查询数据\n    query() {\n      this.loading = true;\n      const params = {\n        ...this.search,\n        startDate: this.search.dateRange ? this.search.dateRange[0] : '',\n        endDate: this.search.dateRange ? this.search.dateRange[1] : ''\n      };\n      delete params.dateRange;\n      getTemplates(params).then(res => {\n        this.loading = false;\n        if (res.code === 1000) {\n          this.tableData = res.data.records || [];\n          this.total = res.data.total || 0;\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '获取数据失败'\n          });\n        }\n      }).catch(error => {\n        this.loading = false;\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '获取数据失败'\n        });\n      });\n    },\n    // 重置搜索\n    refresh() {\n      this.search.name = \"\";\n      this.search.dateRange = [];\n      this.query();\n    },\n    // 分页变化\n    handleCurrentChange(val) {\n      this.search.pageNumber = val;\n      this.query();\n    },\n    // 每页条数变化\n    handleSizeChange(val) {\n      this.search.pageSize = val;\n      this.query();\n    },\n    // 选择变化\n    handleSelectionChange(val) {\n      this.selected = val.map(item => item.id);\n    },\n    // 批量删除\n    deleteDataBtn() {\n      if (this.selected.length === 0) {\n        this.$message.warning('请至少选择一条数据');\n        return;\n      }\n      this.$confirm(`确定删除选中的 ${this.selected.length} 条数据?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n        customClass: 'tech-message-box',\n        beforeClose: (action, instance, done) => {\n          if (action === 'confirm') {\n            instance.confirmButtonLoading = true;\n            this.deleteData(this.selected).finally(() => {\n              instance.confirmButtonLoading = false;\n              done();\n            });\n          } else {\n            done();\n          }\n        }\n      }).catch(() => {\n        this.$message.info('已取消删除');\n      });\n    },\n    // 删除数据\n    deleteData(ids) {\n      const idsArray = Array.isArray(ids) ? ids : [ids];\n      return deleteTemplate(idsArray).then(res => {\n        if (res.code === 1000) {\n          this.$message({\n            type: 'success',\n            message: '删除成功!',\n            customClass: 'tech-message',\n            duration: 2000\n          });\n          this.search.pageNumber = 1;\n          this.query();\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message || '删除失败'\n          });\n        }\n      }).catch(error => {\n        this.$notify.error({\n          title: '错误',\n          message: error.message || '删除失败'\n        });\n      });\n    }\n  },\n  mounted() {\n    this.query();\n    this.$nextTick(() => {\n      this.lock = getLock();\n      this.$bus.$on('lock', res => {\n        setLock(res);\n        this.lock = res;\n      });\n    });\n  }\n};","map":{"version":3,"names":["mapState","getLock","setLock","verPassword","elAsside","elMain","elHeader","uploadTemplate","getTemplates","deleteTemplate","getTemplateContent","renderAsync","name","data","lock","pass","loading","selected","search","dateRange","pageNumber","pageSize","total","tableData","components","computed","activeMenuArrary","state","menu","activeMenu","methods","leftScroll","container","document","getElementById","scrollLeft","rightScroll","openMenu","url","$router","push","path","$store","commit","closeMenu","index","length","i","$bus","$emit","unlock","$message","message","type","password","then","res","code","tableHeaderStyle","tableRowStyle","beforeUpload","file","isLt10M","size","error","allowedTypes","includes","uploadFile","onProgress","onSuccess","onError","formData","FormData","append","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","percent","$notify","success","title","query","Error","catch","viewContent","id","template","find","item","fileType","toString","toLowerCase","replace","trim","fileContent","$alert","confirmButtonText","callback","downloadFile","mimeType","getMimeType","blob","base64ToBlob","window","open","URL","createObjectURL","imgWindow","write","showDocx","e","console","base64Data","base64WithoutPrefix","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","Array","charCodeAt","Uint8Array","Blob","map","pdf","jpg","jpeg","png","txt","doc","docx","ppt","pptx","xls","xlsx","gif","svg","mp4","webm","fileContentBase64","createElement","style","cssText","win","body","margin","appendChild","innerHTML","className","inWrapper","ignoreWidth","ignoreHeight","ignoreFonts","base64","link","href","download","click","removeChild","revokeObjectURL","duration","searchPage","params","startDate","endDate","records","refresh","handleCurrentChange","val","handleSizeChange","handleSelectionChange","deleteDataBtn","warning","$confirm","cancelButtonText","customClass","beforeClose","action","instance","done","confirmButtonLoading","deleteData","finally","info","ids","idsArray","isArray","mounted","$nextTick","$on"],"sources":["src/views/system/template/template.vue"],"sourcesContent":["<template>\r\n  <div class=\"common-layout\">\r\n    <el-container v-show=\"lock == 0\">\r\n      <el-aside></el-aside>\r\n      <el-container>\r\n        <el-header></el-header>\r\n        <div class=\"main-menu\">\r\n          <div class=\"scroll-left\" @click=\"leftScroll()\">\r\n            <i class=\"el-icon-arrow-left\"></i>\r\n          </div>\r\n          <div class=\"menu\" id=\"menu\">\r\n            <div class=\"menu-item\" v-for=\"(item,index) in activeMenuArrary\" :key=\"index\" @click=\"openMenu(item.url)\">\r\n              <span :class=\"item.url == activeMenu?'active':''\" class=\"menu-name\">{{item.name}}</span>\r\n              <i v-if=\"item.url != '/index'\" class=\"menu-icon el-icon-close\" @click.stop=\"closeMenu(item.url)\"></i>\r\n            </div>\r\n          </div>\r\n          <div class=\"scroll-right\" @click=\"rightScroll()\">\r\n            <i class=\"el-icon-arrow-right\"></i>\r\n          </div>\r\n        </div>\r\n        <el-main>\r\n          <!-- 嵌套模板管理页面内容 -->\r\n          <div class=\"template-management\">\r\n            <!-- 搜索区域 -->\r\n            <div class=\"search-table\">\r\n              <!-- 搜索表单 -->\r\n              <div class=\"search\">\r\n                <el-row :gutter=\"15\" style=\"padding:15px\">\r\n                  <!-- 资料名称搜索 -->\r\n                  <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"8\">\r\n                    <div class=\"search-item\">\r\n                      <span class=\"search-title\">\r\n                        <i class=\"el-icon-document\"></i> 资料名称:\r\n                      </span>\r\n                      <el-input\r\n                        size=\"small\"\r\n                        placeholder=\"请输入资料名称\"\r\n                        v-model=\"search.name\"\r\n                        class=\"tech-input\">\r\n                        <i slot=\"prefix\" class=\"el-icon-edit-outline\"></i>\r\n                      </el-input>\r\n                    </div>\r\n                  </el-col>\r\n                  \r\n                  <!-- 创建时间搜索 -->\r\n                  <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"8\">\r\n                    <div class=\"search-item\">\r\n                      <span class=\"search-title\">\r\n                        <i class=\"el-icon-date\"></i> 创建时间:\r\n                      </span>\r\n                      <el-date-picker\r\n                        size=\"small\"\r\n                        v-model=\"search.dateRange\"\r\n                        type=\"daterange\"\r\n                        range-separator=\"至\"\r\n                        start-placeholder=\"开始日期\"\r\n                        end-placeholder=\"结束日期\"\r\n                        value-format=\"yyyy-MM-dd\"\r\n                        class=\"tech-date-picker\">\r\n                      </el-date-picker>\r\n                    </div>\r\n                  </el-col>\r\n                  \r\n                  <!-- 操作按钮 -->\r\n                  <el-col :xs=\"24\" :sm=\"12\" :md=\"8\" :lg=\"8\" :xl=\"8\">\r\n                    <div class=\"search-actions\">\r\n                      <el-button \r\n                        size=\"small\" \r\n                        icon=\"el-icon-search\" \r\n                        type=\"primary\" \r\n                        @click=\"searchPage\"\r\n                        class=\"search-btn\">\r\n                        查询\r\n                      </el-button>\r\n                      <el-button \r\n                        size=\"small\" \r\n                        icon=\"el-icon-refresh\" \r\n                        @click=\"refresh\"\r\n                        class=\"reset-btn\">\r\n                        重置\r\n                      </el-button>\r\n                    </div>\r\n                  </el-col>\r\n                </el-row>\r\n              </div>\r\n              \r\n              <!-- 表格区域 -->\r\n              <div class=\"table\">\r\n                <!-- 操作栏 -->\r\n                <div class=\"action-bar\">\r\n                <el-upload\r\n                  class=\"upload-btn\"\r\n                  action=\"\"\r\n                  :show-file-list=\"false\"\r\n                  :before-upload=\"beforeUpload\"\r\n                  :http-request=\"uploadFile\">\r\n                  <el-button \r\n                    type=\"primary\" \r\n                    size=\"small\" \r\n                    icon=\"el-icon-upload\"\r\n                    class=\"action-btn upload-btn\">\r\n                    上传资料\r\n                  </el-button>\r\n                </el-upload>\r\n                  <el-button \r\n                    type=\"danger\" \r\n                    size=\"small\" \r\n                    icon=\"el-icon-delete\" \r\n                    :disabled=\"selected.length <= 0\"\r\n                    @click=\"deleteDataBtn\"\r\n                    class=\"action-btn delete-btn\">\r\n                    删除\r\n                  </el-button>\r\n                </div>\r\n                \r\n                <!-- 数据表格 -->\r\n                <el-table\r\n                  v-loading=\"loading\"\r\n                  :data=\"tableData\"\r\n                  :header-cell-style=\"tableHeaderStyle\"\r\n                  :row-style=\"tableRowStyle\"\r\n                  @selection-change=\"handleSelectionChange\"\r\n                  stripe\r\n                  class=\"tech-table\">\r\n                  <!-- 选择列 -->\r\n                  <el-table-column\r\n                    type=\"selection\"\r\n                    width=\"55\"\r\n                    align=\"center\">\r\n                  </el-table-column>\r\n                  \r\n                  <!-- 资料名称列 -->\r\n                  <el-table-column\r\n                    prop=\"name\"\r\n                    label=\"资料名称\"\r\n                    width=\"200\">\r\n                    <template #default=\"{row}\">\r\n                      <div class=\"name-cell\">\r\n                        <i class=\"el-icon-document\" style=\"color:#7B68EE; margin-right:8px\"></i>\r\n                        <span>{{ row.name }}</span>\r\n                      </div>\r\n                    </template>\r\n                  </el-table-column>\r\n                  \r\n                  <!-- 文件类型列 -->\r\n                  <el-table-column\r\n                    prop=\"fileType\"\r\n                    label=\"文件类型\"\r\n                    width=\"120\">\r\n                    <template #default=\"{row}\">\r\n                      <div class=\"type-cell\">\r\n                        <i class=\"el-icon-files\" style=\"color:#9370DB; margin-right:8px\"></i>\r\n                        <span>{{ row.fileType }}</span>\r\n                      </div>\r\n                    </template>\r\n                  </el-table-column>\r\n                  \r\n                  <!-- 创建时间列 -->\r\n                  <el-table-column\r\n                    prop=\"createdAt\"\r\n                    label=\"创建时间\"\r\n                    width=\"180\">\r\n                    <template #default=\"{row}\">\r\n                      <div class=\"time-cell\">\r\n                        <i class=\"el-icon-time\" style=\"color:#A5A4BF; margin-right:8px\"></i>\r\n                        <span>{{ row.createdAt }}</span>\r\n                      </div>\r\n                    </template>\r\n                  </el-table-column>\r\n                  \r\n                  <!-- 分享权限列 -->\r\n                  <el-table-column\r\n                    prop=\"sharePermission\"\r\n                    label=\"分享权限\"\r\n                    width=\"120\">\r\n                    <template #default=\"{row}\">\r\n                      <div class=\"permission-cell\">\r\n                        <el-tag v-if=\"row.sharePermission === 'VIEW'\" type=\"success\" effect=\"dark\">\r\n                          <i class=\"el-icon-view\"></i> 可查看\r\n                        </el-tag>\r\n                        <el-tag v-if=\"row.sharePermission === 'EDIT'\" type=\"warning\" effect=\"dark\">\r\n                          <i class=\"el-icon-edit\"></i> 可编辑\r\n                        </el-tag>\r\n                        <el-tag v-if=\"row.sharePermission === 'NONE'\" type=\"danger\" effect=\"dark\">\r\n                          <i class=\"el-icon-close\"></i> 不可见\r\n                        </el-tag>\r\n                      </div>\r\n                    </template>\r\n                  </el-table-column>\r\n                  \r\n                  <!-- 操作列 -->\r\n                  <el-table-column\r\n                    label=\"操作\"\r\n                    width=\"300\">\r\n                    <template #default=\"{row}\">\r\n                      <div class=\"action-buttons\">\r\n                        <el-button \r\n                          size=\"mini\" \r\n                          type=\"primary\" \r\n                          @click=\"viewContent(row.id)\"\r\n                          class=\"action-btn view-btn\">\r\n                          <i class=\"el-icon-view\"></i> 查看\r\n                        </el-button>\r\n                        \r\n                        <el-button \r\n                          size=\"mini\" \r\n                          type=\"success\" \r\n                          @click=\"downloadFile(row.id)\"\r\n                          class=\"action-btn download-btn\">\r\n                          <i class=\"el-icon-download\"></i> 下载\r\n                        </el-button>\r\n                        \r\n                        <el-popconfirm\r\n                          title=\"确认删除此资料？\"\r\n                          @confirm=\"deleteData(row.id)\"\r\n                          confirm-button-text=\"确认\"\r\n                          cancel-button-text=\"取消\"\r\n                          icon=\"el-icon-warning\"\r\n                          icon-color=\"#7B68EE\">\r\n                          <el-button \r\n                            size=\"mini\"\r\n                            type=\"danger\"\r\n                            slot=\"reference\"\r\n                            class=\"action-btn delete-btn\">\r\n                            <i class=\"el-icon-delete\"></i> 删除\r\n                          </el-button>\r\n                        </el-popconfirm>\r\n                      </div>\r\n                    </template>\r\n                  </el-table-column>\r\n                </el-table>\r\n                \r\n                <!-- 分页 -->\r\n                <el-pagination\r\n                  background\r\n                  layout=\"total, sizes, prev, pager, next, jumper\"\r\n                  :page-sizes=\"[10, 20, 50, 100]\"\r\n                  :page-size=\"search.pageSize\"\r\n                  :current-page=\"search.pageNumber\"\r\n                  @size-change=\"handleSizeChange\"\r\n                  @current-change=\"handleCurrentChange\"\r\n                  :total=\"total\"\r\n                  class=\"tech-pagination\">\r\n                </el-pagination>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-main>\r\n      </el-container>\r\n    </el-container>\r\n    <el-container v-show=\"lock == 1\">\r\n    <div class=\"lock\" >\r\n\r\n        <div class=\"form\">\r\n          <div class=\"content\">\r\n            <el-input prefix-icon=\"el-icon-star-off\" type=\"password\" v-model=\"pass\" size=\"mini\" placeholder=\"请输入密码\"></el-input>\r\n            <div @click=\"unlock\"><i class=\"el-icon-d-arrow-right\"></i></div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { getLock,setLock } from '@/utils/lock'\r\nimport { verPassword } from '@/api/api'\r\nimport elAsside from \"@/components/layout/aside\"\r\nimport elMain from \"@/components/layout/main\"\r\nimport elHeader from \"@/components/layout/header\"\r\nimport { uploadTemplate, getTemplates, deleteTemplate, getTemplateContent } from '@/api/api'\r\nimport { renderAsync } from 'docx-preview'\r\n\r\nexport default {\r\n  name: \"index\",\r\n  data() {\r\n    return{\r\n      lock: 0,\r\n      pass: \"\",\r\n      loading: true,\r\n      selected: [],\r\n      search: {\r\n        name: \"\",\r\n        dateRange: [],\r\n        pageNumber: 1,\r\n        pageSize: 10\r\n      },\r\n      total: 0,\r\n      tableData: [],\r\n    }\r\n  },\r\n  components:{\r\n    elAsside,\r\n    elMain,\r\n    elHeader\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n        activeMenuArrary: state => state.menu.activeMenuArrary,\r\n        activeMenu: state => state.menu.activeMenu\r\n    })\r\n  },\r\n  methods: {\r\n    leftScroll() {\r\n      var container = document.getElementById('menu');\r\n      container.scrollLeft -= 100;\r\n    },\r\n    rightScroll() {\r\n      var container = document.getElementById('menu');\r\n      container.scrollLeft += 100;\r\n    },\r\n    openMenu(url) {\r\n      if (this.activeMenu != url) {\r\n        this.$router.push({\r\n          path: url,\r\n        })\r\n        this.$store.commit('menu/setActiveMenu', url)\r\n      }\r\n    },\r\n    closeMenu(url) {\r\n      var index = this.activeMenuArrary.length - 1\r\n      for(let i = 0;i < this.activeMenuArrary.length;i++) {\r\n        if(this.activeMenuArrary[i].url == url) {\r\n          index = i;\r\n          break;\r\n        }\r\n      }\r\n      if(this.activeMenu == url) {\r\n        this.$router.push({\r\n          path: this.activeMenuArrary[index-1].url,\r\n        })\r\n        this.$store.commit('menu/setActiveMenu', this.activeMenuArrary[index-1].url)\r\n      }\r\n      this.$store.commit('menu/reduceActiveMenu', index)\r\n      this.$bus.$emit(\"clearKeepAlive\", url);\r\n    },\r\n    unlock() {\r\n      if (!this.pass) {\r\n        this.$message({\r\n            message: '请输入密码验证',\r\n            type: 'warning'\r\n        });\r\n        return;\r\n      }\r\n      verPassword({password:this.pass}).then(res => {\r\n        if (res.code == 1000) {\r\n          this.$message({\r\n            message: '验证通过',\r\n            type: 'success'\r\n          });\r\n          this.pass = \"\"\r\n          this.$bus.$emit('lock', 0)\r\n        } else {\r\n          this.$message({\r\n            message: res.message,\r\n            type: 'error'\r\n          });\r\n        }\r\n      })\r\n    },\r\n    \r\n    // 表格头部样式\r\n    tableHeaderStyle() {\r\n      return {\r\n        'color': '#4A2B90',\r\n        'background-color': '#ECE9F4',\r\n        'font-weight': 'bold',\r\n        'border-bottom': '1px solid #7B68EE'\r\n      }\r\n    },\r\n    \r\n    // 表格行样式\r\n    tableRowStyle() {\r\n      return {\r\n        'color': '#5F4B8B',\r\n        'font-size': '14px',\r\n        'border-bottom': '1px solid #F0EEF7'\r\n      }\r\n    },\r\n    \r\n    // 上传前校验\r\n    beforeUpload(file) {\r\n      const isLt10M = file.size / 1024 / 1024 < 10\r\n      if (!isLt10M) {\r\n        this.$message.error('上传文件大小不能超过10MB!')\r\n        return false\r\n      }\r\n      \r\n      const allowedTypes = [\r\n        'application/pdf',\r\n        'application/msword',\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n        'application/vnd.ms-excel',\r\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        'application/vnd.ms-powerpoint',\r\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n        'image/jpeg',\r\n        'image/png'\r\n      ]\r\n      \r\n      if (!allowedTypes.includes(file.type)) {\r\n        this.$message.error('只支持上传PDF、Word、Excel、PPT、JPG和PNG文件!')\r\n        return false\r\n      }\r\n      \r\n      return true\r\n    },\r\n    \r\n    // 文件上传方法\r\n    uploadFile({ file, onProgress, onSuccess, onError }) {\r\n      const formData = new FormData();\r\n      formData.append('file', file);\r\n\r\n      uploadTemplate(formData, {\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          onProgress({ percent: percentCompleted });\r\n        }\r\n      }).then(res => {\r\n        if (res.code === 1000) {\r\n          this.$notify.success({ title: '成功', message: '上传成功' });\r\n          this.query();\r\n          onSuccess(res);\r\n        } else {\r\n          this.$notify.error({ title: '错误', message: res.message || '上传失败' });\r\n          onError(new Error(res.message || '上传失败'));\r\n        }\r\n      }).catch(error => {\r\n        this.$notify.error({ title: '错误', message: error.message || '上传失败' });\r\n        onError(error);\r\n      });\r\n    },\r\n    \r\n    // 查看内容 在线预览docx\r\n    viewContent(id) {\r\n      this.loading = true;\r\n      getTemplateContent({ id }).then(res => {\r\n        this.loading = false;\r\n        \r\n        if (res.code !== 1000) {\r\n          this.$notify.error({ title: '错误', message: res.message || '获取内容失败' });\r\n          return;\r\n        }\r\n\r\n        const template = this.tableData.find(item => item.id === id);\r\n        const data = res.data;\r\n\r\n        const fileType = (data.fileType || template?.fileType || '')\r\n                        .toString()\r\n                        .toLowerCase()\r\n                        .replace('.', '')\r\n                        .trim();\r\n\r\n        if (!data.fileContent) {\r\n          this.$message.error('文件内容为空');\r\n          return;\r\n        }\r\n\r\n        if (!fileType) {\r\n          this.$alert('无法识别文件类型，请下载查看', '提示', {\r\n            confirmButtonText: '下载',\r\n            callback: () => this.downloadFile(id)\r\n          });\r\n          return;\r\n        }\r\n\r\n        const mimeType = this.getMimeType(fileType);\r\n\r\n        try {\r\n          const blob = this.base64ToBlob(data.fileContent, mimeType);\r\n          \r\n          if (['pdf'].includes(fileType)) {\r\n            window.open(URL.createObjectURL(blob), '_blank');\r\n          } \r\n          else if (['jpg', 'jpeg', 'png', 'gif'].includes(fileType)) {\r\n            const imgWindow = window.open('', '_blank');\r\n            imgWindow.document.write(`<img src=\"${URL.createObjectURL(blob)}\" style=\"max-width:100%\"/>`);\r\n          }\r\n          else if (fileType === 'docx') {\r\n            this.showDocx(data.fileContent);\r\n          }\r\n          else {\r\n            this.$alert(`不支持预览 ${fileType} 格式文件`, '提示', {\r\n              confirmButtonText: '下载',\r\n              callback: () => this.downloadFile(id)\r\n            });\r\n          }\r\n        } catch (e) {\r\n          console.error('预览处理出错:', e);\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: '文件处理失败: ' + e.message\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        this.loading = false;\r\n        console.error('请求出错:', error);\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: error.message || '获取内容失败'\r\n        });\r\n      });\r\n    },\r\n\r\n    //文件二进制转化\r\n    base64ToBlob(base64Data, mimeType = '') {\r\n      const base64WithoutPrefix = base64Data.replace(/^data:\\w+\\/\\w+;base64,/, '');\r\n      const byteCharacters = atob(base64WithoutPrefix);\r\n      const byteArrays = [];\r\n\r\n      for (let offset = 0; offset < byteCharacters.length; offset += 512) {\r\n        const slice = byteCharacters.slice(offset, offset + 512);\r\n        const byteNumbers = new Array(slice.length);\r\n        for (let i = 0; i < slice.length; i++) {\r\n          byteNumbers[i] = slice.charCodeAt(i);\r\n        }\r\n        byteArrays.push(new Uint8Array(byteNumbers));\r\n      }\r\n\r\n      return new Blob(byteArrays, { type: mimeType });\r\n    },\r\n\r\n    getMimeType(fileType) {\r\n      const map = {\r\n        pdf: 'application/pdf',\r\n        jpg: 'image/jpeg',\r\n        jpeg: 'image/jpeg',\r\n        png: 'image/png',\r\n        txt: 'text/plain',\r\n        doc: 'application/msword',\r\n        docx: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n        ppt: 'application/vnd.ms-powerpoint',\r\n        pptx: 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n        xls: 'application/vnd.ms-excel',\r\n        xlsx: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n        gif: 'image/gif',\r\n        svg: 'image/svg+xml',\r\n        mp4: 'video/mp4',\r\n        webm: 'video/webm'\r\n      };\r\n      return map[fileType] || 'application/octet-stream';\r\n    },\r\n\r\n    //pptx excel docx预览\r\n    showDocx(fileContentBase64) {\r\n      const blob = this.base64ToBlob(\r\n        fileContentBase64, \r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n      );\r\n      \r\n      const container = document.createElement('div');\r\n      container.style.cssText = `\r\n        width: 100%;\r\n        height: 90vh;\r\n        margin: 0 auto;\r\n        overflow: auto;\r\n        padding: 20px;\r\n        box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n      `;\r\n      \r\n      const win = window.open('', '_blank');\r\n      win.document.title = '文档预览';\r\n      win.document.body.style.margin = '0';\r\n      win.document.body.appendChild(container);\r\n      \r\n      container.innerHTML = '<div style=\"text-align:center;padding:50px\">正在加载文档...</div>';\r\n      \r\n      renderAsync(blob, container, null, {\r\n        className: \"docx-viewer\",\r\n        inWrapper: true,\r\n        ignoreWidth: false,\r\n        ignoreHeight: false,\r\n        ignoreFonts: false\r\n      }).catch(error => {\r\n        console.error('DOCX渲染失败:', error);\r\n        container.innerHTML = '<div style=\"color:red\">文档预览失败，请下载后查看</div>';\r\n      });\r\n    },\r\n    \r\n    // 下载文件\r\n    downloadFile(id) {\r\n      this.loading = true;\r\n      getTemplateContent({ id }).then(res => {\r\n        this.loading = false;\r\n        if (res.code === 1000) {\r\n          const template = this.tableData.find(item => item.id === id);\r\n          const base64 = res.data.fileContent;\r\n          const mimeType = this.getMimeType(template.fileType);\r\n          const blob = this.base64ToBlob(base64, mimeType);\r\n          const url = URL.createObjectURL(blob);\r\n          \r\n          const link = document.createElement('a');\r\n          link.href = url;\r\n          link.download = template.name || 'download';\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          URL.revokeObjectURL(url);\r\n          \r\n          this.$notify.success({\r\n            title: '成功',\r\n            message: '文件下载已开始',\r\n            duration: 2000\r\n          });\r\n        } else {\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: res.message || '下载失败'\r\n          });\r\n        }\r\n      }).catch(error => {\r\n        this.loading = false;\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: error.message || '下载失败'\r\n        });\r\n      });\r\n    },\r\n    \r\n    // 搜索\r\n    searchPage() {\r\n      this.search.pageNumber = 1\r\n      this.query()\r\n    },\r\n    \r\n    // 查询数据\r\n    query() {\r\n      this.loading = true\r\n      const params = {\r\n        ...this.search,\r\n        startDate: this.search.dateRange ? this.search.dateRange[0] : '',\r\n        endDate: this.search.dateRange ? this.search.dateRange[1] : ''\r\n      }\r\n      delete params.dateRange\r\n      \r\n      getTemplates(params).then(res => {\r\n        this.loading = false\r\n        if (res.code === 1000) {\r\n          this.tableData = res.data.records || []\r\n          this.total = res.data.total || 0\r\n        } else {\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: res.message || '获取数据失败'\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        this.loading = false\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: error.message || '获取数据失败'\r\n        })\r\n      })\r\n    },\r\n    \r\n    // 重置搜索\r\n    refresh() {\r\n      this.search.name = \"\"\r\n      this.search.dateRange = []\r\n      this.query()\r\n    },\r\n    \r\n    // 分页变化\r\n    handleCurrentChange(val) {\r\n      this.search.pageNumber = val\r\n      this.query()\r\n    },\r\n    \r\n    // 每页条数变化\r\n    handleSizeChange(val) {\r\n      this.search.pageSize = val\r\n      this.query()\r\n    },\r\n    \r\n    // 选择变化\r\n    handleSelectionChange(val) {\r\n      this.selected = val.map(item => item.id)\r\n    },\r\n    \r\n    // 批量删除\r\n    deleteDataBtn() {\r\n      if (this.selected.length === 0) {\r\n        this.$message.warning('请至少选择一条数据')\r\n        return\r\n      }\r\n      \r\n      this.$confirm(`确定删除选中的 ${this.selected.length} 条数据?`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning',\r\n        customClass: 'tech-message-box',\r\n        beforeClose: (action, instance, done) => {\r\n          if (action === 'confirm') {\r\n            instance.confirmButtonLoading = true\r\n            this.deleteData(this.selected)\r\n              .finally(() => {\r\n                instance.confirmButtonLoading = false\r\n                done()\r\n              })\r\n          } else {\r\n            done()\r\n          }\r\n        }\r\n      }).catch(() => {\r\n        this.$message.info('已取消删除')\r\n      })\r\n    },\r\n    \r\n    // 删除数据\r\n    deleteData(ids) {\r\n      const idsArray = Array.isArray(ids) ? ids : [ids];\r\n      \r\n      return deleteTemplate(idsArray).then(res => {\r\n        if (res.code === 1000) {\r\n          this.$message({\r\n            type: 'success',\r\n            message: '删除成功!',\r\n            customClass: 'tech-message',\r\n            duration: 2000\r\n          })\r\n          this.search.pageNumber = 1\r\n          this.query()\r\n        } else {\r\n          this.$notify.error({\r\n            title: '错误',\r\n            message: res.message || '删除失败'\r\n          })\r\n        }\r\n      }).catch(error => {\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: error.message || '删除失败'\r\n        })\r\n      })\r\n    },\r\n  },\r\n  \r\n  mounted() {\r\n    this.query()\r\n    this.$nextTick(() => {\r\n      this.lock = getLock()\r\n      this.$bus.$on('lock', res=>{\r\n        setLock(res)\r\n        this.lock = res\r\n      })\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.common-layout >>> .el-menu-item {\r\n    min-width: 0;\r\n}\r\n.main-menu {\r\n  width: 100%;\r\n  height: 25px;\r\n  border-top: 1px solid #ECECF1;\r\n  background-color: #ffffff;\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n.menu {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: calc(100% - 60px);\r\n  overflow: scroll;\r\n  flex-grow: 0;\r\n  flex-basis: auto\r\n}\r\n.scroll-left {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 30px;\r\n  height: 100%;\r\n  cursor: pointer;\r\n}\r\n.menu::-webkit-scrollbar {\r\n  width: 0px;\r\n  height: 0px;\r\n}\r\n.scroll-right {\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 30px;\r\n  height: 100%;\r\n  cursor: pointer;\r\n}\r\n.menu-item {\r\n  width: 100px;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-left: 1px solid #E5E5E5;\r\n  border-right: 1px solid #E5E5E5;\r\n  border-bottom: 1px solid #E5E5E5;\r\n  cursor: pointer;\r\n  background-color: #F5F7FA;\r\n  flex-shrink: 0;\r\n}\r\n.menu-name {\r\n  margin-left:10px;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  font-family: '黑体';\r\n}\r\n.active {\r\n  color: #66B1FF;\r\n}\r\n.menu-icon {\r\n  cursor: pointer;\r\n  font-size: 12px;\r\n}\r\n.lock {\r\n  width: 100%;\r\n  height: 100vh;\r\n}\r\n.lock-back {\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: -1;\r\n  position: fixed;\r\n  object-fit: cover;\r\n}\r\n.form {\r\n  z-index: 999;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.content {\r\n  display: flex;\r\n  align-items: center;\r\n  color: black;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n/* 模板管理页面样式 */\r\n.template-management {\r\n  padding: 20px;\r\n  background-color: #F8F7FC;\r\n  height: 100%;\r\n}\r\n\r\n.search-table {\r\n  width: 100%;\r\n}\r\n\r\n.search {\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  margin-bottom: 20px;\r\n  box-shadow: 0 2px 12px rgba(123, 104, 238, 0.1);\r\n}\r\n\r\n.search-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.search-title {\r\n  font-size: 14px;\r\n  color: #4A2B90;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.search-title i {\r\n  margin-right: 6px;\r\n  color: #7B68EE;\r\n}\r\n\r\n.search-actions {\r\n  display: flex;\r\n  align-items: flex-end;\r\n  height: 100%;\r\n}\r\n\r\n.table {\r\n  background: #ffffff;\r\n  border-radius: 8px;\r\n  padding: 15px;\r\n  box-shadow: 0 2px 12px rgba(123, 104, 238, 0.1);\r\n}\r\n\r\n.action-bar {\r\n  padding: 10px 0 15px 10px;\r\n  margin-bottom: 15px;\r\n  border-bottom: 1px solid #F0EEF7;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.name-cell, .type-cell, .time-cell, .permission-cell {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.action-buttons {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n}\r\n\r\n.action-btn {\r\n  border-radius: 15px;\r\n  padding: 6px 10px;\r\n  font-size: 12px;\r\n  min-width: 60px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.action-btn i {\r\n  margin-right: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\n.upload-btn {\r\n  display: inline-block;\r\n  margin-right: 10px;\r\n}\r\n</style>\r\n\r\n<style>\r\n/* 全局样式 */\r\n.tech-input .el-input__inner {\r\n  border-radius: 20px;\r\n  border: 1px solid #D8D8E5;\r\n  color: #5F4B8B;\r\n  background-color: #F9F8FD;\r\n  padding-left: 30px;\r\n}\r\n\r\n.tech-input .el-input__prefix {\r\n  left: 5px;\r\n  color: #7B68EE;\r\n}\r\n\r\n.tech-date-picker .el-input__inner {\r\n  border-radius: 20px;\r\n  border: 1px solid #D8D8E5;\r\n  color: #5F4B8B;\r\n  background-color: #F9F8FD;\r\n}\r\n\r\n.tech-date-picker .el-range-separator {\r\n  color: #5F4B8B;\r\n}\r\n\r\n.search-btn {\r\n  background: linear-gradient(135deg, #7B68EE, #9370DB);\r\n  border: none;\r\n  border-radius: 20px;\r\n  color: white;\r\n  padding: 7px 15px;\r\n}\r\n\r\n.reset-btn {\r\n  border-radius: 20px;\r\n  color: #7B68EE;\r\n  border: 1px solid #D8D8E5;\r\n  padding: 7px 15px;\r\n}\r\n\r\n.action-btn.upload-btn {\r\n  background: linear-gradient(135deg, #7B68EE, #9370DB);\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.action-btn.view-btn {\r\n  background: linear-gradient(135deg, #409EFF, #3A8BDF);\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.action-btn.download-btn {\r\n  background: linear-gradient(135deg, #67C23A, #85CE61);\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.action-btn.delete-btn {\r\n  background: linear-gradient(135deg, #F56C6C, #F78989);\r\n  color: white;\r\n  border: none;\r\n}\r\n\r\n.action-btn:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.tech-table {\r\n  border-radius: 8px;\r\n  border: 1px solid #ECE9F4;\r\n}\r\n\r\n.tech-table .el-table__body tr:hover>td {\r\n  background-color: #F5F2FF !important;\r\n}\r\n\r\n.tech-pagination .el-pagination.is-background .el-pager li:not(.disabled).active {\r\n  background-color: #7B68EE;\r\n  color: white;\r\n  border-radius: 50%;\r\n}\r\n\r\n.tech-message-box {\r\n  border-radius: 12px;\r\n  border: 1px solid #7B68EE;\r\n}\r\n\r\n.tech-message-box .el-message-box__title {\r\n  color: #4A2B90;\r\n  font-weight: bold;\r\n}\r\n\r\n.tech-message {\r\n  border-radius: 20px;\r\n  background-color: #F5F2FF;\r\n  border: none;\r\n  box-shadow: 0 2px 12px 0 rgba(123, 104, 238, 0.2);\r\n}\r\n\r\n.tech-message .el-message__content {\r\n  color: #4A2B90;\r\n}\r\n\r\n.el-popconfirm__action {\r\n  text-align: center;\r\n}\r\n\r\n.el-popconfirm__action button {\r\n  border-radius: 15px;\r\n  padding: 6px 12px;\r\n}\r\n\r\n.el-popconfirm__action button:first-child {\r\n  background: linear-gradient(135deg, #7B68EE, #9370DB);\r\n  border: none;\r\n  color: white;\r\n}\r\n\r\n.el-popconfirm__action button:last-child {\r\n  color: #7B68EE;\r\n  border: 1px solid #D8D8E5;\r\n}\r\n\r\n.el-tag {\r\n  display: inline-flex;\r\n  align-items: center;\r\n  padding: 0 8px;\r\n  height: 24px;\r\n  line-height: 24px;\r\n}\r\n\r\n.el-tag i {\r\n  margin-right: 4px;\r\n}\r\n\r\n.content-dialog {\r\n  border-radius: 12px;\r\n  border: 1px solid #7B68EE;\r\n  max-width: 80%;\r\n}\r\n\r\n.content-dialog .el-message-box__header {\r\n  background-color: #F5F2FF;\r\n  border-bottom: 1px solid #ECE9F4;\r\n}\r\n\r\n.content-dialog .el-message-box__title {\r\n  color: #4A2B90;\r\n  font-weight: bold;\r\n}\r\n\r\n.content-dialog .el-message-box__content {\r\n  max-height: 60vh;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}