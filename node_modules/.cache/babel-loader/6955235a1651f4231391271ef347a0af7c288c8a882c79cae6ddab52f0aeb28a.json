{"ast":null,"code":"import { saveMajor } from '../../../api/api';\nexport default {\n  data() {\n    return {\n      form: {\n        name: \"\"\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入专业名称',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['addVisible'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          saveMajor(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\",\n                customClass: 'tech-notification'\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message,\n                customClass: 'tech-notification'\n              });\n            }\n          });\n        }\n      });\n    },\n    handleClose() {\n      this.form = {\n        name: \"\"\n      };\n      this.$emit(\"addFalse\");\n    }\n  }\n};","map":{"version":3,"names":["saveMajor","data","form","name","rules","required","message","trigger","props","methods","submit","$refs","validate","valid","then","res","code","$notify","success","title","customClass","handleClose","error","$emit"],"sources":["src/components/system/major/addMajor.vue"],"sourcesContent":["<template>\n  <div>\n    <el-dialog \n      title=\"新增专业\" \n      width=\"45%\" \n      :destroy-on-close=\"true\" \n      :visible.sync=\"addVisible\" \n      :before-close=\"handleClose\"\n      class=\"tech-dialog\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n        <el-row :gutter=\"20\">\n          <el-col :span=\"24\">\n            <div class=\"form-item-container\">\n              <span class=\"tech-form-label\">\n                专业名称:\n              </span>\n              <el-form-item prop=\"name\" class=\"tech-form-item\">\n                <el-input \n                  v-model=\"form.name\" \n                  size=\"small\" \n                  placeholder=\"请输入专业名称\" \n                  autocomplete=\"off\"\n                  class=\"tech-input\">\n                  <i slot=\"prefix\" class=\"el-icon-collection el-input__icon\"></i>\n                </el-input>\n              </el-form-item>\n            </div>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"tech-dialog-footer\">\n        <el-button \n          size=\"small\" \n          @click=\"handleClose\"\n          class=\"tech-cancel-btn\">\n          取 消\n        </el-button>\n        <el-button \n          size=\"small\" \n          type=\"primary\" \n          @click=\"submit\"\n          class=\"tech-confirm-btn\">\n          确 定\n        </el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {saveMajor} from '../../../api/api'\nexport default {\n  data() {\n    return{\n      form: {\n        name: \"\",\n      },\n      rules: {\n        name: [\n          { required: true, message: '请输入专业名称', trigger: 'blur' },\n        ],\n      },\n    }\n  },\n  props: ['addVisible'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate((valid) => {\n        if (valid) {\n          saveMajor(this.form).then(res => {\n            if(res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\",\n                customClass: 'tech-notification'\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message,\n                customClass: 'tech-notification'\n              });\n            }\n          })\n        }\n      });\n    },\n    handleClose() {\n      this.form = { name: \"\" };\n      this.$emit(\"addFalse\")\n    },\n  }\n}\n</script>\n\n<style scoped>\n.form-item-container {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n}\n\n.tech-form-label {\n  font-family: 'Microsoft YaHei';\n  font-size: 14px;\n  color: #4A2B90;\n  margin-bottom: 8px;\n  font-weight: 500;\n}\n\n.tech-form-item {\n  margin-bottom: 0;\n}\n\n.tech-dialog-footer {\n  text-align: right;\n  padding: 15px 20px 10px;\n  border-top: 1px solid #F0EEF7;\n}\n</style>\n\n<style>\n/* 全局对话框样式 */\n.tech-dialog {\n  border-radius: 12px;\n}\n\n.tech-dialog .el-dialog__header {\n  border-bottom: 1px solid #F0EEF7;\n  padding: 15px 20px;\n}\n\n.tech-dialog .el-dialog__title {\n  color: #4A2B90;\n  font-weight: bold;\n  font-size: 16px;\n}\n\n.tech-dialog .el-dialog__body {\n  padding: 20px;\n}\n\n/* 输入框样式 */\n.tech-input .el-input__inner {\n  border-radius: 20px;\n  border: 1px solid #D8D8E5;\n  color: #5F4B8B;\n  background-color: #F9F8FD;\n  transition: all 0.3s;\n  padding-left: 35px;\n}\n\n.tech-input .el-input__inner:focus {\n  border-color: #7B68EE;\n  box-shadow: 0 0 0 2px rgba(123, 104, 238, 0.2);\n}\n\n.tech-input .el-input__icon {\n  color: #7B68EE;\n}\n\n/* 按钮样式 */\n.tech-confirm-btn {\n  background: linear-gradient(135deg, #7B68EE, #9370DB);\n  border: none;\n  border-radius: 20px;\n  color: white;\n  padding: 8px 20px;\n  transition: all 0.3s;\n}\n\n.tech-confirm-btn:hover {\n  background: linear-gradient(135deg, #6A5ACD, #7B68EE);\n  box-shadow: 0 4px 8px rgba(123, 104, 238, 0.3);\n  transform: translateY(-1px);\n}\n\n.tech-cancel-btn {\n  border-radius: 20px;\n  color: #7B68EE;\n  border: 1px solid #D8D8E5;\n  background: #F5F5FA;\n  padding: 8px 20px;\n  transition: all 0.3s;\n}\n\n.tech-cancel-btn:hover {\n  color: #6A5ACD;\n  border-color: #C7C7D5;\n  background: #EDEDF7;\n  transform: translateY(-1px);\n}\n\n/* 通知样式 */\n.tech-notification {\n  border-radius: 8px;\n  border-left: 4px solid #7B68EE;\n}\n</style>"],"mappings":"AAkDA,SAAAA,SAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAD,IAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,KAAA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAb,SAAA,MAAAE,IAAA,EAAAY,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;gBACAC,KAAA;gBACAb,OAAA;gBACAc,WAAA;cACA;cACA,KAAAC,WAAA;YACA;cACA,KAAAJ,OAAA,CAAAK,KAAA;gBACAH,KAAA;gBACAb,OAAA,EAAAS,GAAA,CAAAT,OAAA;gBACAc,WAAA;cACA;YACA;UACA;QACA;MACA;IACA;IACAC,YAAA;MACA,KAAAnB,IAAA;QAAAC,IAAA;MAAA;MACA,KAAAoB,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}