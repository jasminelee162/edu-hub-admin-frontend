{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\nimport { Message, MessageBox } from 'element-ui';\n\n// 创建axios实例\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080\",\n  timeout: 5000\n});\n\n// 不需要token的白名单\nconst noTokenUrls = ['/email/sendCode', '/email/login', '/login'];\n\n// 请求拦截器\ninstance.interceptors.request.use(function (config) {\n  // 1. 添加时间戳/随机数（原逻辑保留）\n  if (config.method === 'post') {\n    if (!Array.isArray(config.data) && !(config.data instanceof FormData)) {\n      config.data = {\n        ...config.data,\n        _t: Date.parse(new Date()) / 1000\n      };\n    }\n  } else if (config.method === 'get') {\n    config.params = {\n      random: Math.random(),\n      ...config.params\n    };\n  }\n\n  // 2. 只在非白名单请求中添加token\n  const isNoTokenUrl = noTokenUrls.some(url => config.url.includes(url));\n  if (!isNoTokenUrl) {\n    const token = window.localStorage.getItem(\"token\");\n    if (token) {\n      config.headers.x_access_token = token;\n    }\n  }\n  return config;\n}, function (err) {\n  return Promise.reject(err);\n});\n\n// 响应拦截器（保持不变）\ninstance.interceptors.response.use(function (response) {\n  const res = response;\n  if (res.data.code === 1011 || res.data.code == 1008 || res.data.code == 1006) {\n    MessageBox.alert('系统登陆已过期，请重新登录', '错误', {\n      confirmButtonText: '确定',\n      type: 'error'\n    }).then(() => {\n      store.dispatch('user/logout').then(() => {\n        store.commit(\"menu/setMenus\", []);\n        store.commit(\"menu/setRoutes\", []);\n        store.commit(\"menu/setDisplayMenus\", []);\n        store.commit(\"menu/setBtnMenus\", []);\n        location.reload();\n      });\n    });\n    return Promise.reject('error');\n  } else if (res.data.code == 1009) {\n    MessageBox.alert('该账号已被锁定', '错误', {\n      confirmButtonText: '确定',\n      type: 'error'\n    }).then(() => {\n      store.dispatch('user/logout').then(() => {\n        store.commit(\"menu/setMenus\", []);\n        store.commit(\"menu/setRoutes\", []);\n        store.commit(\"menu/setDisplayMenus\", []);\n        store.commit(\"menu/setBtnMenus\", []);\n        location.reload();\n      });\n    });\n    return Promise.reject('error');\n  } else if (res.status != 200) {\n    MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\n      confirmButtonText: '确定',\n      type: 'error'\n    });\n    return Promise.reject('error');\n  } else {\n    return res.data;\n  }\n}, function (err) {\n  MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\n    confirmButtonText: '确定',\n    type: 'error'\n  });\n  return Promise.reject('error');\n});\n\n// 封装请求方法\nexport function get(url, params) {\n  return instance.get(url, {\n    params\n  });\n}\nexport function post(url, data) {\n  return instance.post(url, data);\n}\nexport default instance;","map":{"version":3,"names":["axios","store","Message","MessageBox","instance","create","baseURL","timeout","noTokenUrls","interceptors","request","use","config","method","Array","isArray","data","FormData","_t","Date","parse","params","random","Math","isNoTokenUrl","some","url","includes","token","window","localStorage","getItem","headers","x_access_token","err","Promise","reject","response","res","code","alert","confirmButtonText","type","then","dispatch","commit","location","reload","status","get","post"],"sources":["C:/Users/32049/Desktop/edu-hub-admin-frontend/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport store from '@/store'\r\nimport { Message, MessageBox } from 'element-ui'\r\n\r\n// 创建axios实例\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8080\",\r\n  timeout: 5000\r\n})\r\n\r\n// 不需要token的白名单\r\nconst noTokenUrls = [\r\n  '/email/sendCode',\r\n  '/email/login',\r\n  '/login'\r\n]\r\n\r\n// 请求拦截器\r\ninstance.interceptors.request.use(\r\n  function (config) {\r\n    // 1. 添加时间戳/随机数（原逻辑保留）\r\n    if (config.method === 'post') {\r\n      if (!Array.isArray(config.data) && !(config.data instanceof FormData)) {\r\n        config.data = {\r\n          ...config.data,\r\n          _t: Date.parse(new Date()) / 1000\r\n        }\r\n      }\r\n    } else if (config.method === 'get') {\r\n      config.params = {\r\n        random: Math.random(),\r\n        ...config.params\r\n      }\r\n    }\r\n\r\n    // 2. 只在非白名单请求中添加token\r\n    const isNoTokenUrl = noTokenUrls.some(url => config.url.includes(url))\r\n    if (!isNoTokenUrl) {\r\n      const token = window.localStorage.getItem(\"token\")\r\n      if (token) {\r\n        config.headers.x_access_token = token\r\n      }\r\n    }\r\n\r\n    return config\r\n  },\r\n  function (err) {\r\n    return Promise.reject(err)\r\n  }\r\n)\r\n\r\n// 响应拦截器（保持不变）\r\ninstance.interceptors.response.use(\r\n  function (response) {\r\n    const res = response\r\n    if (res.data.code === 1011 || res.data.code == 1008 || res.data.code == 1006) {\r\n      MessageBox.alert('系统登陆已过期，请重新登录', '错误', {\r\n        confirmButtonText: '确定',\r\n        type: 'error'\r\n      }).then(() => {\r\n        store.dispatch('user/logout').then(() => {\r\n          store.commit(\"menu/setMenus\",[])\r\n          store.commit(\"menu/setRoutes\",[])\r\n          store.commit(\"menu/setDisplayMenus\",[])\r\n          store.commit(\"menu/setBtnMenus\",[])\r\n          location.reload()\r\n        })\r\n      })\r\n      return Promise.reject('error')\r\n    } else if(res.data.code == 1009) {\r\n      MessageBox.alert('该账号已被锁定', '错误', {\r\n        confirmButtonText: '确定',\r\n        type: 'error'\r\n      }).then(() => {\r\n        store.dispatch('user/logout').then(() => {\r\n          store.commit(\"menu/setMenus\",[])\r\n          store.commit(\"menu/setRoutes\",[])\r\n          store.commit(\"menu/setDisplayMenus\",[])\r\n          store.commit(\"menu/setBtnMenus\",[])\r\n          location.reload()\r\n        })\r\n      })\r\n      return Promise.reject('error')\r\n    } else if (res.status != 200) {\r\n      MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\r\n        confirmButtonText: '确定',\r\n        type: 'error'\r\n      })\r\n      return Promise.reject('error')\r\n    } else {\r\n      return res.data\r\n    }\r\n  },\r\n  function (err) {\r\n    MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\r\n      confirmButtonText: '确定',\r\n      type: 'error'\r\n    })\r\n    return Promise.reject('error')\r\n  }\r\n)\r\n\r\n// 封装请求方法\r\nexport function get(url, params) {\r\n  return instance.get(url, {params})\r\n}\r\n\r\nexport function post(url, data) {\r\n  return instance.post(url, data)\r\n}\r\n\r\nexport default instance"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}