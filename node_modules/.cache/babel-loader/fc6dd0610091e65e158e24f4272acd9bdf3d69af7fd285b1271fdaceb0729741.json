{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { saveHomework } from '../../../api/api';\nexport default {\n  props: ['addVisible', 'chapterId'],\n  data() {\n    return {\n      formLabelWidth: '80px',\n      form: {\n        chapterId: \"\",\n        chapterName: \"\",\n        title: \"\",\n        sort: \"\",\n        answer: \"\",\n        type: \"0\",\n        content: \"\",\n        score: \"\",\n        remark: \"\"\n      },\n      content: [{\n        value: \"\",\n        option: \"\"\n      }],\n      multipleAnswers: [],\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入题目',\n          trigger: 'blur'\n        }],\n        sort: [{\n          required: true,\n          message: '请输入序号',\n          trigger: 'blur'\n        }],\n        score: [{\n          required: true,\n          message: '请输入分数',\n          trigger: 'blur'\n        }],\n        answer: [{\n          required: true,\n          message: '请输入答案',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请选择类型',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    addContent() {\n      this.content.push({\n        value: \"\",\n        option: \"\"\n      });\n    },\n    minusContent(index) {\n      this.content.splice(index, 1);\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          if (this.form.type == 0 || this.form.type == 1) {\n            for (let index = 0; index < this.content.length; index++) {\n              const element = this.content[index];\n              if (!element.value) {\n                this.$message.warning('请完善选项');\n                return;\n              }\n              if (!element.option) {\n                this.$message.warning('请完善选项内容');\n                return;\n              }\n            }\n            this.form.content = JSON.stringify(this.content);\n            if (this.form.type == 0) {\n              if (!this.form.answer) {\n                this.$message.warning(\"请选择一个正确答案\");\n                return;\n              }\n            } else if (this.form.type == 1) {\n              if (!this.multipleAnswers.length) {\n                this.$message.warning(\"请选择一个或多个正确答案\");\n                return;\n              }\n              this.form.answer = this.multipleAnswers.join(\",\");\n            }\n          } else {\n            this.form.content = \"\";\n          }\n          saveHomework(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.form = {\n        chapterId: this.form.chapterId,\n        chapterName: \"\",\n        title: \"\",\n        sort: \"\",\n        answer: \"\",\n        type: \"0\",\n        score: \"\",\n        content: \"\",\n        remark: \"\"\n      };\n      this.content = [{\n        value: \"\",\n        option: \"\"\n      }];\n      this.multipleAnswers = [];\n      this.$emit(\"addFalse\");\n    }\n  },\n  mounted() {\n    this.form.chapterId = this.$route.query.id;\n  }\n};","map":{"version":3,"names":["saveHomework","props","data","formLabelWidth","form","chapterId","chapterName","title","sort","answer","type","content","score","remark","value","option","multipleAnswers","rules","required","message","trigger","methods","addContent","push","minusContent","index","splice","submit","$refs","validate","valid","length","element","$message","warning","JSON","stringify","join","then","res","code","$notify","success","handleClose","error","$emit","mounted","$route","query","id"],"sources":["src/components/system/homework/addHomework.vue"],"sourcesContent":["<template>\n  <div>\n    <el-dialog title=\"新增作业\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"addVisible\" :before-close=\"handleClose\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n        <el-row :gutter=\"10\">\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">题目:</span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"title\" style=\"margin-bottom:0\">\n                <el-input v-model=\"form.title\" size=\"mini\" placeholder=\"请输入题目\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n            </div>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">序号:</span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"sort\" style=\"margin-bottom:0\">\n                <el-input-number size=\"mini\" v-model=\"form.sort\" :min=\"1\" label=\"请输入序号\"></el-input-number>\n              </el-form-item>\n            </div>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">类型:</span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"type\" style=\"margin-bottom:0\">\n                <el-select clearable style=\"margin-top:10px\" size=\"mini\" v-model=\"form.type\" placeholder=\"请选择\">\n                  <el-option label=\"单选\" value=\"0\"></el-option>\n                  <el-option label=\"多选\" value=\"1\"></el-option>\n                  <el-option label=\"填空\" value=\"2\"></el-option>\n                  <el-option label=\"判断\" value=\"3\"></el-option>\n                </el-select>\n              </el-form-item>\n            </div>\n          </el-col>\n\n          <el-col v-if=\"form.type == 0 || form.type == 1\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">题目内容:</span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"content\" style=\"margin-bottom:0\">\n                <div class=\"content-item\" v-for=\"(item,index) in content\" :key=\"index\">\n                  <div style=\"width:100px;margin-right:10px\">\n                    <el-input v-model=\"item.value\" size=\"mini\" placeholder=\"选项\" autocomplete=\"off\"></el-input>\n                  </div>\n                  <el-input v-model=\"item.option\" size=\"mini\" placeholder=\"选项内容\" autocomplete=\"off\"></el-input>\n                  <div v-if=\"index == (content.length - 1)\" @click=\"addContent\" style=\"margin-left:10px\"><i class=\"el-icon-circle-plus-outline\"></i></div>\n                  <div @click=\"minusContent(index)\" style=\"margin-left:10px\" v-if=\"index != 0\"><i class=\"el-icon-remove-outline\"></i></div>\n                </div>\n              </el-form-item>\n            </div>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">答案:</span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"answer\" style=\"margin-bottom:0\">\n                <!-- 单选题 -->\n                <el-radio-group v-if=\"form.type == 0\" v-model=\"form.answer\" size=\"mini\">\n                  <el-radio\n                    v-for=\"(item, index) in content\"\n                    :key=\"'radio-' + index\"\n                    :label=\"item.value\"\n                  >{{ item.value }}</el-radio>\n                </el-radio-group>\n\n                <!-- 多选题 -->\n                <el-checkbox-group v-else-if=\"form.type == 1\" v-model=\"multipleAnswers\" size=\"mini\">\n                  <el-checkbox\n                    v-for=\"(item, index) in content\"\n                    :key=\"'check-' + index\"\n                    :label=\"item.value\"\n                  >{{ item.value }}</el-checkbox>\n                </el-checkbox-group>\n\n                <!-- 其他题型 -->\n                <el-input\n                  v-else\n                  type=\"textarea\"\n                  v-model=\"form.answer\"\n                  size=\"mini\"\n                  placeholder=\"请输入答案\"\n                  autocomplete=\"off\"\n                ></el-input>\n              </el-form-item>\n            </div>\n          </el-col>\n\n          <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">分数:</span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"sort\" style=\"margin-bottom:0\">\n                <el-input-number size=\"mini\" v-model=\"form.score\" :min=\"1\" label=\"请输入分数\"></el-input-number>\n              </el-form-item>\n            </div>\n          </el-col>\n\n          <el-col style=\"margin-top:20px\" :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">备注:</span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"remark\" style=\"margin-bottom:0\">\n                <el-input type=\"textarea\" v-model=\"form.remark\" size=\"mini\" placeholder=\"请输入备注\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n            </div>\n          </el-col>\n        </el-row>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n        <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\n  import { saveHomework } from '../../../api/api'\n  export default {\n    props: ['addVisible', 'chapterId'],\n    data() {\n      return {\n        formLabelWidth: '80px',\n        form: {\n          chapterId: \"\",\n          chapterName: \"\",\n          title: \"\",\n          sort: \"\",\n          answer: \"\",\n          type: \"0\",\n          content: \"\",\n          score: \"\",\n          remark: \"\",\n        },\n        content: [\n          {\n            value: \"\",\n            option: \"\"\n          }\n        ],\n        multipleAnswers: [],\n        rules: {\n          title: [\n            { required: true, message: '请输入题目', trigger: 'blur' },\n          ],\n          sort: [\n            { required: true, message: '请输入序号', trigger: 'blur' },\n          ],\n          score: [\n            { required: true, message: '请输入分数', trigger: 'blur' },\n          ],\n          answer: [\n            { required: true, message: '请输入答案', trigger: 'blur' },\n          ],\n          type: [\n            { required: true, message: '请选择类型', trigger: 'blur' },\n          ],\n        },\n      }\n    },\n    methods: {\n      addContent() {\n        this.content.push({ value: \"\", option: \"\" })\n      },\n      minusContent(index) {\n        this.content.splice(index, 1)\n      },\n      submit() {\n        this.$refs[\"ruleForm\"].validate((valid) => {\n          if (valid) {\n            if (this.form.type == 0 || this.form.type == 1) {\n              for (let index = 0; index < this.content.length; index++) {\n                const element = this.content[index];\n                if (!element.value) {\n                  this.$message.warning('请完善选项');\n                  return\n                }\n                if (!element.option) {\n                  this.$message.warning('请完善选项内容');\n                  return\n                }\n              }\n              this.form.content = JSON.stringify(this.content)\n\n              if (this.form.type == 0) {\n                if (!this.form.answer) {\n                  this.$message.warning(\"请选择一个正确答案\");\n                  return;\n                }\n              } else if (this.form.type == 1) {\n                if (!this.multipleAnswers.length) {\n                  this.$message.warning(\"请选择一个或多个正确答案\");\n                  return;\n                }\n                this.form.answer = this.multipleAnswers.join(\",\");\n              }\n            } else {\n              this.form.content = \"\"\n            }\n\n            saveHomework(this.form).then(res => {\n              if (res.code == 1000) {\n                this.$notify.success({\n                  title: '成功',\n                  message: \"保存成功\"\n                });\n                this.handleClose();\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n            })\n          } else {\n            return false;\n          }\n        });\n      },\n      handleClose() {\n        this.form = {\n          chapterId: this.form.chapterId,\n          chapterName: \"\",\n          title: \"\",\n          sort: \"\",\n          answer: \"\",\n          type: \"0\",\n          score: \"\",\n          content: \"\",\n          remark: \"\",\n        }\n        this.content = [\n          {\n            value: \"\",\n            option: \"\"\n          }\n        ]\n        this.multipleAnswers = []\n        this.$emit(\"addFalse\")\n      },\n    },\n    mounted() {\n      this.form.chapterId = this.$route.query.id\n    }\n  }\n</script>\n\n\n<style scoped>\n  .content-item {\n    display: flex;\n    align-items: center;\n  }\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>"],"mappings":";AAoHA,SAAAA,YAAA;AACA;EACAC,KAAA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,IAAA;QACAC,SAAA;QACAC,WAAA;QACAC,KAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;QACAC,OAAA;QACAC,KAAA;QACAC,MAAA;MACA;MACAF,OAAA,GACA;QACAG,KAAA;QACAC,MAAA;MACA,EACA;MACAC,eAAA;MACAC,KAAA;QACAV,KAAA,GACA;UAAAW,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAZ,IAAA,GACA;UAAAU,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,KAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAX,MAAA,GACA;UAAAS,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAV,IAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,KAAAX,OAAA,CAAAY,IAAA;QAAAT,KAAA;QAAAC,MAAA;MAAA;IACA;IACAS,aAAAC,KAAA;MACA,KAAAd,OAAA,CAAAe,MAAA,CAAAD,KAAA;IACA;IACAE,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,SAAA1B,IAAA,CAAAM,IAAA,cAAAN,IAAA,CAAAM,IAAA;YACA,SAAAe,KAAA,MAAAA,KAAA,QAAAd,OAAA,CAAAoB,MAAA,EAAAN,KAAA;cACA,MAAAO,OAAA,QAAArB,OAAA,CAAAc,KAAA;cACA,KAAAO,OAAA,CAAAlB,KAAA;gBACA,KAAAmB,QAAA,CAAAC,OAAA;gBACA;cACA;cACA,KAAAF,OAAA,CAAAjB,MAAA;gBACA,KAAAkB,QAAA,CAAAC,OAAA;gBACA;cACA;YACA;YACA,KAAA9B,IAAA,CAAAO,OAAA,GAAAwB,IAAA,CAAAC,SAAA,MAAAzB,OAAA;YAEA,SAAAP,IAAA,CAAAM,IAAA;cACA,UAAAN,IAAA,CAAAK,MAAA;gBACA,KAAAwB,QAAA,CAAAC,OAAA;gBACA;cACA;YACA,gBAAA9B,IAAA,CAAAM,IAAA;cACA,UAAAM,eAAA,CAAAe,MAAA;gBACA,KAAAE,QAAA,CAAAC,OAAA;gBACA;cACA;cACA,KAAA9B,IAAA,CAAAK,MAAA,QAAAO,eAAA,CAAAqB,IAAA;YACA;UACA;YACA,KAAAjC,IAAA,CAAAO,OAAA;UACA;UAEAX,YAAA,MAAAI,IAAA,EAAAkC,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;gBACAnC,KAAA;gBACAY,OAAA;cACA;cACA,KAAAwB,WAAA;YACA;cACA,KAAAF,OAAA,CAAAG,KAAA;gBACArC,KAAA;gBACAY,OAAA,EAAAoB,GAAA,CAAApB;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAwB,YAAA;MACA,KAAAvC,IAAA;QACAC,SAAA,OAAAD,IAAA,CAAAC,SAAA;QACAC,WAAA;QACAC,KAAA;QACAC,IAAA;QACAC,MAAA;QACAC,IAAA;QACAE,KAAA;QACAD,OAAA;QACAE,MAAA;MACA;MACA,KAAAF,OAAA,IACA;QACAG,KAAA;QACAC,MAAA;MACA,EACA;MACA,KAAAC,eAAA;MACA,KAAA6B,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAA1C,IAAA,CAAAC,SAAA,QAAA0C,MAAA,CAAAC,KAAA,CAAAC,EAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}