{"ast":null,"code":"import { editSchool, getSchoolById } from '../../../api/api';\nexport default {\n  data() {\n    return {\n      formLabelWidth: '80px',\n      form: {\n        name: \"\"\n      },\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入学校名称',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['updateVisible', 'updateId'],\n  methods: {\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          editSchool(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.$emit(\"updateFalse\");\n    }\n  },\n  created() {},\n  mounted() {},\n  watch: {\n    updateId(newVal) {\n      if (newVal) {\n        getSchoolById({\n          id: newVal\n        }).then(res => {\n          if (res.code == 1000) {\n            console.log(res);\n            this.form = res.data;\n          } else {\n            this.$notify.error({\n              title: '错误',\n              message: res.message\n            });\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["editSchool","getSchoolById","data","formLabelWidth","form","name","rules","required","message","trigger","props","methods","submit","$refs","validate","valid","then","res","code","$notify","success","title","handleClose","error","$emit","created","mounted","watch","updateId","newVal","id","console","log"],"sources":["src/components/system/school/updateSchool.vue"],"sourcesContent":["<template>\n<div>\n  <el-dialog title=\"编辑学校表\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"updateVisible\" :before-close=\"handleClose\">\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\n      <el-row :gutter=\"10\">\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\n            <span class=\"search-title\">\n                名称:\n                </span>\n            <div style=\"width:100%\">\n              <el-form-item prop=\"name\" style=\"margin-bottom:0\">\n                  <el-input v-model=\"form.name\" size=\"mini\" placeholder=\"请输入名称\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n            </div>\n        </el-col>\n      </el-row>\n    </el-form>\n    <div slot=\"footer\" class=\"dialog-footer\">\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\n    </div>\n  </el-dialog>\n</div>\n</template>\n\n<script>\n  import {editSchool,getSchoolById} from '../../../api/api'\n  export default {\n    data() {\n      return{\n        formLabelWidth: '80px',\n        form: {\n          name: \"\",\n        },\n        rules: {\n          name: [\n            { required: true, message: '请输入学校名称', trigger: 'blur' },\n          ],\n        },\n      }\n    },\n    props: ['updateVisible','updateId'],\n    methods: {\n      submit() {\n        this.$refs[\"ruleForm\"].validate((valid) => {\n          if (valid) {\n            editSchool(this.form).then(res => {\n              if(res.code == 1000) {\n                this.$notify.success({\n                  title: '成功',\n                  message: \"保存成功\"\n                });\n                this.handleClose();\n              } else {\n                this.$notify.error({\n                  title: '错误',\n                  message: res.message\n                });\n              }\n            })\n          } else {\n            return false;\n          }\n        });\n      },\n      handleClose() {\n        this.$emit(\"updateFalse\")\n      },\n     \n    },\n    created() {\n     \n    },\n    mounted() {\n      \n    },\n    watch: {\n      updateId(newVal) {\n        if(newVal) {\n          getSchoolById({id:newVal}).then(res => {\n            if(res.code == 1000) {\n              console.log(res)\n              this.form = res.data\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          })\n        }\n        \n      }\n    }\n }\n</script>\n\n<style   scoped>\n  .el-col {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      margin-top: 12px\n  }\n  .search-title {\n      font-family: '黑体';\n      float: right;\n      white-space: nowrap;\n      font-size: 14px;\n      width: 84px;\n      text-align: right;\n  }\n  .el-tree {\n      border: 1px solid #BDC1C9;\n  }\n</style>"],"mappings":"AA0BA,SAAAA,UAAA,EAAAC,aAAA;AACA;EACAC,KAAA;IACA;MACAC,cAAA;MACAC,IAAA;QACAC,IAAA;MACA;MACAC,KAAA;QACAD,IAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,KAAA;EACAC,OAAA;IACAC,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAf,UAAA,MAAAI,IAAA,EAAAY,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAC,OAAA,CAAAC,OAAA;gBACAC,KAAA;gBACAb,OAAA;cACA;cACA,KAAAc,WAAA;YACA;cACA,KAAAH,OAAA,CAAAI,KAAA;gBACAF,KAAA;gBACAb,OAAA,EAAAS,GAAA,CAAAT;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAc,YAAA;MACA,KAAAE,KAAA;IACA;EAEA;EACAC,QAAA,GAEA;EACAC,QAAA,GAEA;EACAC,KAAA;IACAC,SAAAC,MAAA;MACA,IAAAA,MAAA;QACA5B,aAAA;UAAA6B,EAAA,EAAAD;QAAA,GAAAb,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAC,IAAA;YACAa,OAAA,CAAAC,GAAA,CAAAf,GAAA;YACA,KAAAb,IAAA,GAAAa,GAAA,CAAAf,IAAA;UACA;YACA,KAAAiB,OAAA,CAAAI,KAAA;cACAF,KAAA;cACAb,OAAA,EAAAS,GAAA,CAAAT;YACA;UACA;QACA;MACA;IAEA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}