{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { getIndexData, getIndexSexData, getTaskChart, getTaskIndexList } from '../../../api/api';\nimport * as echarts from \"echarts\";\nexport default {\n  data() {\n    return {\n      top: {\n        userNum: 0,\n        studentNum: 0,\n        teacherNum: 0,\n        questionNum: 0\n      },\n      sex: [],\n      tasks: [],\n      nums: [],\n      taskList: [],\n      taskCard: [],\n      today: new Date(),\n      myChart: null,\n      pieChart: null\n    };\n  },\n  methods: {\n    initTeacherCharts() {\n      // 课程数据柱状图\n      const courseChart = echarts.init(document.getElementById('course-chart'));\n      courseChart.setOption({\n        title: {\n          text: '课程学生数据',\n          left: 'center'\n        },\n        tooltip: {},\n        legend: {\n          data: ['选课人数', '平均成绩'],\n          top: 30\n        },\n        xAxis: {\n          type: 'category',\n          data: this.teacherCourses.map(c => c.name),\n          axisLabel: {\n            rotate: 30\n          }\n        },\n        yAxis: [{\n          type: 'value',\n          name: '人数'\n        }, {\n          type: 'value',\n          name: '分数'\n        }],\n        series: [{\n          name: '选课人数',\n          type: 'bar',\n          data: this.teacherCourses.map(c => c.studentCount)\n        }, {\n          name: '平均成绩',\n          type: 'line',\n          yAxisIndex: 1,\n          data: this.teacherCourses.map(c => c.avgScore)\n        }]\n      });\n\n      // 教学进度环形图\n      const progressChart = echarts.init(document.getElementById('progress-chart'));\n      progressChart.setOption({\n        title: {\n          text: '教学进度',\n          left: 'center'\n        },\n        series: [{\n          type: 'pie',\n          radius: ['40%', '70%'],\n          label: {\n            show: true,\n            formatter: '{b}: {c} ({d}%)'\n          },\n          data: [{\n            value: this.completedLessons,\n            name: '已完成章节'\n          }, {\n            value: this.totalLessons - this.completedLessons,\n            name: '待完成章节'\n          }]\n        }]\n      });\n    },\n    // 新增的四个跳转方法\n    toTeacherTask() {\n      this.setActiveMenu(\"/teacherTask\", \"课程管理\");\n      this.$router.push(\"/teacherTask\");\n    },\n    toTeacherChapter() {\n      this.setActiveMenu(\"/teacherChapter\", \"章节管理\");\n      this.$router.push(\"/teacherChapter\");\n    },\n    toTeacherTest() {\n      this.setActiveMenu(\"/teacherTest\", \"测试管理\");\n      this.$router.push(\"/teacherTest\");\n    },\n    toQuestion() {\n      this.setActiveMenu(\"/question\", \"题库管理\");\n      this.$router.push(\"/question\");\n    },\n    // 公共方法设置激活菜单\n    setActiveMenu(path, name) {\n      const param = {\n        \"name\": name,\n        \"url\": path\n      };\n      this.$store.commit('menu/addActiveMenu', param);\n      this.$store.commit('menu/setActiveMenu', path);\n    },\n    // 原有的方法\n    toTask() {\n      this.setActiveMenu(\"/teacherTask\", \"教师课程管理\");\n      this.$router.push(\"/teacherTask\");\n    },\n    toStudent() {\n      this.setActiveMenu(\"/student\", \"学生管理\");\n      this.$router.push(\"/student\");\n    },\n    toTeacher() {\n      this.setActiveMenu(\"/teacher\", \"教师管理\");\n      this.$router.push(\"/teacher\");\n    },\n    // 初始化图表\n    initCharts() {\n      // 柱状图/折线图\n      if (this.myChart) {\n        this.myChart.dispose();\n      }\n      this.myChart = echarts.init(document.getElementById(\"chart\"));\n      const option = {\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['学生数量']\n        },\n        backgroundColor: '#fff',\n        xAxis: [{\n          type: 'category',\n          color: '#59588D',\n          data: this.tasks,\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(107,107,107,0.37)'\n            }\n          },\n          axisTick: {\n            show: true\n          }\n        }],\n        yAxis: [{\n          axisLine: {\n            lineStyle: {\n              color: 'rgba(107,107,107,0.37)'\n            }\n          },\n          axisTick: {\n            show: true\n          },\n          splitLine: {\n            lineStyle: {\n              color: 'rgba(131,101,101,0.2)',\n              type: 'dashed'\n            }\n          }\n        }],\n        series: [{\n          data: this.nums,\n          type: 'line',\n          name: '折线图',\n          symbol: 'none',\n          areaStyle: {\n            color: \"#E6F8EE\"\n          },\n          lineStyle: {\n            color: '#3AC977',\n            width: 2,\n            shadowColor: 'rgba(0, 0, 0, 0.3)',\n            shadowBlur: 15,\n            shadowOffsetY: 20\n          },\n          zlevel: 1\n        }, {\n          type: 'bar',\n          data: this.nums,\n          barWidth: '15px',\n          name: '柱状图',\n          itemStyle: {\n            normal: {\n              color: function (params) {\n                let colorArr = params.value > 0 ? ['#7866BE', '#7866BE'] : ['rgba(0,0,0,0)', 'rgba(0,0,0,0)'];\n                return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                  offset: 0,\n                  color: colorArr[0]\n                }, {\n                  offset: 1,\n                  color: colorArr[1]\n                }], false);\n              },\n              barBorderRadius: [30, 30, 0, 0]\n            }\n          },\n          label: {\n            normal: {\n              show: true,\n              fontSize: 13,\n              color: '#333',\n              position: 'top'\n            }\n          },\n          zlevel: 2\n        }]\n      };\n      this.myChart.setOption(option);\n\n      // 饼图\n      if (this.pieChart) {\n        this.pieChart.dispose();\n      }\n      this.pieChart = echarts.init(document.getElementById(\"pie-chart\"));\n      const optionPie = {\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          center: 'center'\n        },\n        series: [{\n          name: '学生性别分析',\n          type: 'pie',\n          radius: '50%',\n          data: this.sex,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          }\n        }]\n      };\n      this.pieChart.setOption(optionPie);\n    },\n    // 获取数据\n    fetchData() {\n      // 获取顶部卡片数据\n      getIndexData({\n        type: 1\n      }).then(res => {\n        if (res.code == 1000) {\n          this.top = res.data;\n        }\n      });\n\n      // 获取性别数据\n      getIndexSexData({\n        type: 1\n      }).then(res => {\n        if (res.code == 1000) {\n          this.sex = res.data;\n          this.initCharts();\n        }\n      });\n\n      // 获取图表数据\n      getTaskChart({\n        type: 1\n      }).then(res => {\n        if (res.code == 1000) {\n          this.tasks = res.data.tasks;\n          this.nums = res.data.nums;\n          this.initCharts();\n        }\n      });\n\n      // 获取课程列表数据\n      getTaskIndexList({\n        type: 1\n      }).then(res => {\n        if (res.code == 1000) {\n          this.taskList = res.data.slice(0, 5);\n          this.taskCard = res.data.slice(0, 3);\n        }\n      });\n    },\n    // 窗口大小改变时重绘图表\n    handleResize() {\n      if (this.myChart) {\n        this.myChart.resize();\n      }\n      if (this.pieChart) {\n        this.pieChart.resize();\n      }\n    }\n  },\n  created() {\n    this.fetchData();\n  },\n  mounted() {\n    this.initTeacherCharts();\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n    if (this.myChart) {\n      this.myChart.dispose();\n    }\n    if (this.pieChart) {\n      this.pieChart.dispose();\n    }\n  }\n};","map":{"version":3,"names":["getIndexData","getIndexSexData","getTaskChart","getTaskIndexList","echarts","data","top","userNum","studentNum","teacherNum","questionNum","sex","tasks","nums","taskList","taskCard","today","Date","myChart","pieChart","methods","initTeacherCharts","courseChart","init","document","getElementById","setOption","title","text","left","tooltip","legend","xAxis","type","teacherCourses","map","c","name","axisLabel","rotate","yAxis","series","studentCount","yAxisIndex","avgScore","progressChart","radius","label","show","formatter","value","completedLessons","totalLessons","toTeacherTask","setActiveMenu","$router","push","toTeacherChapter","toTeacherTest","toQuestion","path","param","$store","commit","toTask","toStudent","toTeacher","initCharts","dispose","option","trigger","backgroundColor","color","axisLine","lineStyle","axisTick","splitLine","symbol","areaStyle","width","shadowColor","shadowBlur","shadowOffsetY","zlevel","barWidth","itemStyle","normal","params","colorArr","graphic","LinearGradient","offset","barBorderRadius","fontSize","position","optionPie","center","emphasis","shadowOffsetX","fetchData","then","res","code","slice","handleResize","resize","created","mounted","window","addEventListener","beforeDestroy","removeEventListener"],"sources":["src/views/system/index/teacherIndex.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-row :gutter=\"20\" class=\"index-top\">\r\n            <!-- 第一张卡片 - 课程管理 -->\r\n            <el-col :span=\"6\">\r\n                <div class=\"grid-content bg-purple\">\r\n                    <el-card \r\n                        shadow=\"always\" \r\n                        class=\"dashboard-card card-1\"\r\n                        @click.native=\"toTeacherTask()\"\r\n                        :body-style=\"{ cursor: 'pointer', padding: '20px' }\">\r\n                        <div class=\"card-content\">\r\n                            <img src=\"../../../assets/image/index-01.png\" class=\"card-icon\">\r\n                            <div class=\"card-text\">\r\n                                <div class=\"card-title\">课程管理</div>\r\n                                <div class=\"card-value\">{{top.userNum || 0}}门</div>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>\r\n                </div>\r\n            </el-col>\r\n            \r\n            <!-- 第二张卡片 - 章节管理 -->\r\n            <el-col :span=\"6\">\r\n                <div class=\"grid-content bg-purple\">\r\n                    <el-card \r\n                        shadow=\"always\" \r\n                        class=\"dashboard-card card-2\"\r\n                        @click.native=\"toTeacherChapter()\"\r\n                        :body-style=\"{ cursor: 'pointer', padding: '20px' }\">\r\n                        <div class=\"card-content\">\r\n                            <img src=\"../../../assets/image/index-02.png\" class=\"card-icon\">\r\n                            <div class=\"card-text\">\r\n                                <div class=\"card-title\">章节管理</div>\r\n                                <div class=\"card-value\">{{top.studentNum || 0}}章</div>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>\r\n                </div>\r\n            </el-col>\r\n            \r\n            <!-- 第三张卡片 - 测试管理 -->\r\n            <el-col :span=\"6\">\r\n                <div class=\"grid-content bg-purple\">\r\n                    <el-card \r\n                        shadow=\"always\" \r\n                        class=\"dashboard-card card-3\"\r\n                        @click.native=\"toTeacherTest()\"\r\n                        :body-style=\"{ cursor: 'pointer', padding: '20px' }\">\r\n                        <div class=\"card-content\">\r\n                            <img src=\"../../../assets/image/avator.png\" class=\"card-icon\">\r\n                            <div class=\"card-text\">\r\n                                <div class=\"card-title\">测试管理</div>\r\n                                <div class=\"card-value\">{{top.teacherNum || 0}}个</div>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>\r\n                </div>\r\n            </el-col>\r\n            \r\n            <!-- 第四张卡片 - 答疑管理 -->\r\n            <el-col :span=\"6\">\r\n                <div class=\"grid-content bg-purple\">\r\n                    <el-card \r\n                        shadow=\"always\" \r\n                        class=\"dashboard-card card-4\"\r\n                        @click.native=\"toQuestion()\"\r\n                        :body-style=\"{ cursor: 'pointer', padding: '20px' }\">\r\n                        <div class=\"card-content\">\r\n                            <img src=\"../../../assets/image/index-05.png\" class=\"card-icon\">\r\n                            <div class=\"card-text\">\r\n                                <div class=\"card-title\">答疑管理</div>\r\n                                <div class=\"card-value\">{{top.questionNum || 0}}题</div>\r\n                            </div>\r\n                        </div>\r\n                    </el-card>\r\n                </div>\r\n            </el-col>\r\n        </el-row>\r\n        \r\n    <el-row :gutter=\"20\" class=\"index-center\">\r\n        <el-col :span=\"16\">\r\n            <el-card shadow=\"always\" class=\"item-07\">\r\n                <div id=\"course-chart\" style=\"width:100%;height:400px\"></div>\r\n            </el-card>\r\n        </el-col>\r\n        <el-col :span=\"8\">\r\n            <el-card shadow=\"always\" class=\"item-08\">\r\n                <div id=\"progress-chart\" style=\"width:100%;height:400px\"></div>\r\n            </el-card>\r\n        </el-col>\r\n    </el-row>\r\n        \r\n        <el-row :gutter=\"20\" class=\"index-center-01\">\r\n            <el-col :span=\"24\">\r\n                <el-card shadow=\"always\" class=\"item-09\">\r\n                    <el-table\r\n                        :data=\"taskList\"\r\n                        :header-cell-style=\"{\r\n                            'color': '#4A2B90',\r\n                            'background-color': '#ECE9F4',\r\n                        }\"\r\n                        :row-style=\"{\r\n                            'color': '#888897',\r\n                            'font-size': '15px',\r\n                            'font-family':'黑体'\r\n                        }\"\r\n                        stripe\r\n                        style=\"width: 100%\">\r\n                        <el-table-column\r\n                            prop=\"name\"\r\n                            label=\"课程名称\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                            prop=\"teacherName\"\r\n                            label=\"教师\">\r\n                            <template slot-scope=\"scope\">\r\n                                <div style=\"display:flex;align-items: center\">\r\n                                    <img style=\"width:35px;height:35px\" src=\"../../../assets/image/avator.png\">\r\n                                    <div style=\"margin-left:10px\">{{scope.row.teacherName}}</div>\r\n                                </div>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                            prop=\"major\"\r\n                            label=\"专业\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-button size=\"mini\" type=\"primary\">{{scope.row.major}}</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                            prop=\"classification\"\r\n                            label=\"课程分类\">\r\n                            <template slot-scope=\"scope\">\r\n                                <el-button size=\"mini\" type=\"primary\">{{scope.row.classification}}</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                            prop=\"num\"\r\n                            label=\"学生数量\">\r\n                        </el-table-column>\r\n                        <el-table-column\r\n                            prop=\"createTime\"\r\n                            label=\"创建时间\">\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n        \r\n        <el-row :gutter=\"20\" class=\"index-under\">\r\n            <el-col :span=\"16\">\r\n                <el-card shadow=\"always\" class=\"item-10\">\r\n                    <div class=\"card-header\">\r\n                        <span>课程列表</span>\r\n                        <el-button \r\n                            style=\"height:35px;background:#8470D1\" \r\n                            size=\"mini\" \r\n                            type=\"primary\" \r\n                            @click=\"toTask()\">\r\n                            查看全部\r\n                        </el-button>\r\n                    </div>\r\n                    <div class=\"card-list-container\">\r\n                        <el-row>\r\n                            <el-col \r\n                                class=\"item-10-item\" \r\n                                :span=\"7\" \r\n                                v-for=\"(item,index) in taskCard\" \r\n                                :key=\"index\">\r\n                                <img :src=\"$store.state.configure.HOST + item.image\" class=\"course-image\">\r\n                                <div class=\"course-name\">{{item.name}}</div>\r\n                                <div class=\"course-footer\">\r\n                                    <div class=\"course-time\">{{item.createTime}}</div>\r\n                                    <el-button size=\"mini\" class=\"teacher-btn\">{{item.teacherName}}</el-button>\r\n                                </div>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </div>\r\n                </el-card>\r\n            </el-col>\r\n            <el-col :span=\"8\">\r\n                <el-card shadow=\"always\" class=\"item-11\">\r\n                    <el-calendar v-model=\"today\"></el-calendar>\r\n                </el-card>\r\n            </el-col>\r\n        </el-row>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {getIndexData, getIndexSexData, getTaskChart, getTaskIndexList} from '../../../api/api'\r\nimport * as echarts from \"echarts\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            top: {\r\n                userNum: 0,\r\n                studentNum: 0,\r\n                teacherNum: 0,\r\n                questionNum: 0\r\n            },\r\n            sex: [],\r\n            tasks: [],\r\n            nums: [],\r\n            taskList: [],\r\n            taskCard: [],\r\n            today: new Date(),\r\n            myChart: null,\r\n            pieChart: null,\r\n        }\r\n    },\r\n    methods: {\r\n                initTeacherCharts() {\r\n            // 课程数据柱状图\r\n            const courseChart = echarts.init(document.getElementById('course-chart'));\r\n            courseChart.setOption({\r\n                title: { text: '课程学生数据', left: 'center' },\r\n                tooltip: {},\r\n                legend: { data: ['选课人数', '平均成绩'], top: 30 },\r\n                xAxis: { \r\n                    type: 'category',\r\n                    data: this.teacherCourses.map(c => c.name),\r\n                    axisLabel: { rotate: 30 }\r\n                },\r\n                yAxis: [{ type: 'value', name: '人数' }, { type: 'value', name: '分数' }],\r\n                series: [\r\n                    {\r\n                        name: '选课人数',\r\n                        type: 'bar',\r\n                        data: this.teacherCourses.map(c => c.studentCount)\r\n                    },\r\n                    {\r\n                        name: '平均成绩',\r\n                        type: 'line',\r\n                        yAxisIndex: 1,\r\n                        data: this.teacherCourses.map(c => c.avgScore)\r\n                    }\r\n                ]\r\n            });\r\n            \r\n            // 教学进度环形图\r\n            const progressChart = echarts.init(document.getElementById('progress-chart'));\r\n            progressChart.setOption({\r\n                title: { text: '教学进度', left: 'center' },\r\n                series: [{\r\n                    type: 'pie',\r\n                    radius: ['40%', '70%'],\r\n                    label: { show: true, formatter: '{b}: {c} ({d}%)' },\r\n                    data: [\r\n                        { value: this.completedLessons, name: '已完成章节' },\r\n                        { value: this.totalLessons - this.completedLessons, name: '待完成章节' }\r\n                    ]\r\n                }]\r\n            });\r\n        },\r\n        // 新增的四个跳转方法\r\n        toTeacherTask() {\r\n            this.setActiveMenu(\"/teacherTask\", \"课程管理\");\r\n            this.$router.push(\"/teacherTask\");\r\n        },\r\n        toTeacherChapter() {\r\n            this.setActiveMenu(\"/teacherChapter\", \"章节管理\");\r\n            this.$router.push(\"/teacherChapter\");\r\n        },\r\n        toTeacherTest() {\r\n            this.setActiveMenu(\"/teacherTest\", \"测试管理\");\r\n            this.$router.push(\"/teacherTest\");\r\n        },\r\n        toQuestion() {\r\n            this.setActiveMenu(\"/question\", \"题库管理\");\r\n            this.$router.push(\"/question\");\r\n        },\r\n        \r\n        // 公共方法设置激活菜单\r\n        setActiveMenu(path, name) {\r\n            const param = {\r\n                \"name\": name,\r\n                \"url\": path\r\n            }\r\n            this.$store.commit('menu/addActiveMenu', param);\r\n            this.$store.commit('menu/setActiveMenu', path);\r\n        },\r\n        \r\n        // 原有的方法\r\n        toTask() {\r\n            this.setActiveMenu(\"/teacherTask\", \"教师课程管理\");\r\n            this.$router.push(\"/teacherTask\");\r\n        },\r\n        toStudent() {\r\n            this.setActiveMenu(\"/student\", \"学生管理\");\r\n            this.$router.push(\"/student\");\r\n        },\r\n        toTeacher() {\r\n            this.setActiveMenu(\"/teacher\", \"教师管理\");\r\n            this.$router.push(\"/teacher\");\r\n        },\r\n        \r\n        // 初始化图表\r\n        initCharts() {\r\n            // 柱状图/折线图\r\n            if (this.myChart) {\r\n                this.myChart.dispose();\r\n            }\r\n            this.myChart = echarts.init(document.getElementById(\"chart\"));\r\n            \r\n            const option = {\r\n                tooltip: {\r\n                    trigger: 'axis'\r\n                },\r\n                legend: {\r\n                    data: ['学生数量']\r\n                },\r\n                backgroundColor: '#fff',\r\n                xAxis: [{\r\n                    type: 'category',\r\n                    color: '#59588D',\r\n                    data: this.tasks,\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: 'rgba(107,107,107,0.37)',\r\n                        }\r\n                    },\r\n                    axisTick: {\r\n                        show: true\r\n                    },\r\n                }],\r\n                yAxis: [{\r\n                    axisLine: {\r\n                        lineStyle: {\r\n                            color: 'rgba(107,107,107,0.37)',\r\n                        }\r\n                    },\r\n                    axisTick: {\r\n                        show: true\r\n                    },\r\n                    splitLine: {\r\n                        lineStyle: {\r\n                            color: 'rgba(131,101,101,0.2)',\r\n                            type: 'dashed',\r\n                        }\r\n                    }\r\n                }],\r\n                series: [{\r\n                    data: this.nums,\r\n                    type: 'line',\r\n                    name: '折线图',\r\n                    symbol: 'none',\r\n                    areaStyle: {\r\n                        color: \"#E6F8EE\"\r\n                    },\r\n                    lineStyle: {\r\n                        color: '#3AC977',\r\n                        width: 2,\r\n                        shadowColor: 'rgba(0, 0, 0, 0.3)',\r\n                        shadowBlur: 15,\r\n                        shadowOffsetY: 20,\r\n                    },\r\n                    zlevel: 1\r\n                },{\r\n                    type: 'bar',\r\n                    data: this.nums,\r\n                    barWidth: '15px',\r\n                    name: '柱状图',\r\n                    itemStyle: {\r\n                        normal: {\r\n                            color: function(params) {\r\n                                let colorArr = params.value > 0 ? ['#7866BE', '#7866BE'] : ['rgba(0,0,0,0)', 'rgba(0,0,0,0)']\r\n                                return new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\r\n                                    offset: 0,\r\n                                    color: colorArr[0]\r\n                                }, {\r\n                                    offset: 1,\r\n                                    color: colorArr[1]\r\n                                }], false)\r\n                            },\r\n                            barBorderRadius: [30,30,0,0]\r\n                        },\r\n                    },\r\n                    label: {\r\n                        normal: {\r\n                            show: true,\r\n                            fontSize: 13,\r\n                            color: '#333',\r\n                            position: 'top',\r\n                        }\r\n                    },\r\n                    zlevel: 2\r\n                }]\r\n            };\r\n            this.myChart.setOption(option);\r\n            \r\n            // 饼图\r\n            if (this.pieChart) {\r\n                this.pieChart.dispose();\r\n            }\r\n            this.pieChart = echarts.init(document.getElementById(\"pie-chart\"));\r\n            \r\n            const optionPie = {\r\n                tooltip: {\r\n                    trigger: 'item'\r\n                },\r\n                legend: {\r\n                    center: 'center'\r\n                },\r\n                series: [\r\n                    {\r\n                        name: '学生性别分析',\r\n                        type: 'pie',\r\n                        radius: '50%',\r\n                        data: this.sex,\r\n                        emphasis: {\r\n                            itemStyle: {\r\n                                shadowBlur: 10,\r\n                                shadowOffsetX: 0,\r\n                                shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n                            }\r\n                        }\r\n                    }\r\n                ]\r\n            };\r\n            this.pieChart.setOption(optionPie);\r\n        },\r\n        \r\n        // 获取数据\r\n        fetchData() {\r\n            // 获取顶部卡片数据\r\n            getIndexData({type:1}).then(res => {\r\n                if (res.code == 1000) {\r\n                    this.top = res.data;\r\n                }\r\n            });\r\n            \r\n            // 获取性别数据\r\n            getIndexSexData({type:1}).then(res => {\r\n                if (res.code == 1000) {\r\n                    this.sex = res.data;\r\n                    this.initCharts();\r\n                }\r\n            });\r\n            \r\n            // 获取图表数据\r\n            getTaskChart({type:1}).then(res => {\r\n                if (res.code == 1000) {\r\n                    this.tasks = res.data.tasks;\r\n                    this.nums = res.data.nums;\r\n                    this.initCharts();\r\n                }\r\n            });\r\n            \r\n            // 获取课程列表数据\r\n            getTaskIndexList({type:1}).then(res => {\r\n                if (res.code == 1000) {\r\n                    this.taskList = res.data.slice(0,5);\r\n                    this.taskCard = res.data.slice(0,3);\r\n                }\r\n            });\r\n        },\r\n        \r\n        // 窗口大小改变时重绘图表\r\n        handleResize() {\r\n            if (this.myChart) {\r\n                this.myChart.resize();\r\n            }\r\n            if (this.pieChart) {\r\n                this.pieChart.resize();\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        this.fetchData();\r\n    },\r\n    mounted() {\r\n        this.initTeacherCharts();\r\n        window.addEventListener('resize', this.handleResize);\r\n    },\r\n    beforeDestroy() {\r\n        window.removeEventListener('resize', this.handleResize);\r\n        if (this.myChart) {\r\n            this.myChart.dispose();\r\n        }\r\n        if (this.pieChart) {\r\n            this.pieChart.dispose();\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 顶部卡片样式 */\r\n.index-top {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.dashboard-card {\r\n    transition: all 0.3s ease;\r\n    border-radius: 10px;\r\n    border: none;\r\n    height: 100%;\r\n}\r\n\r\n.card-content {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.card-icon {\r\n    width: 80px;\r\n    height: 80px;\r\n    margin-right: 15px;\r\n}\r\n\r\n.card-text {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n}\r\n\r\n.card-title {\r\n    color: #4A2B90;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.card-value {\r\n    color: #4A2B90;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n}\r\n\r\n/* 卡片颜色和悬停效果 */\r\n.card-1 {\r\n    background-color: #F0EBFA;\r\n}\r\n.card-1:hover {\r\n    background-color: #D8C7F5;\r\n}\r\n\r\n.card-2 {\r\n    background-color: #E8F4FE;\r\n}\r\n.card-2:hover {\r\n    background-color: #C3E3FD;\r\n}\r\n\r\n.card-3 {\r\n    background-color: #E8F8F0;\r\n}\r\n.card-3:hover {\r\n    background-color: #C3EBD6;\r\n}\r\n\r\n.card-4 {\r\n    background-color: #FEF0E8;\r\n}\r\n.card-4:hover {\r\n    background-color: #FDD8C3;\r\n}\r\n\r\n/* 图表区域样式 */\r\n.index-center {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n#chart, #pie-chart {\r\n    width: 100%;\r\n    height: 400px;\r\n}\r\n\r\n/* 课程表格区域样式 */\r\n.index-center-01 {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n/* 底部课程列表和日历区域样式 */\r\n.index-under {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n    width: 100%;\r\n    height: 50px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 15px;\r\n}\r\n\r\n.card-list-container {\r\n    width: 100%;\r\n    height: 260px;\r\n}\r\n\r\n.item-10-item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 10px;\r\n}\r\n\r\n.course-image {\r\n    border-radius: 20px;\r\n    width: 90%;\r\n    height: 120px;\r\n    object-fit: cover;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.course-name {\r\n    width: 90%;\r\n    text-align: center;\r\n    margin-bottom: 10px;\r\n    font-weight: bold;\r\n}\r\n\r\n.course-footer {\r\n    width: 90%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n}\r\n\r\n.course-time {\r\n    height: 35px;\r\n    font-size: 13px;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.teacher-btn {\r\n    height: 30px;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}